module.exports = {

"[project]/node_modules/mathjax-full/js/output/common/OutputJax.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __extends = this && this.__extends || function() {
    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || ({
            __proto__: []
        }) instanceof Array && function(d, b) {
            d.__proto__ = b;
        } || function(d, b) {
            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
        };
        return extendStatics(d, b);
    };
    return function(d, b) {
        if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
}();
var __assign = this && this.__assign || function() {
    __assign = Object.assign || function(t) {
        for(var s, i = 1, n = arguments.length; i < n; i++){
            s = arguments[i];
            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __read = this && this.__read || function(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);
    } catch (error) {
        e = {
            error: error
        };
    } finally{
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        } finally{
            if (e) throw e.error;
        }
    }
    return ar;
};
var __values = this && this.__values || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function() {
            if (o && i >= o.length) o = void 0;
            return {
                value: o && o[i++],
                done: !o
            };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CommonOutputJax = void 0;
var OutputJax_js_1 = __turbopack_context__.r("[project]/node_modules/mathjax-full/js/core/OutputJax.js [app-rsc] (ecmascript)");
var MathItem_js_1 = __turbopack_context__.r("[project]/node_modules/mathjax-full/js/core/MathItem.js [app-rsc] (ecmascript)");
var Options_js_1 = __turbopack_context__.r("[project]/node_modules/mathjax-full/js/util/Options.js [app-rsc] (ecmascript)");
var lengths_js_1 = __turbopack_context__.r("[project]/node_modules/mathjax-full/js/util/lengths.js [app-rsc] (ecmascript)");
var Styles_js_1 = __turbopack_context__.r("[project]/node_modules/mathjax-full/js/util/Styles.js [app-rsc] (ecmascript)");
var StyleList_js_1 = __turbopack_context__.r("[project]/node_modules/mathjax-full/js/util/StyleList.js [app-rsc] (ecmascript)");
var CommonOutputJax = function(_super) {
    __extends(CommonOutputJax, _super);
    function CommonOutputJax(options, defaultFactory, defaultFont) {
        if (options === void 0) {
            options = null;
        }
        if (defaultFactory === void 0) {
            defaultFactory = null;
        }
        if (defaultFont === void 0) {
            defaultFont = null;
        }
        var _this = this;
        var _a = __read((0, Options_js_1.separateOptions)(options, defaultFont.OPTIONS), 2), jaxOptions = _a[0], fontOptions = _a[1];
        _this = _super.call(this, jaxOptions) || this;
        _this.factory = _this.options.wrapperFactory || new defaultFactory();
        _this.factory.jax = _this;
        _this.cssStyles = _this.options.cssStyles || new StyleList_js_1.CssStyles();
        _this.font = _this.options.font || new defaultFont(fontOptions);
        _this.unknownCache = new Map();
        return _this;
    }
    CommonOutputJax.prototype.typeset = function(math, html) {
        this.setDocument(html);
        var node = this.createNode();
        this.toDOM(math, node, html);
        return node;
    };
    CommonOutputJax.prototype.createNode = function() {
        var jax = this.constructor.NAME;
        return this.html('mjx-container', {
            'class': 'MathJax',
            jax: jax
        });
    };
    CommonOutputJax.prototype.setScale = function(node) {
        var scale = this.math.metrics.scale * this.options.scale;
        if (scale !== 1) {
            this.adaptor.setStyle(node, 'fontSize', (0, lengths_js_1.percent)(scale));
        }
    };
    CommonOutputJax.prototype.toDOM = function(math, node, html) {
        if (html === void 0) {
            html = null;
        }
        this.setDocument(html);
        this.math = math;
        this.pxPerEm = math.metrics.ex / this.font.params.x_height;
        math.root.setTeXclass(null);
        this.setScale(node);
        this.nodeMap = new Map();
        this.container = node;
        this.processMath(math.root, node);
        this.nodeMap = null;
        this.executeFilters(this.postFilters, math, html, node);
    };
    CommonOutputJax.prototype.getBBox = function(math, html) {
        this.setDocument(html);
        this.math = math;
        math.root.setTeXclass(null);
        this.nodeMap = new Map();
        var bbox = this.factory.wrap(math.root).getOuterBBox();
        this.nodeMap = null;
        return bbox;
    };
    CommonOutputJax.prototype.getMetrics = function(html) {
        var e_1, _a;
        this.setDocument(html);
        var adaptor = this.adaptor;
        var maps = this.getMetricMaps(html);
        try {
            for(var _b = __values(html.math), _c = _b.next(); !_c.done; _c = _b.next()){
                var math = _c.value;
                var parent_1 = adaptor.parent(math.start.node);
                if (math.state() < MathItem_js_1.STATE.METRICS && parent_1) {
                    var map = maps[math.display ? 1 : 0];
                    var _d = map.get(parent_1), em = _d.em, ex = _d.ex, containerWidth = _d.containerWidth, lineWidth = _d.lineWidth, scale = _d.scale, family = _d.family;
                    math.setMetrics(em, ex, containerWidth, lineWidth, scale);
                    if (this.options.mtextInheritFont) {
                        math.outputData.mtextFamily = family;
                    }
                    if (this.options.merrorInheritFont) {
                        math.outputData.merrorFamily = family;
                    }
                    math.state(MathItem_js_1.STATE.METRICS);
                }
            }
        } catch (e_1_1) {
            e_1 = {
                error: e_1_1
            };
        } finally{
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            } finally{
                if (e_1) throw e_1.error;
            }
        }
    };
    CommonOutputJax.prototype.getMetricsFor = function(node, display) {
        var getFamily = this.options.mtextInheritFont || this.options.merrorInheritFont;
        var test = this.getTestElement(node, display);
        var metrics = this.measureMetrics(test, getFamily);
        this.adaptor.remove(test);
        return metrics;
    };
    CommonOutputJax.prototype.getMetricMaps = function(html) {
        var e_2, _a, e_3, _b, e_4, _c, e_5, _d, e_6, _e;
        var adaptor = this.adaptor;
        var domMaps = [
            new Map(),
            new Map()
        ];
        try {
            for(var _f = __values(html.math), _g = _f.next(); !_g.done; _g = _f.next()){
                var math = _g.value;
                var node = adaptor.parent(math.start.node);
                if (node && math.state() < MathItem_js_1.STATE.METRICS) {
                    var map = domMaps[math.display ? 1 : 0];
                    if (!map.has(node)) {
                        map.set(node, this.getTestElement(node, math.display));
                    }
                }
            }
        } catch (e_2_1) {
            e_2 = {
                error: e_2_1
            };
        } finally{
            try {
                if (_g && !_g.done && (_a = _f.return)) _a.call(_f);
            } finally{
                if (e_2) throw e_2.error;
            }
        }
        var getFamily = this.options.mtextInheritFont || this.options.merrorInheritFont;
        var maps = [
            new Map(),
            new Map()
        ];
        try {
            for(var _h = __values(maps.keys()), _j = _h.next(); !_j.done; _j = _h.next()){
                var i = _j.value;
                try {
                    for(var _k = (e_4 = void 0, __values(domMaps[i].keys())), _l = _k.next(); !_l.done; _l = _k.next()){
                        var node = _l.value;
                        maps[i].set(node, this.measureMetrics(domMaps[i].get(node), getFamily));
                    }
                } catch (e_4_1) {
                    e_4 = {
                        error: e_4_1
                    };
                } finally{
                    try {
                        if (_l && !_l.done && (_c = _k.return)) _c.call(_k);
                    } finally{
                        if (e_4) throw e_4.error;
                    }
                }
            }
        } catch (e_3_1) {
            e_3 = {
                error: e_3_1
            };
        } finally{
            try {
                if (_j && !_j.done && (_b = _h.return)) _b.call(_h);
            } finally{
                if (e_3) throw e_3.error;
            }
        }
        try {
            for(var _m = __values(maps.keys()), _o = _m.next(); !_o.done; _o = _m.next()){
                var i = _o.value;
                try {
                    for(var _p = (e_6 = void 0, __values(domMaps[i].values())), _q = _p.next(); !_q.done; _q = _p.next()){
                        var node = _q.value;
                        adaptor.remove(node);
                    }
                } catch (e_6_1) {
                    e_6 = {
                        error: e_6_1
                    };
                } finally{
                    try {
                        if (_q && !_q.done && (_e = _p.return)) _e.call(_p);
                    } finally{
                        if (e_6) throw e_6.error;
                    }
                }
            }
        } catch (e_5_1) {
            e_5 = {
                error: e_5_1
            };
        } finally{
            try {
                if (_o && !_o.done && (_d = _m.return)) _d.call(_m);
            } finally{
                if (e_5) throw e_5.error;
            }
        }
        return maps;
    };
    CommonOutputJax.prototype.getTestElement = function(node, display) {
        var adaptor = this.adaptor;
        if (!this.testInline) {
            this.testInline = this.html('mjx-test', {
                style: {
                    display: 'inline-block',
                    width: '100%',
                    'font-style': 'normal',
                    'font-weight': 'normal',
                    'font-size': '100%',
                    'font-size-adjust': 'none',
                    'text-indent': 0,
                    'text-transform': 'none',
                    'letter-spacing': 'normal',
                    'word-spacing': 'normal',
                    overflow: 'hidden',
                    height: '1px',
                    'margin-right': '-1px'
                }
            }, [
                this.html('mjx-left-box', {
                    style: {
                        display: 'inline-block',
                        width: 0,
                        'float': 'left'
                    }
                }),
                this.html('mjx-ex-box', {
                    style: {
                        position: 'absolute',
                        overflow: 'hidden',
                        width: '1px',
                        height: '60ex'
                    }
                }),
                this.html('mjx-right-box', {
                    style: {
                        display: 'inline-block',
                        width: 0,
                        'float': 'right'
                    }
                })
            ]);
            this.testDisplay = adaptor.clone(this.testInline);
            adaptor.setStyle(this.testDisplay, 'display', 'table');
            adaptor.setStyle(this.testDisplay, 'margin-right', '');
            adaptor.setStyle(adaptor.firstChild(this.testDisplay), 'display', 'none');
            var right = adaptor.lastChild(this.testDisplay);
            adaptor.setStyle(right, 'display', 'table-cell');
            adaptor.setStyle(right, 'width', '10000em');
            adaptor.setStyle(right, 'float', '');
        }
        return adaptor.append(node, adaptor.clone(display ? this.testDisplay : this.testInline));
    };
    CommonOutputJax.prototype.measureMetrics = function(node, getFamily) {
        var adaptor = this.adaptor;
        var family = getFamily ? adaptor.fontFamily(node) : '';
        var em = adaptor.fontSize(node);
        var _a = __read(adaptor.nodeSize(adaptor.childNode(node, 1)), 2), w = _a[0], h = _a[1];
        var ex = w ? h / 60 : em * this.options.exFactor;
        var containerWidth = !w ? 1000000 : adaptor.getStyle(node, 'display') === 'table' ? adaptor.nodeSize(adaptor.lastChild(node))[0] - 1 : adaptor.nodeBBox(adaptor.lastChild(node)).left - adaptor.nodeBBox(adaptor.firstChild(node)).left - 2;
        var scale = Math.max(this.options.minScale, this.options.matchFontHeight ? ex / this.font.params.x_height / em : 1);
        var lineWidth = 1000000;
        return {
            em: em,
            ex: ex,
            containerWidth: containerWidth,
            lineWidth: lineWidth,
            scale: scale,
            family: family
        };
    };
    CommonOutputJax.prototype.styleSheet = function(html) {
        var e_7, _a;
        this.setDocument(html);
        this.cssStyles.clear();
        this.cssStyles.addStyles(this.constructor.commonStyles);
        if ('getStyles' in html) {
            try {
                for(var _b = __values(html.getStyles()), _c = _b.next(); !_c.done; _c = _b.next()){
                    var styles = _c.value;
                    this.cssStyles.addStyles(styles);
                }
            } catch (e_7_1) {
                e_7 = {
                    error: e_7_1
                };
            } finally{
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                } finally{
                    if (e_7) throw e_7.error;
                }
            }
        }
        this.addWrapperStyles(this.cssStyles);
        this.addFontStyles(this.cssStyles);
        var sheet = this.html('style', {
            id: 'MJX-styles'
        }, [
            this.text('\n' + this.cssStyles.cssText + '\n')
        ]);
        return sheet;
    };
    CommonOutputJax.prototype.addFontStyles = function(styles) {
        styles.addStyles(this.font.styles);
    };
    CommonOutputJax.prototype.addWrapperStyles = function(styles) {
        var e_8, _a;
        try {
            for(var _b = __values(this.factory.getKinds()), _c = _b.next(); !_c.done; _c = _b.next()){
                var kind = _c.value;
                this.addClassStyles(this.factory.getNodeClass(kind), styles);
            }
        } catch (e_8_1) {
            e_8 = {
                error: e_8_1
            };
        } finally{
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            } finally{
                if (e_8) throw e_8.error;
            }
        }
    };
    CommonOutputJax.prototype.addClassStyles = function(CLASS, styles) {
        styles.addStyles(CLASS.styles);
    };
    CommonOutputJax.prototype.setDocument = function(html) {
        if (html) {
            this.document = html;
            this.adaptor.document = html.document;
        }
    };
    CommonOutputJax.prototype.html = function(type, def, content, ns) {
        if (def === void 0) {
            def = {};
        }
        if (content === void 0) {
            content = [];
        }
        return this.adaptor.node(type, def, content, ns);
    };
    CommonOutputJax.prototype.text = function(text) {
        return this.adaptor.text(text);
    };
    CommonOutputJax.prototype.fixed = function(m, n) {
        if (n === void 0) {
            n = 3;
        }
        if (Math.abs(m) < .0006) {
            return '0';
        }
        return m.toFixed(n).replace(/\.?0+$/, '');
    };
    CommonOutputJax.prototype.measureText = function(text, variant, font) {
        if (font === void 0) {
            font = [
                '',
                false,
                false
            ];
        }
        var node = this.unknownText(text, variant);
        if (variant === '-explicitFont') {
            var styles = this.cssFontStyles(font);
            this.adaptor.setAttributes(node, {
                style: styles
            });
        }
        return this.measureTextNodeWithCache(node, text, variant, font);
    };
    CommonOutputJax.prototype.measureTextNodeWithCache = function(text, chars, variant, font) {
        if (font === void 0) {
            font = [
                '',
                false,
                false
            ];
        }
        if (variant === '-explicitFont') {
            variant = [
                font[0],
                font[1] ? 'T' : 'F',
                font[2] ? 'T' : 'F',
                ''
            ].join('-');
        }
        if (!this.unknownCache.has(variant)) {
            this.unknownCache.set(variant, new Map());
        }
        var map = this.unknownCache.get(variant);
        var cached = map.get(chars);
        if (cached) return cached;
        var bbox = this.measureTextNode(text);
        map.set(chars, bbox);
        return bbox;
    };
    CommonOutputJax.prototype.measureXMLnode = function(xml) {
        var adaptor = this.adaptor;
        var content = this.html('mjx-xml-block', {
            style: {
                display: 'inline-block'
            }
        }, [
            adaptor.clone(xml)
        ]);
        var base = this.html('mjx-baseline', {
            style: {
                display: 'inline-block',
                width: 0,
                height: 0
            }
        });
        var style = {
            position: 'absolute',
            display: 'inline-block',
            'font-family': 'initial',
            'line-height': 'normal'
        };
        var node = this.html('mjx-measure-xml', {
            style: style
        }, [
            base,
            content
        ]);
        adaptor.append(adaptor.parent(this.math.start.node), this.container);
        adaptor.append(this.container, node);
        var em = this.math.metrics.em * this.math.metrics.scale;
        var _a = adaptor.nodeBBox(content), left = _a.left, right = _a.right, bottom = _a.bottom, top = _a.top;
        var w = (right - left) / em;
        var h = (adaptor.nodeBBox(base).top - top) / em;
        var d = (bottom - top) / em - h;
        adaptor.remove(this.container);
        adaptor.remove(node);
        return {
            w: w,
            h: h,
            d: d
        };
    };
    CommonOutputJax.prototype.cssFontStyles = function(font, styles) {
        if (styles === void 0) {
            styles = {};
        }
        var _a = __read(font, 3), family = _a[0], italic = _a[1], bold = _a[2];
        styles['font-family'] = this.font.getFamily(family);
        if (italic) styles['font-style'] = 'italic';
        if (bold) styles['font-weight'] = 'bold';
        return styles;
    };
    CommonOutputJax.prototype.getFontData = function(styles) {
        if (!styles) {
            styles = new Styles_js_1.Styles();
        }
        return [
            this.font.getFamily(styles.get('font-family')),
            styles.get('font-style') === 'italic',
            styles.get('font-weight') === 'bold'
        ];
    };
    CommonOutputJax.NAME = 'Common';
    CommonOutputJax.OPTIONS = __assign(__assign({}, OutputJax_js_1.AbstractOutputJax.OPTIONS), {
        scale: 1,
        minScale: .5,
        mtextInheritFont: false,
        merrorInheritFont: false,
        mtextFont: '',
        merrorFont: 'serif',
        mathmlSpacing: false,
        skipAttributes: {},
        exFactor: .5,
        displayAlign: 'center',
        displayIndent: '0',
        wrapperFactory: null,
        font: null,
        cssStyles: null
    });
    CommonOutputJax.commonStyles = {};
    return CommonOutputJax;
}(OutputJax_js_1.AbstractOutputJax);
exports.CommonOutputJax = CommonOutputJax; //# sourceMappingURL=OutputJax.js.map
}}),
"[project]/node_modules/mathjax-full/js/output/common/WrapperFactory.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __extends = this && this.__extends || function() {
    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || ({
            __proto__: []
        }) instanceof Array && function(d, b) {
            d.__proto__ = b;
        } || function(d, b) {
            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
        };
        return extendStatics(d, b);
    };
    return function(d, b) {
        if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
}();
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CommonWrapperFactory = void 0;
var WrapperFactory_js_1 = __turbopack_context__.r("[project]/node_modules/mathjax-full/js/core/Tree/WrapperFactory.js [app-rsc] (ecmascript)");
var CommonWrapperFactory = function(_super) {
    __extends(CommonWrapperFactory, _super);
    function CommonWrapperFactory() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.jax = null;
        return _this;
    }
    Object.defineProperty(CommonWrapperFactory.prototype, "Wrappers", {
        get: function() {
            return this.node;
        },
        enumerable: false,
        configurable: true
    });
    CommonWrapperFactory.defaultNodes = {};
    return CommonWrapperFactory;
}(WrapperFactory_js_1.AbstractWrapperFactory);
exports.CommonWrapperFactory = CommonWrapperFactory; //# sourceMappingURL=WrapperFactory.js.map
}}),
"[project]/node_modules/mathjax-full/js/output/common/FontData.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __assign = this && this.__assign || function() {
    __assign = Object.assign || function(t) {
        for(var s, i = 1, n = arguments.length; i < n; i++){
            s = arguments[i];
            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __read = this && this.__read || function(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);
    } catch (error) {
        e = {
            error: error
        };
    } finally{
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        } finally{
            if (e) throw e.error;
        }
    }
    return ar;
};
var __spreadArray = this && this.__spreadArray || function(to, from, pack) {
    if (pack || arguments.length === 2) for(var i = 0, l = from.length, ar; i < l; i++){
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var __values = this && this.__values || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function() {
            if (o && i >= o.length) o = void 0;
            return {
                value: o && o[i++],
                done: !o
            };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.FontData = exports.NOSTRETCH = exports.H = exports.V = void 0;
var Options_js_1 = __turbopack_context__.r("[project]/node_modules/mathjax-full/js/util/Options.js [app-rsc] (ecmascript)");
exports.V = 1;
exports.H = 2;
exports.NOSTRETCH = {
    dir: 0
};
var FontData = function() {
    function FontData(options) {
        var e_1, _a, e_2, _b;
        if (options === void 0) {
            options = null;
        }
        this.variant = {};
        this.delimiters = {};
        this.cssFontMap = {};
        this.remapChars = {};
        this.skewIcFactor = .75;
        var CLASS = this.constructor;
        this.options = (0, Options_js_1.userOptions)((0, Options_js_1.defaultOptions)({}, CLASS.OPTIONS), options);
        this.params = __assign({}, CLASS.defaultParams);
        this.sizeVariants = __spreadArray([], __read(CLASS.defaultSizeVariants), false);
        this.stretchVariants = __spreadArray([], __read(CLASS.defaultStretchVariants), false);
        this.cssFontMap = __assign({}, CLASS.defaultCssFonts);
        try {
            for(var _c = __values(Object.keys(this.cssFontMap)), _d = _c.next(); !_d.done; _d = _c.next()){
                var name_1 = _d.value;
                if (this.cssFontMap[name_1][0] === 'unknown') {
                    this.cssFontMap[name_1][0] = this.options.unknownFamily;
                }
            }
        } catch (e_1_1) {
            e_1 = {
                error: e_1_1
            };
        } finally{
            try {
                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
            } finally{
                if (e_1) throw e_1.error;
            }
        }
        this.cssFamilyPrefix = CLASS.defaultCssFamilyPrefix;
        this.createVariants(CLASS.defaultVariants);
        this.defineDelimiters(CLASS.defaultDelimiters);
        try {
            for(var _e = __values(Object.keys(CLASS.defaultChars)), _f = _e.next(); !_f.done; _f = _e.next()){
                var name_2 = _f.value;
                this.defineChars(name_2, CLASS.defaultChars[name_2]);
            }
        } catch (e_2_1) {
            e_2 = {
                error: e_2_1
            };
        } finally{
            try {
                if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
            } finally{
                if (e_2) throw e_2.error;
            }
        }
        this.defineRemap('accent', CLASS.defaultAccentMap);
        this.defineRemap('mo', CLASS.defaultMoMap);
        this.defineRemap('mn', CLASS.defaultMnMap);
    }
    FontData.charOptions = function(font, n) {
        var char = font[n];
        if (char.length === 3) {
            char[3] = {};
        }
        return char[3];
    };
    Object.defineProperty(FontData.prototype, "styles", {
        get: function() {
            return this._styles;
        },
        set: function(style) {
            this._styles = style;
        },
        enumerable: false,
        configurable: true
    });
    FontData.prototype.createVariant = function(name, inherit, link) {
        if (inherit === void 0) {
            inherit = null;
        }
        if (link === void 0) {
            link = null;
        }
        var variant = {
            linked: [],
            chars: inherit ? Object.create(this.variant[inherit].chars) : {}
        };
        if (link && this.variant[link]) {
            Object.assign(variant.chars, this.variant[link].chars);
            this.variant[link].linked.push(variant.chars);
            variant.chars = Object.create(variant.chars);
        }
        this.remapSmpChars(variant.chars, name);
        this.variant[name] = variant;
    };
    FontData.prototype.remapSmpChars = function(chars, name) {
        var e_3, _a, e_4, _b;
        var CLASS = this.constructor;
        if (CLASS.VariantSmp[name]) {
            var SmpRemap = CLASS.SmpRemap;
            var SmpGreek = [
                null,
                null,
                CLASS.SmpRemapGreekU,
                CLASS.SmpRemapGreekL
            ];
            try {
                for(var _c = __values(CLASS.SmpRanges), _d = _c.next(); !_d.done; _d = _c.next()){
                    var _e = __read(_d.value, 3), i = _e[0], lo = _e[1], hi = _e[2];
                    var base = CLASS.VariantSmp[name][i];
                    if (!base) continue;
                    for(var n = lo; n <= hi; n++){
                        if (n === 0x3A2) continue;
                        var smp = base + n - lo;
                        chars[n] = this.smpChar(SmpRemap[smp] || smp);
                    }
                    if (SmpGreek[i]) {
                        try {
                            for(var _f = (e_4 = void 0, __values(Object.keys(SmpGreek[i]).map(function(x) {
                                return parseInt(x);
                            }))), _g = _f.next(); !_g.done; _g = _f.next()){
                                var n = _g.value;
                                chars[n] = this.smpChar(base + SmpGreek[i][n]);
                            }
                        } catch (e_4_1) {
                            e_4 = {
                                error: e_4_1
                            };
                        } finally{
                            try {
                                if (_g && !_g.done && (_b = _f.return)) _b.call(_f);
                            } finally{
                                if (e_4) throw e_4.error;
                            }
                        }
                    }
                }
            } catch (e_3_1) {
                e_3 = {
                    error: e_3_1
                };
            } finally{
                try {
                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
                } finally{
                    if (e_3) throw e_3.error;
                }
            }
        }
        if (name === 'bold') {
            chars[0x3DC] = this.smpChar(0x1D7CA);
            chars[0x3DD] = this.smpChar(0x1D7CB);
        }
    };
    FontData.prototype.smpChar = function(n) {
        return [
            ,
            ,
            ,
            {
                smp: n
            }
        ];
    };
    FontData.prototype.createVariants = function(variants) {
        var e_5, _a;
        try {
            for(var variants_1 = __values(variants), variants_1_1 = variants_1.next(); !variants_1_1.done; variants_1_1 = variants_1.next()){
                var variant = variants_1_1.value;
                this.createVariant(variant[0], variant[1], variant[2]);
            }
        } catch (e_5_1) {
            e_5 = {
                error: e_5_1
            };
        } finally{
            try {
                if (variants_1_1 && !variants_1_1.done && (_a = variants_1.return)) _a.call(variants_1);
            } finally{
                if (e_5) throw e_5.error;
            }
        }
    };
    FontData.prototype.defineChars = function(name, chars) {
        var e_6, _a;
        var variant = this.variant[name];
        Object.assign(variant.chars, chars);
        try {
            for(var _b = __values(variant.linked), _c = _b.next(); !_c.done; _c = _b.next()){
                var link = _c.value;
                Object.assign(link, chars);
            }
        } catch (e_6_1) {
            e_6 = {
                error: e_6_1
            };
        } finally{
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            } finally{
                if (e_6) throw e_6.error;
            }
        }
    };
    FontData.prototype.defineDelimiters = function(delims) {
        Object.assign(this.delimiters, delims);
    };
    FontData.prototype.defineRemap = function(name, remap) {
        if (!this.remapChars.hasOwnProperty(name)) {
            this.remapChars[name] = {};
        }
        Object.assign(this.remapChars[name], remap);
    };
    FontData.prototype.getDelimiter = function(n) {
        return this.delimiters[n];
    };
    FontData.prototype.getSizeVariant = function(n, i) {
        if (this.delimiters[n].variants) {
            i = this.delimiters[n].variants[i];
        }
        return this.sizeVariants[i];
    };
    FontData.prototype.getStretchVariant = function(n, i) {
        return this.stretchVariants[this.delimiters[n].stretchv ? this.delimiters[n].stretchv[i] : 0];
    };
    FontData.prototype.getChar = function(name, n) {
        return this.variant[name].chars[n];
    };
    FontData.prototype.getVariant = function(name) {
        return this.variant[name];
    };
    FontData.prototype.getCssFont = function(variant) {
        return this.cssFontMap[variant] || [
            'serif',
            false,
            false
        ];
    };
    FontData.prototype.getFamily = function(family) {
        return this.cssFamilyPrefix ? this.cssFamilyPrefix + ', ' + family : family;
    };
    FontData.prototype.getRemappedChar = function(name, c) {
        var map = this.remapChars[name] || {};
        return map[c];
    };
    FontData.OPTIONS = {
        unknownFamily: 'serif'
    };
    FontData.JAX = 'common';
    FontData.NAME = '';
    FontData.defaultVariants = [
        [
            'normal'
        ],
        [
            'bold',
            'normal'
        ],
        [
            'italic',
            'normal'
        ],
        [
            'bold-italic',
            'italic',
            'bold'
        ],
        [
            'double-struck',
            'bold'
        ],
        [
            'fraktur',
            'normal'
        ],
        [
            'bold-fraktur',
            'bold',
            'fraktur'
        ],
        [
            'script',
            'italic'
        ],
        [
            'bold-script',
            'bold-italic',
            'script'
        ],
        [
            'sans-serif',
            'normal'
        ],
        [
            'bold-sans-serif',
            'bold',
            'sans-serif'
        ],
        [
            'sans-serif-italic',
            'italic',
            'sans-serif'
        ],
        [
            'sans-serif-bold-italic',
            'bold-italic',
            'bold-sans-serif'
        ],
        [
            'monospace',
            'normal'
        ]
    ];
    FontData.defaultCssFonts = {
        normal: [
            'unknown',
            false,
            false
        ],
        bold: [
            'unknown',
            false,
            true
        ],
        italic: [
            'unknown',
            true,
            false
        ],
        'bold-italic': [
            'unknown',
            true,
            true
        ],
        'double-struck': [
            'unknown',
            false,
            true
        ],
        fraktur: [
            'unknown',
            false,
            false
        ],
        'bold-fraktur': [
            'unknown',
            false,
            true
        ],
        script: [
            'cursive',
            false,
            false
        ],
        'bold-script': [
            'cursive',
            false,
            true
        ],
        'sans-serif': [
            'sans-serif',
            false,
            false
        ],
        'bold-sans-serif': [
            'sans-serif',
            false,
            true
        ],
        'sans-serif-italic': [
            'sans-serif',
            true,
            false
        ],
        'sans-serif-bold-italic': [
            'sans-serif',
            true,
            true
        ],
        monospace: [
            'monospace',
            false,
            false
        ]
    };
    FontData.defaultCssFamilyPrefix = '';
    FontData.VariantSmp = {
        bold: [
            0x1D400,
            0x1D41A,
            0x1D6A8,
            0x1D6C2,
            0x1D7CE
        ],
        italic: [
            0x1D434,
            0x1D44E,
            0x1D6E2,
            0x1D6FC
        ],
        'bold-italic': [
            0x1D468,
            0x1D482,
            0x1D71C,
            0x1D736
        ],
        script: [
            0x1D49C,
            0x1D4B6
        ],
        'bold-script': [
            0x1D4D0,
            0x1D4EA
        ],
        fraktur: [
            0x1D504,
            0x1D51E
        ],
        'double-struck': [
            0x1D538,
            0x1D552,
            ,
            ,
            0x1D7D8
        ],
        'bold-fraktur': [
            0x1D56C,
            0x1D586
        ],
        'sans-serif': [
            0x1D5A0,
            0x1D5BA,
            ,
            ,
            0x1D7E2
        ],
        'bold-sans-serif': [
            0x1D5D4,
            0x1D5EE,
            0x1D756,
            0x1D770,
            0x1D7EC
        ],
        'sans-serif-italic': [
            0x1D608,
            0x1D622
        ],
        'sans-serif-bold-italic': [
            0x1D63C,
            0x1D656,
            0x1D790,
            0x1D7AA
        ],
        'monospace': [
            0x1D670,
            0x1D68A,
            ,
            ,
            0x1D7F6
        ]
    };
    FontData.SmpRanges = [
        [
            0,
            0x41,
            0x5A
        ],
        [
            1,
            0x61,
            0x7A
        ],
        [
            2,
            0x391,
            0x3A9
        ],
        [
            3,
            0x3B1,
            0x3C9
        ],
        [
            4,
            0x30,
            0x39
        ]
    ];
    FontData.SmpRemap = {
        0x1D455: 0x210E,
        0x1D49D: 0x212C,
        0x1D4A0: 0x2130,
        0x1D4A1: 0x2131,
        0x1D4A3: 0x210B,
        0x1D4A4: 0x2110,
        0x1D4A7: 0x2112,
        0x1D4A8: 0x2133,
        0x1D4AD: 0x211B,
        0x1D4BA: 0x212F,
        0x1D4BC: 0x210A,
        0x1D4C4: 0x2134,
        0x1D506: 0x212D,
        0x1D50B: 0x210C,
        0x1D50C: 0x2111,
        0x1D515: 0x211C,
        0x1D51D: 0x2128,
        0x1D53A: 0x2102,
        0x1D53F: 0x210D,
        0x1D545: 0x2115,
        0x1D547: 0x2119,
        0x1D548: 0x211A,
        0x1D549: 0x211D,
        0x1D551: 0x2124
    };
    FontData.SmpRemapGreekU = {
        0x2207: 0x19,
        0x03F4: 0x11
    };
    FontData.SmpRemapGreekL = {
        0x3D1: 0x1B,
        0x3D5: 0x1D,
        0x3D6: 0x1F,
        0x3F0: 0x1C,
        0x3F1: 0x1E,
        0x3F5: 0x1A,
        0x2202: 0x19
    };
    FontData.defaultAccentMap = {
        0x0300: '\u02CB',
        0x0301: '\u02CA',
        0x0302: '\u02C6',
        0x0303: '\u02DC',
        0x0304: '\u02C9',
        0x0306: '\u02D8',
        0x0307: '\u02D9',
        0x0308: '\u00A8',
        0x030A: '\u02DA',
        0x030C: '\u02C7',
        0x2192: '\u20D7',
        0x2032: '\'',
        0x2033: '\'\'',
        0x2034: '\'\'\'',
        0x2035: '`',
        0x2036: '``',
        0x2037: '```',
        0x2057: '\'\'\'\'',
        0x20D0: '\u21BC',
        0x20D1: '\u21C0',
        0x20D6: '\u2190',
        0x20E1: '\u2194',
        0x20F0: '*',
        0x20DB: '...',
        0x20DC: '....',
        0x20EC: '\u21C1',
        0x20ED: '\u21BD',
        0x20EE: '\u2190',
        0x20EF: '\u2192'
    };
    FontData.defaultMoMap = {
        0x002D: '\u2212'
    };
    FontData.defaultMnMap = {
        0x002D: '\u2212'
    };
    FontData.defaultParams = {
        x_height: .442,
        quad: 1,
        num1: .676,
        num2: .394,
        num3: .444,
        denom1: .686,
        denom2: .345,
        sup1: .413,
        sup2: .363,
        sup3: .289,
        sub1: .15,
        sub2: .247,
        sup_drop: .386,
        sub_drop: .05,
        delim1: 2.39,
        delim2: 1.0,
        axis_height: .25,
        rule_thickness: .06,
        big_op_spacing1: .111,
        big_op_spacing2: .167,
        big_op_spacing3: .2,
        big_op_spacing4: .6,
        big_op_spacing5: .1,
        surd_height: .075,
        scriptspace: .05,
        nulldelimiterspace: .12,
        delimiterfactor: 901,
        delimitershortfall: .3,
        min_rule_thickness: 1.25,
        separation_factor: 1.75,
        extra_ic: .033
    };
    FontData.defaultDelimiters = {};
    FontData.defaultChars = {};
    FontData.defaultSizeVariants = [];
    FontData.defaultStretchVariants = [];
    return FontData;
}();
exports.FontData = FontData; //# sourceMappingURL=FontData.js.map
}}),
"[project]/node_modules/mathjax-full/js/output/common/Wrapper.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __extends = this && this.__extends || function() {
    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || ({
            __proto__: []
        }) instanceof Array && function(d, b) {
            d.__proto__ = b;
        } || function(d, b) {
            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
        };
        return extendStatics(d, b);
    };
    return function(d, b) {
        if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
}();
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    }
    __setModuleDefault(result, mod);
    return result;
};
var __values = this && this.__values || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function() {
            if (o && i >= o.length) o = void 0;
            return {
                value: o && o[i++],
                done: !o
            };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = this && this.__read || function(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);
    } catch (error) {
        e = {
            error: error
        };
    } finally{
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        } finally{
            if (e) throw e.error;
        }
    }
    return ar;
};
var __spreadArray = this && this.__spreadArray || function(to, from, pack) {
    if (pack || arguments.length === 2) for(var i = 0, l = from.length, ar; i < l; i++){
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CommonWrapper = void 0;
var Wrapper_js_1 = __turbopack_context__.r("[project]/node_modules/mathjax-full/js/core/Tree/Wrapper.js [app-rsc] (ecmascript)");
var MmlNode_js_1 = __turbopack_context__.r("[project]/node_modules/mathjax-full/js/core/MmlTree/MmlNode.js [app-rsc] (ecmascript)");
var string_js_1 = __turbopack_context__.r("[project]/node_modules/mathjax-full/js/util/string.js [app-rsc] (ecmascript)");
var LENGTHS = __importStar(__turbopack_context__.r("[project]/node_modules/mathjax-full/js/util/lengths.js [app-rsc] (ecmascript)"));
var Styles_js_1 = __turbopack_context__.r("[project]/node_modules/mathjax-full/js/util/Styles.js [app-rsc] (ecmascript)");
var BBox_js_1 = __turbopack_context__.r("[project]/node_modules/mathjax-full/js/util/BBox.js [app-rsc] (ecmascript)");
var FontData_js_1 = __turbopack_context__.r("[project]/node_modules/mathjax-full/js/output/common/FontData.js [app-rsc] (ecmascript)");
var SMALLSIZE = 2 / 18;
function MathMLSpace(script, size) {
    return script ? size < SMALLSIZE ? 0 : SMALLSIZE : size;
}
var CommonWrapper = function(_super) {
    __extends(CommonWrapper, _super);
    function CommonWrapper(factory, node, parent) {
        if (parent === void 0) {
            parent = null;
        }
        var _this = _super.call(this, factory, node) || this;
        _this.parent = null;
        _this.removedStyles = null;
        _this.styles = null;
        _this.variant = '';
        _this.bboxComputed = false;
        _this.stretch = FontData_js_1.NOSTRETCH;
        _this.font = null;
        _this.parent = parent;
        _this.font = factory.jax.font;
        _this.bbox = BBox_js_1.BBox.zero();
        _this.getStyles();
        _this.getVariant();
        _this.getScale();
        _this.getSpace();
        _this.childNodes = node.childNodes.map(function(child) {
            var wrapped = _this.wrap(child);
            if (wrapped.bbox.pwidth && (node.notParent || node.isKind('math'))) {
                _this.bbox.pwidth = BBox_js_1.BBox.fullWidth;
            }
            return wrapped;
        });
        return _this;
    }
    Object.defineProperty(CommonWrapper.prototype, "jax", {
        get: function() {
            return this.factory.jax;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CommonWrapper.prototype, "adaptor", {
        get: function() {
            return this.factory.jax.adaptor;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CommonWrapper.prototype, "metrics", {
        get: function() {
            return this.factory.jax.math.metrics;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CommonWrapper.prototype, "fixesPWidth", {
        get: function() {
            return !this.node.notParent && !this.node.isToken;
        },
        enumerable: false,
        configurable: true
    });
    CommonWrapper.prototype.wrap = function(node, parent) {
        if (parent === void 0) {
            parent = null;
        }
        var wrapped = this.factory.wrap(node, parent || this);
        if (parent) {
            parent.childNodes.push(wrapped);
        }
        this.jax.nodeMap.set(node, wrapped);
        return wrapped;
    };
    CommonWrapper.prototype.getBBox = function(save) {
        if (save === void 0) {
            save = true;
        }
        if (this.bboxComputed) {
            return this.bbox;
        }
        var bbox = save ? this.bbox : BBox_js_1.BBox.zero();
        this.computeBBox(bbox);
        this.bboxComputed = save;
        return bbox;
    };
    CommonWrapper.prototype.getOuterBBox = function(save) {
        var e_1, _a;
        if (save === void 0) {
            save = true;
        }
        var bbox = this.getBBox(save);
        if (!this.styles) return bbox;
        var obox = new BBox_js_1.BBox();
        Object.assign(obox, bbox);
        try {
            for(var _b = __values(BBox_js_1.BBox.StyleAdjust), _c = _b.next(); !_c.done; _c = _b.next()){
                var _d = __read(_c.value, 2), name_1 = _d[0], side = _d[1];
                var x = this.styles.get(name_1);
                if (x) {
                    obox[side] += this.length2em(x, 1, obox.rscale);
                }
            }
        } catch (e_1_1) {
            e_1 = {
                error: e_1_1
            };
        } finally{
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            } finally{
                if (e_1) throw e_1.error;
            }
        }
        return obox;
    };
    CommonWrapper.prototype.computeBBox = function(bbox, recompute) {
        var e_2, _a;
        if (recompute === void 0) {
            recompute = false;
        }
        bbox.empty();
        try {
            for(var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()){
                var child = _c.value;
                bbox.append(child.getOuterBBox());
            }
        } catch (e_2_1) {
            e_2 = {
                error: e_2_1
            };
        } finally{
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            } finally{
                if (e_2) throw e_2.error;
            }
        }
        bbox.clean();
        if (this.fixesPWidth && this.setChildPWidths(recompute)) {
            this.computeBBox(bbox, true);
        }
    };
    CommonWrapper.prototype.setChildPWidths = function(recompute, w, clear) {
        var e_3, _a;
        if (w === void 0) {
            w = null;
        }
        if (clear === void 0) {
            clear = true;
        }
        if (recompute) {
            return false;
        }
        if (clear) {
            this.bbox.pwidth = '';
        }
        var changed = false;
        try {
            for(var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()){
                var child = _c.value;
                var cbox = child.getOuterBBox();
                if (cbox.pwidth && child.setChildPWidths(recompute, w === null ? cbox.w : w, clear)) {
                    changed = true;
                }
            }
        } catch (e_3_1) {
            e_3 = {
                error: e_3_1
            };
        } finally{
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            } finally{
                if (e_3) throw e_3.error;
            }
        }
        return changed;
    };
    CommonWrapper.prototype.invalidateBBox = function() {
        if (this.bboxComputed) {
            this.bboxComputed = false;
            if (this.parent) {
                this.parent.invalidateBBox();
            }
        }
    };
    CommonWrapper.prototype.copySkewIC = function(bbox) {
        var first = this.childNodes[0];
        if (first === null || first === void 0 ? void 0 : first.bbox.sk) {
            bbox.sk = first.bbox.sk;
        }
        if (first === null || first === void 0 ? void 0 : first.bbox.dx) {
            bbox.dx = first.bbox.dx;
        }
        var last = this.childNodes[this.childNodes.length - 1];
        if (last === null || last === void 0 ? void 0 : last.bbox.ic) {
            bbox.ic = last.bbox.ic;
            bbox.w += bbox.ic;
        }
    };
    CommonWrapper.prototype.getStyles = function() {
        var styleString = this.node.attributes.getExplicit('style');
        if (!styleString) return;
        var style = this.styles = new Styles_js_1.Styles(styleString);
        for(var i = 0, m = CommonWrapper.removeStyles.length; i < m; i++){
            var id = CommonWrapper.removeStyles[i];
            if (style.get(id)) {
                if (!this.removedStyles) this.removedStyles = {};
                this.removedStyles[id] = style.get(id);
                style.set(id, '');
            }
        }
    };
    CommonWrapper.prototype.getVariant = function() {
        if (!this.node.isToken) return;
        var attributes = this.node.attributes;
        var variant = attributes.get('mathvariant');
        if (!attributes.getExplicit('mathvariant')) {
            var values = attributes.getList('fontfamily', 'fontweight', 'fontstyle');
            if (this.removedStyles) {
                var style = this.removedStyles;
                if (style.fontFamily) values.family = style.fontFamily;
                if (style.fontWeight) values.weight = style.fontWeight;
                if (style.fontStyle) values.style = style.fontStyle;
            }
            if (values.fontfamily) values.family = values.fontfamily;
            if (values.fontweight) values.weight = values.fontweight;
            if (values.fontstyle) values.style = values.fontstyle;
            if (values.weight && values.weight.match(/^\d+$/)) {
                values.weight = parseInt(values.weight) > 600 ? 'bold' : 'normal';
            }
            if (values.family) {
                variant = this.explicitVariant(values.family, values.weight, values.style);
            } else {
                if (this.node.getProperty('variantForm')) variant = '-tex-variant';
                variant = (CommonWrapper.BOLDVARIANTS[values.weight] || {})[variant] || variant;
                variant = (CommonWrapper.ITALICVARIANTS[values.style] || {})[variant] || variant;
            }
        }
        this.variant = variant;
    };
    CommonWrapper.prototype.explicitVariant = function(fontFamily, fontWeight, fontStyle) {
        var style = this.styles;
        if (!style) style = this.styles = new Styles_js_1.Styles();
        style.set('fontFamily', fontFamily);
        if (fontWeight) style.set('fontWeight', fontWeight);
        if (fontStyle) style.set('fontStyle', fontStyle);
        return '-explicitFont';
    };
    CommonWrapper.prototype.getScale = function() {
        var scale = 1, parent = this.parent;
        var pscale = parent ? parent.bbox.scale : 1;
        var attributes = this.node.attributes;
        var scriptlevel = Math.min(attributes.get('scriptlevel'), 2);
        var fontsize = attributes.get('fontsize');
        var mathsize = this.node.isToken || this.node.isKind('mstyle') ? attributes.get('mathsize') : attributes.getInherited('mathsize');
        if (scriptlevel !== 0) {
            scale = Math.pow(attributes.get('scriptsizemultiplier'), scriptlevel);
            var scriptminsize = this.length2em(attributes.get('scriptminsize'), .8, 1);
            if (scale < scriptminsize) scale = scriptminsize;
        }
        if (this.removedStyles && this.removedStyles.fontSize && !fontsize) {
            fontsize = this.removedStyles.fontSize;
        }
        if (fontsize && !attributes.getExplicit('mathsize')) {
            mathsize = fontsize;
        }
        if (mathsize !== '1') {
            scale *= this.length2em(mathsize, 1, 1);
        }
        this.bbox.scale = scale;
        this.bbox.rscale = scale / pscale;
    };
    CommonWrapper.prototype.getSpace = function() {
        var isTop = this.isTopEmbellished();
        var hasSpacing = this.node.hasSpacingAttributes();
        if (this.jax.options.mathmlSpacing || hasSpacing) {
            isTop && this.getMathMLSpacing();
        } else {
            this.getTeXSpacing(isTop, hasSpacing);
        }
    };
    CommonWrapper.prototype.getMathMLSpacing = function() {
        var node = this.node.coreMO();
        var child = node.coreParent();
        var parent = child.parent;
        if (!parent || !parent.isKind('mrow') || parent.childNodes.length === 1) return;
        var attributes = node.attributes;
        var isScript = attributes.get('scriptlevel') > 0;
        this.bbox.L = attributes.isSet('lspace') ? Math.max(0, this.length2em(attributes.get('lspace'))) : MathMLSpace(isScript, node.lspace);
        this.bbox.R = attributes.isSet('rspace') ? Math.max(0, this.length2em(attributes.get('rspace'))) : MathMLSpace(isScript, node.rspace);
        var n = parent.childIndex(child);
        if (n === 0) return;
        var prev = parent.childNodes[n - 1];
        if (!prev.isEmbellished) return;
        var bbox = this.jax.nodeMap.get(prev).getBBox();
        if (bbox.R) {
            this.bbox.L = Math.max(0, this.bbox.L - bbox.R);
        }
    };
    CommonWrapper.prototype.getTeXSpacing = function(isTop, hasSpacing) {
        if (!hasSpacing) {
            var space = this.node.texSpacing();
            if (space) {
                this.bbox.L = this.length2em(space);
            }
        }
        if (isTop || hasSpacing) {
            var attributes = this.node.coreMO().attributes;
            if (attributes.isSet('lspace')) {
                this.bbox.L = Math.max(0, this.length2em(attributes.get('lspace')));
            }
            if (attributes.isSet('rspace')) {
                this.bbox.R = Math.max(0, this.length2em(attributes.get('rspace')));
            }
        }
    };
    CommonWrapper.prototype.isTopEmbellished = function() {
        return this.node.isEmbellished && !(this.node.parent && this.node.parent.isEmbellished);
    };
    CommonWrapper.prototype.core = function() {
        return this.jax.nodeMap.get(this.node.core());
    };
    CommonWrapper.prototype.coreMO = function() {
        return this.jax.nodeMap.get(this.node.coreMO());
    };
    CommonWrapper.prototype.getText = function() {
        var e_4, _a;
        var text = '';
        if (this.node.isToken) {
            try {
                for(var _b = __values(this.node.childNodes), _c = _b.next(); !_c.done; _c = _b.next()){
                    var child = _c.value;
                    if (child instanceof MmlNode_js_1.TextNode) {
                        text += child.getText();
                    }
                }
            } catch (e_4_1) {
                e_4 = {
                    error: e_4_1
                };
            } finally{
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                } finally{
                    if (e_4) throw e_4.error;
                }
            }
        }
        return text;
    };
    CommonWrapper.prototype.canStretch = function(direction) {
        this.stretch = FontData_js_1.NOSTRETCH;
        if (this.node.isEmbellished) {
            var core = this.core();
            if (core && core.node !== this.node) {
                if (core.canStretch(direction)) {
                    this.stretch = core.stretch;
                }
            }
        }
        return this.stretch.dir !== 0;
    };
    CommonWrapper.prototype.getAlignShift = function() {
        var _a;
        var _b = (_a = this.node.attributes).getList.apply(_a, __spreadArray([], __read(MmlNode_js_1.indentAttributes), false)), indentalign = _b.indentalign, indentshift = _b.indentshift, indentalignfirst = _b.indentalignfirst, indentshiftfirst = _b.indentshiftfirst;
        if (indentalignfirst !== 'indentalign') {
            indentalign = indentalignfirst;
        }
        if (indentalign === 'auto') {
            indentalign = this.jax.options.displayAlign;
        }
        if (indentshiftfirst !== 'indentshift') {
            indentshift = indentshiftfirst;
        }
        if (indentshift === 'auto') {
            indentshift = this.jax.options.displayIndent;
            if (indentalign === 'right' && !indentshift.match(/^\s*0[a-z]*\s*$/)) {
                indentshift = ('-' + indentshift.trim()).replace(/^--/, '');
            }
        }
        var shift = this.length2em(indentshift, this.metrics.containerWidth);
        return [
            indentalign,
            shift
        ];
    };
    CommonWrapper.prototype.getAlignX = function(W, bbox, align) {
        return align === 'right' ? W - (bbox.w + bbox.R) * bbox.rscale : align === 'left' ? bbox.L * bbox.rscale : (W - bbox.w * bbox.rscale) / 2;
    };
    CommonWrapper.prototype.getAlignY = function(H, D, h, d, align) {
        return align === 'top' ? H - h : align === 'bottom' ? d - D : align === 'center' ? (H - h - (D - d)) / 2 : 0;
    };
    CommonWrapper.prototype.getWrapWidth = function(i) {
        return this.childNodes[i].getBBox().w;
    };
    CommonWrapper.prototype.getChildAlign = function(_i) {
        return 'left';
    };
    CommonWrapper.prototype.percent = function(m) {
        return LENGTHS.percent(m);
    };
    CommonWrapper.prototype.em = function(m) {
        return LENGTHS.em(m);
    };
    CommonWrapper.prototype.px = function(m, M) {
        if (M === void 0) {
            M = -LENGTHS.BIGDIMEN;
        }
        return LENGTHS.px(m, M, this.metrics.em);
    };
    CommonWrapper.prototype.length2em = function(length, size, scale) {
        if (size === void 0) {
            size = 1;
        }
        if (scale === void 0) {
            scale = null;
        }
        if (scale === null) {
            scale = this.bbox.scale;
        }
        return LENGTHS.length2em(length, size, scale, this.jax.pxPerEm);
    };
    CommonWrapper.prototype.unicodeChars = function(text, name) {
        if (name === void 0) {
            name = this.variant;
        }
        var chars = (0, string_js_1.unicodeChars)(text);
        var variant = this.font.getVariant(name);
        if (variant && variant.chars) {
            var map_1 = variant.chars;
            chars = chars.map(function(n) {
                return ((map_1[n] || [])[3] || {}).smp || n;
            });
        }
        return chars;
    };
    CommonWrapper.prototype.remapChars = function(chars) {
        return chars;
    };
    CommonWrapper.prototype.mmlText = function(text) {
        return this.node.factory.create('text').setText(text);
    };
    CommonWrapper.prototype.mmlNode = function(kind, properties, children) {
        if (properties === void 0) {
            properties = {};
        }
        if (children === void 0) {
            children = [];
        }
        return this.node.factory.create(kind, properties, children);
    };
    CommonWrapper.prototype.createMo = function(text) {
        var mmlFactory = this.node.factory;
        var textNode = mmlFactory.create('text').setText(text);
        var mml = mmlFactory.create('mo', {
            stretchy: true
        }, [
            textNode
        ]);
        mml.inheritAttributesFrom(this.node);
        var node = this.wrap(mml);
        node.parent = this;
        return node;
    };
    CommonWrapper.prototype.getVariantChar = function(variant, n) {
        var char = this.font.getChar(variant, n) || [
            0,
            0,
            0,
            {
                unknown: true
            }
        ];
        if (char.length === 3) {
            char[3] = {};
        }
        return char;
    };
    CommonWrapper.kind = 'unknown';
    CommonWrapper.styles = {};
    CommonWrapper.removeStyles = [
        'fontSize',
        'fontFamily',
        'fontWeight',
        'fontStyle',
        'fontVariant',
        'font'
    ];
    CommonWrapper.skipAttributes = {
        fontfamily: true,
        fontsize: true,
        fontweight: true,
        fontstyle: true,
        color: true,
        background: true,
        'class': true,
        href: true,
        style: true,
        xmlns: true
    };
    CommonWrapper.BOLDVARIANTS = {
        bold: {
            normal: 'bold',
            italic: 'bold-italic',
            fraktur: 'bold-fraktur',
            script: 'bold-script',
            'sans-serif': 'bold-sans-serif',
            'sans-serif-italic': 'sans-serif-bold-italic'
        },
        normal: {
            bold: 'normal',
            'bold-italic': 'italic',
            'bold-fraktur': 'fraktur',
            'bold-script': 'script',
            'bold-sans-serif': 'sans-serif',
            'sans-serif-bold-italic': 'sans-serif-italic'
        }
    };
    CommonWrapper.ITALICVARIANTS = {
        italic: {
            normal: 'italic',
            bold: 'bold-italic',
            'sans-serif': 'sans-serif-italic',
            'bold-sans-serif': 'sans-serif-bold-italic'
        },
        normal: {
            italic: 'normal',
            'bold-italic': 'bold',
            'sans-serif-italic': 'sans-serif',
            'sans-serif-bold-italic': 'bold-sans-serif'
        }
    };
    return CommonWrapper;
}(Wrapper_js_1.AbstractWrapper);
exports.CommonWrapper = CommonWrapper; //# sourceMappingURL=Wrapper.js.map
}}),
"[project]/node_modules/mathjax-full/js/output/common/Wrappers/math.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __extends = this && this.__extends || function() {
    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || ({
            __proto__: []
        }) instanceof Array && function(d, b) {
            d.__proto__ = b;
        } || function(d, b) {
            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
        };
        return extendStatics(d, b);
    };
    return function(d, b) {
        if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
}();
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CommonMathMixin = void 0;
function CommonMathMixin(Base) {
    return function(_super) {
        __extends(class_1, _super);
        function class_1() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        class_1.prototype.getWrapWidth = function(_i) {
            return this.parent ? this.getBBox().w : this.metrics.containerWidth / this.jax.pxPerEm;
        };
        return class_1;
    }(Base);
}
exports.CommonMathMixin = CommonMathMixin; //# sourceMappingURL=math.js.map
}}),
"[project]/node_modules/mathjax-full/js/output/common/Wrappers/mrow.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __extends = this && this.__extends || function() {
    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || ({
            __proto__: []
        }) instanceof Array && function(d, b) {
            d.__proto__ = b;
        } || function(d, b) {
            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
        };
        return extendStatics(d, b);
    };
    return function(d, b) {
        if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
}();
var __read = this && this.__read || function(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);
    } catch (error) {
        e = {
            error: error
        };
    } finally{
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        } finally{
            if (e) throw e.error;
        }
    }
    return ar;
};
var __spreadArray = this && this.__spreadArray || function(to, from, pack) {
    if (pack || arguments.length === 2) for(var i = 0, l = from.length, ar; i < l; i++){
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var __values = this && this.__values || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function() {
            if (o && i >= o.length) o = void 0;
            return {
                value: o && o[i++],
                done: !o
            };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CommonInferredMrowMixin = exports.CommonMrowMixin = void 0;
var BBox_js_1 = __turbopack_context__.r("[project]/node_modules/mathjax-full/js/util/BBox.js [app-rsc] (ecmascript)");
function CommonMrowMixin(Base) {
    return function(_super) {
        __extends(class_1, _super);
        function class_1() {
            var e_1, _a;
            var args = [];
            for(var _i = 0; _i < arguments.length; _i++){
                args[_i] = arguments[_i];
            }
            var _this = _super.apply(this, __spreadArray([], __read(args), false)) || this;
            _this.stretchChildren();
            try {
                for(var _b = __values(_this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()){
                    var child = _c.value;
                    if (child.bbox.pwidth) {
                        _this.bbox.pwidth = BBox_js_1.BBox.fullWidth;
                        break;
                    }
                }
            } catch (e_1_1) {
                e_1 = {
                    error: e_1_1
                };
            } finally{
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                } finally{
                    if (e_1) throw e_1.error;
                }
            }
            return _this;
        }
        Object.defineProperty(class_1.prototype, "fixesPWidth", {
            get: function() {
                return false;
            },
            enumerable: false,
            configurable: true
        });
        class_1.prototype.stretchChildren = function() {
            var e_2, _a, e_3, _b, e_4, _c;
            var stretchy = [];
            try {
                for(var _d = __values(this.childNodes), _e = _d.next(); !_e.done; _e = _d.next()){
                    var child = _e.value;
                    if (child.canStretch(1)) {
                        stretchy.push(child);
                    }
                }
            } catch (e_2_1) {
                e_2 = {
                    error: e_2_1
                };
            } finally{
                try {
                    if (_e && !_e.done && (_a = _d.return)) _a.call(_d);
                } finally{
                    if (e_2) throw e_2.error;
                }
            }
            var count = stretchy.length;
            var nodeCount = this.childNodes.length;
            if (count && nodeCount > 1) {
                var H = 0, D = 0;
                var all = count > 1 && count === nodeCount;
                try {
                    for(var _f = __values(this.childNodes), _g = _f.next(); !_g.done; _g = _f.next()){
                        var child = _g.value;
                        var noStretch = child.stretch.dir === 0;
                        if (all || noStretch) {
                            var _h = child.getOuterBBox(noStretch), h = _h.h, d = _h.d, rscale = _h.rscale;
                            h *= rscale;
                            d *= rscale;
                            if (h > H) H = h;
                            if (d > D) D = d;
                        }
                    }
                } catch (e_3_1) {
                    e_3 = {
                        error: e_3_1
                    };
                } finally{
                    try {
                        if (_g && !_g.done && (_b = _f.return)) _b.call(_f);
                    } finally{
                        if (e_3) throw e_3.error;
                    }
                }
                try {
                    for(var stretchy_1 = __values(stretchy), stretchy_1_1 = stretchy_1.next(); !stretchy_1_1.done; stretchy_1_1 = stretchy_1.next()){
                        var child = stretchy_1_1.value;
                        child.coreMO().getStretchedVariant([
                            H,
                            D
                        ]);
                    }
                } catch (e_4_1) {
                    e_4 = {
                        error: e_4_1
                    };
                } finally{
                    try {
                        if (stretchy_1_1 && !stretchy_1_1.done && (_c = stretchy_1.return)) _c.call(stretchy_1);
                    } finally{
                        if (e_4) throw e_4.error;
                    }
                }
            }
        };
        return class_1;
    }(Base);
}
exports.CommonMrowMixin = CommonMrowMixin;
function CommonInferredMrowMixin(Base) {
    return function(_super) {
        __extends(class_2, _super);
        function class_2() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        class_2.prototype.getScale = function() {
            this.bbox.scale = this.parent.bbox.scale;
            this.bbox.rscale = 1;
        };
        return class_2;
    }(Base);
}
exports.CommonInferredMrowMixin = CommonInferredMrowMixin; //# sourceMappingURL=mrow.js.map
}}),
"[project]/node_modules/mathjax-full/js/output/common/Wrappers/mi.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __extends = this && this.__extends || function() {
    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || ({
            __proto__: []
        }) instanceof Array && function(d, b) {
            d.__proto__ = b;
        } || function(d, b) {
            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
        };
        return extendStatics(d, b);
    };
    return function(d, b) {
        if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
}();
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CommonMiMixin = void 0;
function CommonMiMixin(Base) {
    return function(_super) {
        __extends(class_1, _super);
        function class_1() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        class_1.prototype.computeBBox = function(bbox, _recompute) {
            if (_recompute === void 0) {
                _recompute = false;
            }
            _super.prototype.computeBBox.call(this, bbox);
            this.copySkewIC(bbox);
        };
        return class_1;
    }(Base);
}
exports.CommonMiMixin = CommonMiMixin; //# sourceMappingURL=mi.js.map
}}),
"[project]/node_modules/mathjax-full/js/output/common/Wrappers/mo.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __extends = this && this.__extends || function() {
    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || ({
            __proto__: []
        }) instanceof Array && function(d, b) {
            d.__proto__ = b;
        } || function(d, b) {
            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
        };
        return extendStatics(d, b);
    };
    return function(d, b) {
        if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
}();
var __assign = this && this.__assign || function() {
    __assign = Object.assign || function(t) {
        for(var s, i = 1, n = arguments.length; i < n; i++){
            s = arguments[i];
            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __read = this && this.__read || function(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);
    } catch (error) {
        e = {
            error: error
        };
    } finally{
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        } finally{
            if (e) throw e.error;
        }
    }
    return ar;
};
var __spreadArray = this && this.__spreadArray || function(to, from, pack) {
    if (pack || arguments.length === 2) for(var i = 0, l = from.length, ar; i < l; i++){
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var __values = this && this.__values || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function() {
            if (o && i >= o.length) o = void 0;
            return {
                value: o && o[i++],
                done: !o
            };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var _a;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CommonMoMixin = exports.DirectionVH = void 0;
var BBox_js_1 = __turbopack_context__.r("[project]/node_modules/mathjax-full/js/util/BBox.js [app-rsc] (ecmascript)");
var string_js_1 = __turbopack_context__.r("[project]/node_modules/mathjax-full/js/util/string.js [app-rsc] (ecmascript)");
var FontData_js_1 = __turbopack_context__.r("[project]/node_modules/mathjax-full/js/output/common/FontData.js [app-rsc] (ecmascript)");
exports.DirectionVH = (_a = {}, _a[1] = 'v', _a[2] = 'h', _a);
function CommonMoMixin(Base) {
    return function(_super) {
        __extends(class_1, _super);
        function class_1() {
            var args = [];
            for(var _i = 0; _i < arguments.length; _i++){
                args[_i] = arguments[_i];
            }
            var _this = _super.apply(this, __spreadArray([], __read(args), false)) || this;
            _this.size = null;
            _this.isAccent = _this.node.isAccent;
            return _this;
        }
        class_1.prototype.computeBBox = function(bbox, _recompute) {
            if (_recompute === void 0) {
                _recompute = false;
            }
            this.protoBBox(bbox);
            if (this.node.attributes.get('symmetric') && this.stretch.dir !== 2) {
                var d = this.getCenterOffset(bbox);
                bbox.h += d;
                bbox.d -= d;
            }
            if (this.node.getProperty('mathaccent') && (this.stretch.dir === 0 || this.size >= 0)) {
                bbox.w = 0;
            }
        };
        class_1.prototype.protoBBox = function(bbox) {
            var stretchy = this.stretch.dir !== 0;
            if (stretchy && this.size === null) {
                this.getStretchedVariant([
                    0
                ]);
            }
            if (stretchy && this.size < 0) return;
            _super.prototype.computeBBox.call(this, bbox);
            this.copySkewIC(bbox);
        };
        class_1.prototype.getAccentOffset = function() {
            var bbox = BBox_js_1.BBox.empty();
            this.protoBBox(bbox);
            return -bbox.w / 2;
        };
        class_1.prototype.getCenterOffset = function(bbox) {
            if (bbox === void 0) {
                bbox = null;
            }
            if (!bbox) {
                bbox = BBox_js_1.BBox.empty();
                _super.prototype.computeBBox.call(this, bbox);
            }
            return (bbox.h + bbox.d) / 2 + this.font.params.axis_height - bbox.h;
        };
        class_1.prototype.getVariant = function() {
            if (this.node.attributes.get('largeop')) {
                this.variant = this.node.attributes.get('displaystyle') ? '-largeop' : '-smallop';
                return;
            }
            if (!this.node.attributes.getExplicit('mathvariant') && this.node.getProperty('pseudoscript') === false) {
                this.variant = '-tex-variant';
                return;
            }
            _super.prototype.getVariant.call(this);
        };
        class_1.prototype.canStretch = function(direction) {
            if (this.stretch.dir !== 0) {
                return this.stretch.dir === direction;
            }
            var attributes = this.node.attributes;
            if (!attributes.get('stretchy')) return false;
            var c = this.getText();
            if (Array.from(c).length !== 1) return false;
            var delim = this.font.getDelimiter(c.codePointAt(0));
            this.stretch = delim && delim.dir === direction ? delim : FontData_js_1.NOSTRETCH;
            return this.stretch.dir !== 0;
        };
        class_1.prototype.getStretchedVariant = function(WH, exact) {
            var e_1, _a;
            if (exact === void 0) {
                exact = false;
            }
            if (this.stretch.dir !== 0) {
                var D = this.getWH(WH);
                var min = this.getSize('minsize', 0);
                var max = this.getSize('maxsize', Infinity);
                var mathaccent = this.node.getProperty('mathaccent');
                D = Math.max(min, Math.min(max, D));
                var df = this.font.params.delimiterfactor / 1000;
                var ds = this.font.params.delimitershortfall;
                var m = min || exact ? D : mathaccent ? Math.min(D / df, D + ds) : Math.max(D * df, D - ds);
                var delim = this.stretch;
                var c = delim.c || this.getText().codePointAt(0);
                var i = 0;
                if (delim.sizes) {
                    try {
                        for(var _b = __values(delim.sizes), _c = _b.next(); !_c.done; _c = _b.next()){
                            var d = _c.value;
                            if (d >= m) {
                                if (mathaccent && i) {
                                    i--;
                                }
                                this.variant = this.font.getSizeVariant(c, i);
                                this.size = i;
                                if (delim.schar && delim.schar[i]) {
                                    this.stretch = __assign(__assign({}, this.stretch), {
                                        c: delim.schar[i]
                                    });
                                }
                                return;
                            }
                            i++;
                        }
                    } catch (e_1_1) {
                        e_1 = {
                            error: e_1_1
                        };
                    } finally{
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        } finally{
                            if (e_1) throw e_1.error;
                        }
                    }
                }
                if (delim.stretch) {
                    this.size = -1;
                    this.invalidateBBox();
                    this.getStretchBBox(WH, this.checkExtendedHeight(D, delim), delim);
                } else {
                    this.variant = this.font.getSizeVariant(c, i - 1);
                    this.size = i - 1;
                }
            }
        };
        class_1.prototype.getSize = function(name, value) {
            var attributes = this.node.attributes;
            if (attributes.isSet(name)) {
                value = this.length2em(attributes.get(name), 1, 1);
            }
            return value;
        };
        class_1.prototype.getWH = function(WH) {
            if (WH.length === 0) return 0;
            if (WH.length === 1) return WH[0];
            var _a = __read(WH, 2), H = _a[0], D = _a[1];
            var a = this.font.params.axis_height;
            return this.node.attributes.get('symmetric') ? 2 * Math.max(H - a, D + a) : H + D;
        };
        class_1.prototype.getStretchBBox = function(WHD, D, C) {
            var _a;
            if (C.hasOwnProperty('min') && C.min > D) {
                D = C.min;
            }
            var _b = __read(C.HDW, 3), h = _b[0], d = _b[1], w = _b[2];
            if (this.stretch.dir === 1) {
                _a = __read(this.getBaseline(WHD, D, C), 2), h = _a[0], d = _a[1];
            } else {
                w = D;
            }
            this.bbox.h = h;
            this.bbox.d = d;
            this.bbox.w = w;
        };
        class_1.prototype.getBaseline = function(WHD, HD, C) {
            var hasWHD = WHD.length === 2 && WHD[0] + WHD[1] === HD;
            var symmetric = this.node.attributes.get('symmetric');
            var _a = __read(hasWHD ? WHD : [
                HD,
                0
            ], 2), H = _a[0], D = _a[1];
            var _b = __read([
                H + D,
                0
            ], 2), h = _b[0], d = _b[1];
            if (symmetric) {
                var a = this.font.params.axis_height;
                if (hasWHD) {
                    h = 2 * Math.max(H - a, D + a);
                }
                d = h / 2 - a;
            } else if (hasWHD) {
                d = D;
            } else {
                var _c = __read(C.HDW || [
                    .75,
                    .25
                ], 2), ch = _c[0], cd = _c[1];
                d = cd * (h / (ch + cd));
            }
            return [
                h - d,
                d
            ];
        };
        class_1.prototype.checkExtendedHeight = function(D, C) {
            if (C.fullExt) {
                var _a = __read(C.fullExt, 2), extSize = _a[0], endSize = _a[1];
                var n = Math.ceil(Math.max(0, D - endSize) / extSize);
                D = endSize + n * extSize;
            }
            return D;
        };
        class_1.prototype.remapChars = function(chars) {
            var primes = this.node.getProperty('primes');
            if (primes) {
                return (0, string_js_1.unicodeChars)(primes);
            }
            if (chars.length === 1) {
                var parent_1 = this.node.coreParent().parent;
                var isAccent = this.isAccent && !parent_1.isKind('mrow');
                var map = isAccent ? 'accent' : 'mo';
                var text = this.font.getRemappedChar(map, chars[0]);
                if (text) {
                    chars = this.unicodeChars(text, this.variant);
                }
            }
            return chars;
        };
        return class_1;
    }(Base);
}
exports.CommonMoMixin = CommonMoMixin; //# sourceMappingURL=mo.js.map
}}),
"[project]/node_modules/mathjax-full/js/output/common/Wrappers/mn.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __extends = this && this.__extends || function() {
    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || ({
            __proto__: []
        }) instanceof Array && function(d, b) {
            d.__proto__ = b;
        } || function(d, b) {
            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
        };
        return extendStatics(d, b);
    };
    return function(d, b) {
        if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
}();
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CommonMnMixin = void 0;
function CommonMnMixin(Base) {
    return function(_super) {
        __extends(class_1, _super);
        function class_1() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        class_1.prototype.remapChars = function(chars) {
            if (chars.length) {
                var text = this.font.getRemappedChar('mn', chars[0]);
                if (text) {
                    var c = this.unicodeChars(text, this.variant);
                    if (c.length === 1) {
                        chars[0] = c[0];
                    } else {
                        chars = c.concat(chars.slice(1));
                    }
                }
            }
            return chars;
        };
        return class_1;
    }(Base);
}
exports.CommonMnMixin = CommonMnMixin; //# sourceMappingURL=mn.js.map
}}),
"[project]/node_modules/mathjax-full/js/output/common/Wrappers/ms.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __extends = this && this.__extends || function() {
    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || ({
            __proto__: []
        }) instanceof Array && function(d, b) {
            d.__proto__ = b;
        } || function(d, b) {
            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
        };
        return extendStatics(d, b);
    };
    return function(d, b) {
        if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
}();
var __read = this && this.__read || function(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);
    } catch (error) {
        e = {
            error: error
        };
    } finally{
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        } finally{
            if (e) throw e.error;
        }
    }
    return ar;
};
var __spreadArray = this && this.__spreadArray || function(to, from, pack) {
    if (pack || arguments.length === 2) for(var i = 0, l = from.length, ar; i < l; i++){
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CommonMsMixin = void 0;
function CommonMsMixin(Base) {
    return function(_super) {
        __extends(class_1, _super);
        function class_1() {
            var args = [];
            for(var _i = 0; _i < arguments.length; _i++){
                args[_i] = arguments[_i];
            }
            var _this = _super.apply(this, __spreadArray([], __read(args), false)) || this;
            var attributes = _this.node.attributes;
            var quotes = attributes.getList('lquote', 'rquote');
            if (_this.variant !== 'monospace') {
                if (!attributes.isSet('lquote') && quotes.lquote === '"') quotes.lquote = '\u201C';
                if (!attributes.isSet('rquote') && quotes.rquote === '"') quotes.rquote = '\u201D';
            }
            _this.childNodes.unshift(_this.createText(quotes.lquote));
            _this.childNodes.push(_this.createText(quotes.rquote));
            return _this;
        }
        class_1.prototype.createText = function(text) {
            var node = this.wrap(this.mmlText(text));
            node.parent = this;
            return node;
        };
        return class_1;
    }(Base);
}
exports.CommonMsMixin = CommonMsMixin; //# sourceMappingURL=ms.js.map
}}),
"[project]/node_modules/mathjax-full/js/output/common/Wrappers/mtext.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __extends = this && this.__extends || function() {
    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || ({
            __proto__: []
        }) instanceof Array && function(d, b) {
            d.__proto__ = b;
        } || function(d, b) {
            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
        };
        return extendStatics(d, b);
    };
    return function(d, b) {
        if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
}();
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CommonMtextMixin = void 0;
function CommonMtextMixin(Base) {
    var _a;
    return _a = function(_super) {
        __extends(class_1, _super);
        function class_1() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        class_1.prototype.getVariant = function() {
            var options = this.jax.options;
            var data = this.jax.math.outputData;
            var merror = (!!data.merrorFamily || !!options.merrorFont) && this.node.Parent.isKind('merror');
            if (!!data.mtextFamily || !!options.mtextFont || merror) {
                var variant = this.node.attributes.get('mathvariant');
                var font = this.constructor.INHERITFONTS[variant] || this.jax.font.getCssFont(variant);
                var family = font[0] || (merror ? data.merrorFamily || options.merrorFont : data.mtextFamily || options.mtextFont);
                this.variant = this.explicitVariant(family, font[2] ? 'bold' : '', font[1] ? 'italic' : '');
                return;
            }
            _super.prototype.getVariant.call(this);
        };
        return class_1;
    }(Base), _a.INHERITFONTS = {
        normal: [
            '',
            false,
            false
        ],
        bold: [
            '',
            false,
            true
        ],
        italic: [
            '',
            true,
            false
        ],
        'bold-italic': [
            '',
            true,
            true
        ]
    }, _a;
}
exports.CommonMtextMixin = CommonMtextMixin; //# sourceMappingURL=mtext.js.map
}}),
"[project]/node_modules/mathjax-full/js/output/common/Wrappers/mspace.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __extends = this && this.__extends || function() {
    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || ({
            __proto__: []
        }) instanceof Array && function(d, b) {
            d.__proto__ = b;
        } || function(d, b) {
            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
        };
        return extendStatics(d, b);
    };
    return function(d, b) {
        if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
}();
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CommonMspaceMixin = void 0;
function CommonMspaceMixin(Base) {
    return function(_super) {
        __extends(class_1, _super);
        function class_1() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        class_1.prototype.computeBBox = function(bbox, _recompute) {
            if (_recompute === void 0) {
                _recompute = false;
            }
            var attributes = this.node.attributes;
            bbox.w = this.length2em(attributes.get('width'), 0);
            bbox.h = this.length2em(attributes.get('height'), 0);
            bbox.d = this.length2em(attributes.get('depth'), 0);
        };
        class_1.prototype.handleVariant = function() {};
        return class_1;
    }(Base);
}
exports.CommonMspaceMixin = CommonMspaceMixin; //# sourceMappingURL=mspace.js.map
}}),
"[project]/node_modules/mathjax-full/js/output/common/Wrappers/mpadded.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __extends = this && this.__extends || function() {
    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || ({
            __proto__: []
        }) instanceof Array && function(d, b) {
            d.__proto__ = b;
        } || function(d, b) {
            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
        };
        return extendStatics(d, b);
    };
    return function(d, b) {
        if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
}();
var __read = this && this.__read || function(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);
    } catch (error) {
        e = {
            error: error
        };
    } finally{
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        } finally{
            if (e) throw e.error;
        }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CommonMpaddedMixin = void 0;
function CommonMpaddedMixin(Base) {
    return function(_super) {
        __extends(class_1, _super);
        function class_1() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        class_1.prototype.getDimens = function() {
            var values = this.node.attributes.getList('width', 'height', 'depth', 'lspace', 'voffset');
            var bbox = this.childNodes[0].getBBox();
            var w = bbox.w, h = bbox.h, d = bbox.d;
            var W = w, H = h, D = d, x = 0, y = 0, dx = 0;
            if (values.width !== '') w = this.dimen(values.width, bbox, 'w', 0);
            if (values.height !== '') h = this.dimen(values.height, bbox, 'h', 0);
            if (values.depth !== '') d = this.dimen(values.depth, bbox, 'd', 0);
            if (values.voffset !== '') y = this.dimen(values.voffset, bbox);
            if (values.lspace !== '') x = this.dimen(values.lspace, bbox);
            var align = this.node.attributes.get('data-align');
            if (align) {
                dx = this.getAlignX(w, bbox, align);
            }
            return [
                H,
                D,
                W,
                h - H,
                d - D,
                w - W,
                x,
                y,
                dx
            ];
        };
        class_1.prototype.dimen = function(length, bbox, d, m) {
            if (d === void 0) {
                d = '';
            }
            if (m === void 0) {
                m = null;
            }
            length = String(length);
            var match = length.match(/width|height|depth/);
            var size = match ? bbox[match[0].charAt(0)] : d ? bbox[d] : 0;
            var dimen = this.length2em(length, size) || 0;
            if (length.match(/^[-+]/) && d) {
                dimen += size;
            }
            if (m != null) {
                dimen = Math.max(m, dimen);
            }
            return dimen;
        };
        class_1.prototype.computeBBox = function(bbox, recompute) {
            if (recompute === void 0) {
                recompute = false;
            }
            var _a = __read(this.getDimens(), 6), H = _a[0], D = _a[1], W = _a[2], dh = _a[3], dd = _a[4], dw = _a[5];
            bbox.w = W + dw;
            bbox.h = H + dh;
            bbox.d = D + dd;
            this.setChildPWidths(recompute, bbox.w);
        };
        class_1.prototype.getWrapWidth = function(_i) {
            return this.getBBox().w;
        };
        class_1.prototype.getChildAlign = function(_i) {
            return this.node.attributes.get('data-align') || 'left';
        };
        return class_1;
    }(Base);
}
exports.CommonMpaddedMixin = CommonMpaddedMixin; //# sourceMappingURL=mpadded.js.map
}}),
"[project]/node_modules/mathjax-full/js/output/common/Wrappers/mfrac.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __extends = this && this.__extends || function() {
    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || ({
            __proto__: []
        }) instanceof Array && function(d, b) {
            d.__proto__ = b;
        } || function(d, b) {
            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
        };
        return extendStatics(d, b);
    };
    return function(d, b) {
        if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
}();
var __read = this && this.__read || function(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);
    } catch (error) {
        e = {
            error: error
        };
    } finally{
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        } finally{
            if (e) throw e.error;
        }
    }
    return ar;
};
var __spreadArray = this && this.__spreadArray || function(to, from, pack) {
    if (pack || arguments.length === 2) for(var i = 0, l = from.length, ar; i < l; i++){
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CommonMfracMixin = void 0;
function CommonMfracMixin(Base) {
    return function(_super) {
        __extends(class_1, _super);
        function class_1() {
            var args = [];
            for(var _i = 0; _i < arguments.length; _i++){
                args[_i] = arguments[_i];
            }
            var _this = _super.apply(this, __spreadArray([], __read(args), false)) || this;
            _this.bevel = null;
            _this.pad = _this.node.getProperty('withDelims') ? 0 : _this.font.params.nulldelimiterspace;
            if (_this.node.attributes.get('bevelled')) {
                var H = _this.getBevelData(_this.isDisplay()).H;
                var bevel = _this.bevel = _this.createMo('/');
                bevel.node.attributes.set('symmetric', true);
                bevel.canStretch(1);
                bevel.getStretchedVariant([
                    H
                ], true);
            }
            return _this;
        }
        class_1.prototype.computeBBox = function(bbox, recompute) {
            if (recompute === void 0) {
                recompute = false;
            }
            bbox.empty();
            var _a = this.node.attributes.getList('linethickness', 'bevelled'), linethickness = _a.linethickness, bevelled = _a.bevelled;
            var display = this.isDisplay();
            var w = null;
            if (bevelled) {
                this.getBevelledBBox(bbox, display);
            } else {
                var thickness = this.length2em(String(linethickness), .06);
                w = -2 * this.pad;
                if (thickness === 0) {
                    this.getAtopBBox(bbox, display);
                } else {
                    this.getFractionBBox(bbox, display, thickness);
                    w -= .2;
                }
                w += bbox.w;
            }
            bbox.clean();
            this.setChildPWidths(recompute, w);
        };
        class_1.prototype.getFractionBBox = function(bbox, display, t) {
            var nbox = this.childNodes[0].getOuterBBox();
            var dbox = this.childNodes[1].getOuterBBox();
            var tex = this.font.params;
            var a = tex.axis_height;
            var _a = this.getTUV(display, t), T = _a.T, u = _a.u, v = _a.v;
            bbox.combine(nbox, 0, a + T + Math.max(nbox.d * nbox.rscale, u));
            bbox.combine(dbox, 0, a - T - Math.max(dbox.h * dbox.rscale, v));
            bbox.w += 2 * this.pad + .2;
        };
        class_1.prototype.getTUV = function(display, t) {
            var tex = this.font.params;
            var a = tex.axis_height;
            var T = (display ? 3.5 : 1.5) * t;
            return {
                T: (display ? 3.5 : 1.5) * t,
                u: (display ? tex.num1 : tex.num2) - a - T,
                v: (display ? tex.denom1 : tex.denom2) + a - T
            };
        };
        class_1.prototype.getAtopBBox = function(bbox, display) {
            var _a = this.getUVQ(display), u = _a.u, v = _a.v, nbox = _a.nbox, dbox = _a.dbox;
            bbox.combine(nbox, 0, u);
            bbox.combine(dbox, 0, -v);
            bbox.w += 2 * this.pad;
        };
        class_1.prototype.getUVQ = function(display) {
            var nbox = this.childNodes[0].getOuterBBox();
            var dbox = this.childNodes[1].getOuterBBox();
            var tex = this.font.params;
            var _a = __read(display ? [
                tex.num1,
                tex.denom1
            ] : [
                tex.num3,
                tex.denom2
            ], 2), u = _a[0], v = _a[1];
            var p = (display ? 7 : 3) * tex.rule_thickness;
            var q = u - nbox.d * nbox.scale - (dbox.h * dbox.scale - v);
            if (q < p) {
                u += (p - q) / 2;
                v += (p - q) / 2;
                q = p;
            }
            return {
                u: u,
                v: v,
                q: q,
                nbox: nbox,
                dbox: dbox
            };
        };
        class_1.prototype.getBevelledBBox = function(bbox, display) {
            var _a = this.getBevelData(display), u = _a.u, v = _a.v, delta = _a.delta, nbox = _a.nbox, dbox = _a.dbox;
            var lbox = this.bevel.getOuterBBox();
            bbox.combine(nbox, 0, u);
            bbox.combine(lbox, bbox.w - delta / 2, 0);
            bbox.combine(dbox, bbox.w - delta / 2, v);
        };
        class_1.prototype.getBevelData = function(display) {
            var nbox = this.childNodes[0].getOuterBBox();
            var dbox = this.childNodes[1].getOuterBBox();
            var delta = display ? .4 : .15;
            var H = Math.max(nbox.scale * (nbox.h + nbox.d), dbox.scale * (dbox.h + dbox.d)) + 2 * delta;
            var a = this.font.params.axis_height;
            var u = nbox.scale * (nbox.d - nbox.h) / 2 + a + delta;
            var v = dbox.scale * (dbox.d - dbox.h) / 2 + a - delta;
            return {
                H: H,
                delta: delta,
                u: u,
                v: v,
                nbox: nbox,
                dbox: dbox
            };
        };
        class_1.prototype.canStretch = function(_direction) {
            return false;
        };
        class_1.prototype.isDisplay = function() {
            var _a = this.node.attributes.getList('displaystyle', 'scriptlevel'), displaystyle = _a.displaystyle, scriptlevel = _a.scriptlevel;
            return displaystyle && scriptlevel === 0;
        };
        class_1.prototype.getWrapWidth = function(i) {
            var attributes = this.node.attributes;
            if (attributes.get('bevelled')) {
                return this.childNodes[i].getOuterBBox().w;
            }
            var w = this.getBBox().w;
            var thickness = this.length2em(attributes.get('linethickness'));
            return w - (thickness ? .2 : 0) - 2 * this.pad;
        };
        class_1.prototype.getChildAlign = function(i) {
            var attributes = this.node.attributes;
            return attributes.get('bevelled') ? 'left' : attributes.get([
                'numalign',
                'denomalign'
            ][i]);
        };
        return class_1;
    }(Base);
}
exports.CommonMfracMixin = CommonMfracMixin; //# sourceMappingURL=mfrac.js.map
}}),
"[project]/node_modules/mathjax-full/js/output/common/Wrappers/msqrt.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __extends = this && this.__extends || function() {
    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || ({
            __proto__: []
        }) instanceof Array && function(d, b) {
            d.__proto__ = b;
        } || function(d, b) {
            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
        };
        return extendStatics(d, b);
    };
    return function(d, b) {
        if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
}();
var __read = this && this.__read || function(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);
    } catch (error) {
        e = {
            error: error
        };
    } finally{
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        } finally{
            if (e) throw e.error;
        }
    }
    return ar;
};
var __spreadArray = this && this.__spreadArray || function(to, from, pack) {
    if (pack || arguments.length === 2) for(var i = 0, l = from.length, ar; i < l; i++){
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CommonMsqrtMixin = void 0;
var BBox_js_1 = __turbopack_context__.r("[project]/node_modules/mathjax-full/js/util/BBox.js [app-rsc] (ecmascript)");
function CommonMsqrtMixin(Base) {
    return function(_super) {
        __extends(class_1, _super);
        function class_1() {
            var args = [];
            for(var _i = 0; _i < arguments.length; _i++){
                args[_i] = arguments[_i];
            }
            var _this = _super.apply(this, __spreadArray([], __read(args), false)) || this;
            var surd = _this.createMo('\u221A');
            surd.canStretch(1);
            var _a = _this.childNodes[_this.base].getOuterBBox(), h = _a.h, d = _a.d;
            var t = _this.font.params.rule_thickness;
            var p = _this.node.attributes.get('displaystyle') ? _this.font.params.x_height : t;
            _this.surdH = h + d + 2 * t + p / 4;
            surd.getStretchedVariant([
                _this.surdH - d,
                d
            ], true);
            return _this;
        }
        Object.defineProperty(class_1.prototype, "base", {
            get: function() {
                return 0;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(class_1.prototype, "surd", {
            get: function() {
                return 1;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(class_1.prototype, "root", {
            get: function() {
                return null;
            },
            enumerable: false,
            configurable: true
        });
        class_1.prototype.createMo = function(text) {
            var node = _super.prototype.createMo.call(this, text);
            this.childNodes.push(node);
            return node;
        };
        class_1.prototype.computeBBox = function(bbox, recompute) {
            if (recompute === void 0) {
                recompute = false;
            }
            var surdbox = this.childNodes[this.surd].getBBox();
            var basebox = new BBox_js_1.BBox(this.childNodes[this.base].getOuterBBox());
            var q = this.getPQ(surdbox)[1];
            var t = this.font.params.rule_thickness;
            var H = basebox.h + q + t;
            var _a = __read(this.getRootDimens(surdbox, H), 1), x = _a[0];
            bbox.h = H + t;
            this.combineRootBBox(bbox, surdbox, H);
            bbox.combine(surdbox, x, H - surdbox.h);
            bbox.combine(basebox, x + surdbox.w, 0);
            bbox.clean();
            this.setChildPWidths(recompute);
        };
        class_1.prototype.combineRootBBox = function(_bbox, _sbox, _H) {};
        class_1.prototype.getPQ = function(sbox) {
            var t = this.font.params.rule_thickness;
            var p = this.node.attributes.get('displaystyle') ? this.font.params.x_height : t;
            var q = sbox.h + sbox.d > this.surdH ? (sbox.h + sbox.d - (this.surdH - 2 * t - p / 2)) / 2 : t + p / 4;
            return [
                p,
                q
            ];
        };
        class_1.prototype.getRootDimens = function(_sbox, _H) {
            return [
                0,
                0,
                0,
                0
            ];
        };
        return class_1;
    }(Base);
}
exports.CommonMsqrtMixin = CommonMsqrtMixin; //# sourceMappingURL=msqrt.js.map
}}),
"[project]/node_modules/mathjax-full/js/output/common/Wrappers/mroot.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __extends = this && this.__extends || function() {
    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || ({
            __proto__: []
        }) instanceof Array && function(d, b) {
            d.__proto__ = b;
        } || function(d, b) {
            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
        };
        return extendStatics(d, b);
    };
    return function(d, b) {
        if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
}();
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CommonMrootMixin = void 0;
function CommonMrootMixin(Base) {
    return function(_super) {
        __extends(class_1, _super);
        function class_1() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Object.defineProperty(class_1.prototype, "surd", {
            get: function() {
                return 2;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(class_1.prototype, "root", {
            get: function() {
                return 1;
            },
            enumerable: false,
            configurable: true
        });
        class_1.prototype.combineRootBBox = function(BBOX, sbox, H) {
            var bbox = this.childNodes[this.root].getOuterBBox();
            var h = this.getRootDimens(sbox, H)[1];
            BBOX.combine(bbox, 0, h);
        };
        class_1.prototype.getRootDimens = function(sbox, H) {
            var surd = this.childNodes[this.surd];
            var bbox = this.childNodes[this.root].getOuterBBox();
            var offset = (surd.size < 0 ? .5 : .6) * sbox.w;
            var w = bbox.w, rscale = bbox.rscale;
            var W = Math.max(w, offset / rscale);
            var dx = Math.max(0, W - w);
            var h = this.rootHeight(bbox, sbox, surd.size, H);
            var x = W * rscale - offset;
            return [
                x,
                h,
                dx
            ];
        };
        class_1.prototype.rootHeight = function(rbox, sbox, size, H) {
            var h = sbox.h + sbox.d;
            var b = (size < 0 ? 1.9 : .55 * h) - (h - H);
            return b + Math.max(0, rbox.d * rbox.rscale);
        };
        return class_1;
    }(Base);
}
exports.CommonMrootMixin = CommonMrootMixin; //# sourceMappingURL=mroot.js.map
}}),
"[project]/node_modules/mathjax-full/js/output/common/Wrappers/mfenced.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __extends = this && this.__extends || function() {
    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || ({
            __proto__: []
        }) instanceof Array && function(d, b) {
            d.__proto__ = b;
        } || function(d, b) {
            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
        };
        return extendStatics(d, b);
    };
    return function(d, b) {
        if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
}();
var __read = this && this.__read || function(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);
    } catch (error) {
        e = {
            error: error
        };
    } finally{
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        } finally{
            if (e) throw e.error;
        }
    }
    return ar;
};
var __spreadArray = this && this.__spreadArray || function(to, from, pack) {
    if (pack || arguments.length === 2) for(var i = 0, l = from.length, ar; i < l; i++){
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var __values = this && this.__values || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function() {
            if (o && i >= o.length) o = void 0;
            return {
                value: o && o[i++],
                done: !o
            };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CommonMfencedMixin = void 0;
function CommonMfencedMixin(Base) {
    return function(_super) {
        __extends(class_1, _super);
        function class_1() {
            var args = [];
            for(var _i = 0; _i < arguments.length; _i++){
                args[_i] = arguments[_i];
            }
            var _this = _super.apply(this, __spreadArray([], __read(args), false)) || this;
            _this.mrow = null;
            _this.createMrow();
            _this.addMrowChildren();
            return _this;
        }
        class_1.prototype.createMrow = function() {
            var mmlFactory = this.node.factory;
            var mrow = mmlFactory.create('inferredMrow');
            mrow.inheritAttributesFrom(this.node);
            this.mrow = this.wrap(mrow);
            this.mrow.parent = this;
        };
        class_1.prototype.addMrowChildren = function() {
            var e_1, _a;
            var mfenced = this.node;
            var mrow = this.mrow;
            this.addMo(mfenced.open);
            if (this.childNodes.length) {
                mrow.childNodes.push(this.childNodes[0]);
            }
            var i = 0;
            try {
                for(var _b = __values(this.childNodes.slice(1)), _c = _b.next(); !_c.done; _c = _b.next()){
                    var child = _c.value;
                    this.addMo(mfenced.separators[i++]);
                    mrow.childNodes.push(child);
                }
            } catch (e_1_1) {
                e_1 = {
                    error: e_1_1
                };
            } finally{
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                } finally{
                    if (e_1) throw e_1.error;
                }
            }
            this.addMo(mfenced.close);
            mrow.stretchChildren();
        };
        class_1.prototype.addMo = function(node) {
            if (!node) return;
            var mo = this.wrap(node);
            this.mrow.childNodes.push(mo);
            mo.parent = this.mrow;
        };
        class_1.prototype.computeBBox = function(bbox, recompute) {
            if (recompute === void 0) {
                recompute = false;
            }
            bbox.updateFrom(this.mrow.getOuterBBox());
            this.setChildPWidths(recompute);
        };
        return class_1;
    }(Base);
}
exports.CommonMfencedMixin = CommonMfencedMixin; //# sourceMappingURL=mfenced.js.map
}}),
"[project]/node_modules/mathjax-full/js/output/common/Wrappers/scriptbase.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __extends = this && this.__extends || function() {
    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || ({
            __proto__: []
        }) instanceof Array && function(d, b) {
            d.__proto__ = b;
        } || function(d, b) {
            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
        };
        return extendStatics(d, b);
    };
    return function(d, b) {
        if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
}();
var __read = this && this.__read || function(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);
    } catch (error) {
        e = {
            error: error
        };
    } finally{
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        } finally{
            if (e) throw e.error;
        }
    }
    return ar;
};
var __spreadArray = this && this.__spreadArray || function(to, from, pack) {
    if (pack || arguments.length === 2) for(var i = 0, l = from.length, ar; i < l; i++){
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var __values = this && this.__values || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function() {
            if (o && i >= o.length) o = void 0;
            return {
                value: o && o[i++],
                done: !o
            };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CommonScriptbaseMixin = void 0;
var MmlNode_js_1 = __turbopack_context__.r("[project]/node_modules/mathjax-full/js/core/MmlTree/MmlNode.js [app-rsc] (ecmascript)");
function CommonScriptbaseMixin(Base) {
    var _a;
    return _a = function(_super) {
        __extends(class_1, _super);
        function class_1() {
            var args = [];
            for(var _i = 0; _i < arguments.length; _i++){
                args[_i] = arguments[_i];
            }
            var _this = _super.apply(this, __spreadArray([], __read(args), false)) || this;
            _this.baseScale = 1;
            _this.baseIc = 0;
            _this.baseRemoveIc = false;
            _this.baseIsChar = false;
            _this.baseHasAccentOver = null;
            _this.baseHasAccentUnder = null;
            _this.isLineAbove = false;
            _this.isLineBelow = false;
            _this.isMathAccent = false;
            var core = _this.baseCore = _this.getBaseCore();
            if (!core) return _this;
            _this.setBaseAccentsFor(core);
            _this.baseScale = _this.getBaseScale();
            _this.baseIc = _this.getBaseIc();
            _this.baseIsChar = _this.isCharBase();
            _this.isMathAccent = _this.baseIsChar && _this.scriptChild && !!_this.scriptChild.coreMO().node.getProperty('mathaccent');
            _this.checkLineAccents();
            _this.baseRemoveIc = !_this.isLineAbove && !_this.isLineBelow && (!_this.constructor.useIC || _this.isMathAccent);
            return _this;
        }
        Object.defineProperty(class_1.prototype, "baseChild", {
            get: function() {
                return this.childNodes[this.node.base];
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(class_1.prototype, "scriptChild", {
            get: function() {
                return this.childNodes[1];
            },
            enumerable: false,
            configurable: true
        });
        class_1.prototype.getBaseCore = function() {
            var core = this.getSemanticBase() || this.childNodes[0];
            while(core && (core.childNodes.length === 1 && (core.node.isKind('mrow') || core.node.isKind('TeXAtom') && core.node.texClass !== MmlNode_js_1.TEXCLASS.VCENTER || core.node.isKind('mstyle') || core.node.isKind('mpadded') || core.node.isKind('mphantom') || core.node.isKind('semantics')) || core.node.isKind('munderover') && core.isMathAccent)){
                this.setBaseAccentsFor(core);
                core = core.childNodes[0];
            }
            if (!core) {
                this.baseHasAccentOver = this.baseHasAccentUnder = false;
            }
            return core || this.childNodes[0];
        };
        class_1.prototype.setBaseAccentsFor = function(core) {
            if (core.node.isKind('munderover')) {
                if (this.baseHasAccentOver === null) {
                    this.baseHasAccentOver = !!core.node.attributes.get('accent');
                }
                if (this.baseHasAccentUnder === null) {
                    this.baseHasAccentUnder = !!core.node.attributes.get('accentunder');
                }
            }
        };
        class_1.prototype.getSemanticBase = function() {
            var fence = this.node.attributes.getExplicit('data-semantic-fencepointer');
            return this.getBaseFence(this.baseChild, fence);
        };
        class_1.prototype.getBaseFence = function(fence, id) {
            var e_1, _a;
            if (!fence || !fence.node.attributes || !id) {
                return null;
            }
            if (fence.node.attributes.getExplicit('data-semantic-id') === id) {
                return fence;
            }
            try {
                for(var _b = __values(fence.childNodes), _c = _b.next(); !_c.done; _c = _b.next()){
                    var child = _c.value;
                    var result = this.getBaseFence(child, id);
                    if (result) {
                        return result;
                    }
                }
            } catch (e_1_1) {
                e_1 = {
                    error: e_1_1
                };
            } finally{
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                } finally{
                    if (e_1) throw e_1.error;
                }
            }
            return null;
        };
        class_1.prototype.getBaseScale = function() {
            var child = this.baseCore;
            var scale = 1;
            while(child && child !== this){
                var bbox = child.getOuterBBox();
                scale *= bbox.rscale;
                child = child.parent;
            }
            return scale;
        };
        class_1.prototype.getBaseIc = function() {
            return this.baseCore.getOuterBBox().ic * this.baseScale;
        };
        class_1.prototype.getAdjustedIc = function() {
            var bbox = this.baseCore.getOuterBBox();
            return (bbox.ic ? 1.05 * bbox.ic + .05 : 0) * this.baseScale;
        };
        class_1.prototype.isCharBase = function() {
            var base = this.baseCore;
            return (base.node.isKind('mo') && base.size === null || base.node.isKind('mi') || base.node.isKind('mn')) && base.bbox.rscale === 1 && Array.from(base.getText()).length === 1;
        };
        class_1.prototype.checkLineAccents = function() {
            if (!this.node.isKind('munderover')) return;
            if (this.node.isKind('mover')) {
                this.isLineAbove = this.isLineAccent(this.scriptChild);
            } else if (this.node.isKind('munder')) {
                this.isLineBelow = this.isLineAccent(this.scriptChild);
            } else {
                var mml = this;
                this.isLineAbove = this.isLineAccent(mml.overChild);
                this.isLineBelow = this.isLineAccent(mml.underChild);
            }
        };
        class_1.prototype.isLineAccent = function(script) {
            var node = script.coreMO().node;
            return node.isToken && node.getText() === '\u2015';
        };
        class_1.prototype.getBaseWidth = function() {
            var bbox = this.baseChild.getOuterBBox();
            return bbox.w * bbox.rscale - (this.baseRemoveIc ? this.baseIc : 0) + this.font.params.extra_ic;
        };
        class_1.prototype.computeBBox = function(bbox, recompute) {
            if (recompute === void 0) {
                recompute = false;
            }
            var w = this.getBaseWidth();
            var _a = __read(this.getOffset(), 2), x = _a[0], y = _a[1];
            bbox.append(this.baseChild.getOuterBBox());
            bbox.combine(this.scriptChild.getOuterBBox(), w + x, y);
            bbox.w += this.font.params.scriptspace;
            bbox.clean();
            this.setChildPWidths(recompute);
        };
        class_1.prototype.getOffset = function() {
            return [
                0,
                0
            ];
        };
        class_1.prototype.baseCharZero = function(n) {
            var largeop = !!this.baseCore.node.attributes.get('largeop');
            var scale = this.baseScale;
            return this.baseIsChar && !largeop && scale === 1 ? 0 : n;
        };
        class_1.prototype.getV = function() {
            var bbox = this.baseCore.getOuterBBox();
            var sbox = this.scriptChild.getOuterBBox();
            var tex = this.font.params;
            var subscriptshift = this.length2em(this.node.attributes.get('subscriptshift'), tex.sub1);
            return Math.max(this.baseCharZero(bbox.d * this.baseScale + tex.sub_drop * sbox.rscale), subscriptshift, sbox.h * sbox.rscale - 4 / 5 * tex.x_height);
        };
        class_1.prototype.getU = function() {
            var bbox = this.baseCore.getOuterBBox();
            var sbox = this.scriptChild.getOuterBBox();
            var tex = this.font.params;
            var attr = this.node.attributes.getList('displaystyle', 'superscriptshift');
            var prime = this.node.getProperty('texprimestyle');
            var p = prime ? tex.sup3 : attr.displaystyle ? tex.sup1 : tex.sup2;
            var superscriptshift = this.length2em(attr.superscriptshift, p);
            return Math.max(this.baseCharZero(bbox.h * this.baseScale - tex.sup_drop * sbox.rscale), superscriptshift, sbox.d * sbox.rscale + 1 / 4 * tex.x_height);
        };
        class_1.prototype.hasMovableLimits = function() {
            var display = this.node.attributes.get('displaystyle');
            var mo = this.baseChild.coreMO().node;
            return !display && !!mo.attributes.get('movablelimits');
        };
        class_1.prototype.getOverKU = function(basebox, overbox) {
            var accent = this.node.attributes.get('accent');
            var tex = this.font.params;
            var d = overbox.d * overbox.rscale;
            var t = tex.rule_thickness * tex.separation_factor;
            var delta = this.baseHasAccentOver ? t : 0;
            var T = this.isLineAbove ? 3 * tex.rule_thickness : t;
            var k = (accent ? T : Math.max(tex.big_op_spacing1, tex.big_op_spacing3 - Math.max(0, d))) - delta;
            return [
                k,
                basebox.h * basebox.rscale + k + d
            ];
        };
        class_1.prototype.getUnderKV = function(basebox, underbox) {
            var accent = this.node.attributes.get('accentunder');
            var tex = this.font.params;
            var h = underbox.h * underbox.rscale;
            var t = tex.rule_thickness * tex.separation_factor;
            var delta = this.baseHasAccentUnder ? t : 0;
            var T = this.isLineBelow ? 3 * tex.rule_thickness : t;
            var k = (accent ? T : Math.max(tex.big_op_spacing2, tex.big_op_spacing4 - h)) - delta;
            return [
                k,
                -(basebox.d * basebox.rscale + k + h)
            ];
        };
        class_1.prototype.getDeltaW = function(boxes, delta) {
            var e_2, _a, e_3, _b;
            if (delta === void 0) {
                delta = [
                    0,
                    0,
                    0
                ];
            }
            var align = this.node.attributes.get('align');
            var widths = boxes.map(function(box) {
                return box.w * box.rscale;
            });
            widths[0] -= this.baseRemoveIc && !this.baseCore.node.attributes.get('largeop') ? this.baseIc : 0;
            var w = Math.max.apply(Math, __spreadArray([], __read(widths), false));
            var dw = [];
            var m = 0;
            try {
                for(var _c = __values(widths.keys()), _d = _c.next(); !_d.done; _d = _c.next()){
                    var i = _d.value;
                    dw[i] = (align === 'center' ? (w - widths[i]) / 2 : align === 'right' ? w - widths[i] : 0) + delta[i];
                    if (dw[i] < m) {
                        m = -dw[i];
                    }
                }
            } catch (e_2_1) {
                e_2 = {
                    error: e_2_1
                };
            } finally{
                try {
                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
                } finally{
                    if (e_2) throw e_2.error;
                }
            }
            if (m) {
                try {
                    for(var _e = __values(dw.keys()), _f = _e.next(); !_f.done; _f = _e.next()){
                        var i = _f.value;
                        dw[i] += m;
                    }
                } catch (e_3_1) {
                    e_3 = {
                        error: e_3_1
                    };
                } finally{
                    try {
                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
                    } finally{
                        if (e_3) throw e_3.error;
                    }
                }
            }
            [
                1,
                2
            ].map(function(i) {
                return dw[i] += boxes[i] ? boxes[i].dx * boxes[0].scale : 0;
            });
            return dw;
        };
        class_1.prototype.getDelta = function(noskew) {
            if (noskew === void 0) {
                noskew = false;
            }
            var accent = this.node.attributes.get('accent');
            var _a = this.baseCore.getOuterBBox(), sk = _a.sk, ic = _a.ic;
            return ((accent && !noskew ? sk : 0) + this.font.skewIcFactor * ic) * this.baseScale;
        };
        class_1.prototype.stretchChildren = function() {
            var e_4, _a, e_5, _b, e_6, _c;
            var stretchy = [];
            try {
                for(var _d = __values(this.childNodes), _e = _d.next(); !_e.done; _e = _d.next()){
                    var child = _e.value;
                    if (child.canStretch(2)) {
                        stretchy.push(child);
                    }
                }
            } catch (e_4_1) {
                e_4 = {
                    error: e_4_1
                };
            } finally{
                try {
                    if (_e && !_e.done && (_a = _d.return)) _a.call(_d);
                } finally{
                    if (e_4) throw e_4.error;
                }
            }
            var count = stretchy.length;
            var nodeCount = this.childNodes.length;
            if (count && nodeCount > 1) {
                var W = 0;
                var all = count > 1 && count === nodeCount;
                try {
                    for(var _f = __values(this.childNodes), _g = _f.next(); !_g.done; _g = _f.next()){
                        var child = _g.value;
                        var noStretch = child.stretch.dir === 0;
                        if (all || noStretch) {
                            var _h = child.getOuterBBox(noStretch), w = _h.w, rscale = _h.rscale;
                            if (w * rscale > W) W = w * rscale;
                        }
                    }
                } catch (e_5_1) {
                    e_5 = {
                        error: e_5_1
                    };
                } finally{
                    try {
                        if (_g && !_g.done && (_b = _f.return)) _b.call(_f);
                    } finally{
                        if (e_5) throw e_5.error;
                    }
                }
                try {
                    for(var stretchy_1 = __values(stretchy), stretchy_1_1 = stretchy_1.next(); !stretchy_1_1.done; stretchy_1_1 = stretchy_1.next()){
                        var child = stretchy_1_1.value;
                        child.coreMO().getStretchedVariant([
                            W / child.bbox.rscale
                        ]);
                    }
                } catch (e_6_1) {
                    e_6 = {
                        error: e_6_1
                    };
                } finally{
                    try {
                        if (stretchy_1_1 && !stretchy_1_1.done && (_c = stretchy_1.return)) _c.call(stretchy_1);
                    } finally{
                        if (e_6) throw e_6.error;
                    }
                }
            }
        };
        return class_1;
    }(Base), _a.useIC = true, _a;
}
exports.CommonScriptbaseMixin = CommonScriptbaseMixin; //# sourceMappingURL=scriptbase.js.map
}}),
"[project]/node_modules/mathjax-full/js/output/common/Wrappers/msubsup.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __extends = this && this.__extends || function() {
    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || ({
            __proto__: []
        }) instanceof Array && function(d, b) {
            d.__proto__ = b;
        } || function(d, b) {
            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
        };
        return extendStatics(d, b);
    };
    return function(d, b) {
        if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
}();
var __read = this && this.__read || function(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);
    } catch (error) {
        e = {
            error: error
        };
    } finally{
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        } finally{
            if (e) throw e.error;
        }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CommonMsubsupMixin = exports.CommonMsupMixin = exports.CommonMsubMixin = void 0;
function CommonMsubMixin(Base) {
    var _a;
    return _a = function(_super) {
        __extends(class_1, _super);
        function class_1() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Object.defineProperty(class_1.prototype, "scriptChild", {
            get: function() {
                return this.childNodes[this.node.sub];
            },
            enumerable: false,
            configurable: true
        });
        class_1.prototype.getOffset = function() {
            return [
                0,
                -this.getV()
            ];
        };
        return class_1;
    }(Base), _a.useIC = false, _a;
}
exports.CommonMsubMixin = CommonMsubMixin;
function CommonMsupMixin(Base) {
    return function(_super) {
        __extends(class_2, _super);
        function class_2() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Object.defineProperty(class_2.prototype, "scriptChild", {
            get: function() {
                return this.childNodes[this.node.sup];
            },
            enumerable: false,
            configurable: true
        });
        class_2.prototype.getOffset = function() {
            var x = this.getAdjustedIc() - (this.baseRemoveIc ? 0 : this.baseIc);
            return [
                x,
                this.getU()
            ];
        };
        return class_2;
    }(Base);
}
exports.CommonMsupMixin = CommonMsupMixin;
function CommonMsubsupMixin(Base) {
    var _a;
    return _a = function(_super) {
        __extends(class_3, _super);
        function class_3() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.UVQ = null;
            return _this;
        }
        Object.defineProperty(class_3.prototype, "subChild", {
            get: function() {
                return this.childNodes[this.node.sub];
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(class_3.prototype, "supChild", {
            get: function() {
                return this.childNodes[this.node.sup];
            },
            enumerable: false,
            configurable: true
        });
        class_3.prototype.computeBBox = function(bbox, recompute) {
            if (recompute === void 0) {
                recompute = false;
            }
            var basebox = this.baseChild.getOuterBBox();
            var _a = __read([
                this.subChild.getOuterBBox(),
                this.supChild.getOuterBBox()
            ], 2), subbox = _a[0], supbox = _a[1];
            bbox.empty();
            bbox.append(basebox);
            var w = this.getBaseWidth();
            var x = this.getAdjustedIc();
            var _b = __read(this.getUVQ(), 2), u = _b[0], v = _b[1];
            bbox.combine(subbox, w, v);
            bbox.combine(supbox, w + x, u);
            bbox.w += this.font.params.scriptspace;
            bbox.clean();
            this.setChildPWidths(recompute);
        };
        class_3.prototype.getUVQ = function(subbox, supbox) {
            if (subbox === void 0) {
                subbox = this.subChild.getOuterBBox();
            }
            if (supbox === void 0) {
                supbox = this.supChild.getOuterBBox();
            }
            var basebox = this.baseCore.getOuterBBox();
            if (this.UVQ) return this.UVQ;
            var tex = this.font.params;
            var t = 3 * tex.rule_thickness;
            var subscriptshift = this.length2em(this.node.attributes.get('subscriptshift'), tex.sub2);
            var drop = this.baseCharZero(basebox.d * this.baseScale + tex.sub_drop * subbox.rscale);
            var _a = __read([
                this.getU(),
                Math.max(drop, subscriptshift)
            ], 2), u = _a[0], v = _a[1];
            var q = u - supbox.d * supbox.rscale - (subbox.h * subbox.rscale - v);
            if (q < t) {
                v += t - q;
                var p = 4 / 5 * tex.x_height - (u - supbox.d * supbox.rscale);
                if (p > 0) {
                    u += p;
                    v -= p;
                }
            }
            u = Math.max(this.length2em(this.node.attributes.get('superscriptshift'), u), u);
            v = Math.max(this.length2em(this.node.attributes.get('subscriptshift'), v), v);
            q = u - supbox.d * supbox.rscale - (subbox.h * subbox.rscale - v);
            this.UVQ = [
                u,
                -v,
                q
            ];
            return this.UVQ;
        };
        return class_3;
    }(Base), _a.useIC = false, _a;
}
exports.CommonMsubsupMixin = CommonMsubsupMixin; //# sourceMappingURL=msubsup.js.map
}}),
"[project]/node_modules/mathjax-full/js/output/common/Wrappers/munderover.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __extends = this && this.__extends || function() {
    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || ({
            __proto__: []
        }) instanceof Array && function(d, b) {
            d.__proto__ = b;
        } || function(d, b) {
            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
        };
        return extendStatics(d, b);
    };
    return function(d, b) {
        if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
}();
var __read = this && this.__read || function(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);
    } catch (error) {
        e = {
            error: error
        };
    } finally{
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        } finally{
            if (e) throw e.error;
        }
    }
    return ar;
};
var __spreadArray = this && this.__spreadArray || function(to, from, pack) {
    if (pack || arguments.length === 2) for(var i = 0, l = from.length, ar; i < l; i++){
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CommonMunderoverMixin = exports.CommonMoverMixin = exports.CommonMunderMixin = void 0;
function CommonMunderMixin(Base) {
    return function(_super) {
        __extends(class_1, _super);
        function class_1() {
            var args = [];
            for(var _i = 0; _i < arguments.length; _i++){
                args[_i] = arguments[_i];
            }
            var _this = _super.apply(this, __spreadArray([], __read(args), false)) || this;
            _this.stretchChildren();
            return _this;
        }
        Object.defineProperty(class_1.prototype, "scriptChild", {
            get: function() {
                return this.childNodes[this.node.under];
            },
            enumerable: false,
            configurable: true
        });
        class_1.prototype.computeBBox = function(bbox, recompute) {
            if (recompute === void 0) {
                recompute = false;
            }
            if (this.hasMovableLimits()) {
                _super.prototype.computeBBox.call(this, bbox, recompute);
                return;
            }
            bbox.empty();
            var basebox = this.baseChild.getOuterBBox();
            var underbox = this.scriptChild.getOuterBBox();
            var v = this.getUnderKV(basebox, underbox)[1];
            var delta = this.isLineBelow ? 0 : this.getDelta(true);
            var _a = __read(this.getDeltaW([
                basebox,
                underbox
            ], [
                0,
                -delta
            ]), 2), bw = _a[0], uw = _a[1];
            bbox.combine(basebox, bw, 0);
            bbox.combine(underbox, uw, v);
            bbox.d += this.font.params.big_op_spacing5;
            bbox.clean();
            this.setChildPWidths(recompute);
        };
        return class_1;
    }(Base);
}
exports.CommonMunderMixin = CommonMunderMixin;
function CommonMoverMixin(Base) {
    return function(_super) {
        __extends(class_2, _super);
        function class_2() {
            var args = [];
            for(var _i = 0; _i < arguments.length; _i++){
                args[_i] = arguments[_i];
            }
            var _this = _super.apply(this, __spreadArray([], __read(args), false)) || this;
            _this.stretchChildren();
            return _this;
        }
        Object.defineProperty(class_2.prototype, "scriptChild", {
            get: function() {
                return this.childNodes[this.node.over];
            },
            enumerable: false,
            configurable: true
        });
        class_2.prototype.computeBBox = function(bbox) {
            if (this.hasMovableLimits()) {
                _super.prototype.computeBBox.call(this, bbox);
                return;
            }
            bbox.empty();
            var basebox = this.baseChild.getOuterBBox();
            var overbox = this.scriptChild.getOuterBBox();
            if (this.node.attributes.get('accent')) {
                basebox.h = Math.max(basebox.h, this.font.params.x_height * basebox.scale);
            }
            var u = this.getOverKU(basebox, overbox)[1];
            var delta = this.isLineAbove ? 0 : this.getDelta();
            var _a = __read(this.getDeltaW([
                basebox,
                overbox
            ], [
                0,
                delta
            ]), 2), bw = _a[0], ow = _a[1];
            bbox.combine(basebox, bw, 0);
            bbox.combine(overbox, ow, u);
            bbox.h += this.font.params.big_op_spacing5;
            bbox.clean();
        };
        return class_2;
    }(Base);
}
exports.CommonMoverMixin = CommonMoverMixin;
function CommonMunderoverMixin(Base) {
    return function(_super) {
        __extends(class_3, _super);
        function class_3() {
            var args = [];
            for(var _i = 0; _i < arguments.length; _i++){
                args[_i] = arguments[_i];
            }
            var _this = _super.apply(this, __spreadArray([], __read(args), false)) || this;
            _this.stretchChildren();
            return _this;
        }
        Object.defineProperty(class_3.prototype, "underChild", {
            get: function() {
                return this.childNodes[this.node.under];
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(class_3.prototype, "overChild", {
            get: function() {
                return this.childNodes[this.node.over];
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(class_3.prototype, "subChild", {
            get: function() {
                return this.underChild;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(class_3.prototype, "supChild", {
            get: function() {
                return this.overChild;
            },
            enumerable: false,
            configurable: true
        });
        class_3.prototype.computeBBox = function(bbox) {
            if (this.hasMovableLimits()) {
                _super.prototype.computeBBox.call(this, bbox);
                return;
            }
            bbox.empty();
            var overbox = this.overChild.getOuterBBox();
            var basebox = this.baseChild.getOuterBBox();
            var underbox = this.underChild.getOuterBBox();
            if (this.node.attributes.get('accent')) {
                basebox.h = Math.max(basebox.h, this.font.params.x_height * basebox.scale);
            }
            var u = this.getOverKU(basebox, overbox)[1];
            var v = this.getUnderKV(basebox, underbox)[1];
            var delta = this.getDelta();
            var _a = __read(this.getDeltaW([
                basebox,
                underbox,
                overbox
            ], [
                0,
                this.isLineBelow ? 0 : -delta,
                this.isLineAbove ? 0 : delta
            ]), 3), bw = _a[0], uw = _a[1], ow = _a[2];
            bbox.combine(basebox, bw, 0);
            bbox.combine(overbox, ow, u);
            bbox.combine(underbox, uw, v);
            var z = this.font.params.big_op_spacing5;
            bbox.h += z;
            bbox.d += z;
            bbox.clean();
        };
        return class_3;
    }(Base);
}
exports.CommonMunderoverMixin = CommonMunderoverMixin; //# sourceMappingURL=munderover.js.map
}}),
"[project]/node_modules/mathjax-full/js/output/common/Wrappers/mmultiscripts.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __extends = this && this.__extends || function() {
    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || ({
            __proto__: []
        }) instanceof Array && function(d, b) {
            d.__proto__ = b;
        } || function(d, b) {
            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
        };
        return extendStatics(d, b);
    };
    return function(d, b) {
        if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
}();
var __read = this && this.__read || function(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);
    } catch (error) {
        e = {
            error: error
        };
    } finally{
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        } finally{
            if (e) throw e.error;
        }
    }
    return ar;
};
var __spreadArray = this && this.__spreadArray || function(to, from, pack) {
    if (pack || arguments.length === 2) for(var i = 0, l = from.length, ar; i < l; i++){
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var __values = this && this.__values || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function() {
            if (o && i >= o.length) o = void 0;
            return {
                value: o && o[i++],
                done: !o
            };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CommonMmultiscriptsMixin = exports.ScriptNames = exports.NextScript = void 0;
var BBox_js_1 = __turbopack_context__.r("[project]/node_modules/mathjax-full/js/util/BBox.js [app-rsc] (ecmascript)");
exports.NextScript = {
    base: 'subList',
    subList: 'supList',
    supList: 'subList',
    psubList: 'psupList',
    psupList: 'psubList'
};
exports.ScriptNames = [
    'sup',
    'sup',
    'psup',
    'psub'
];
function CommonMmultiscriptsMixin(Base) {
    return function(_super) {
        __extends(class_1, _super);
        function class_1() {
            var args = [];
            for(var _i = 0; _i < arguments.length; _i++){
                args[_i] = arguments[_i];
            }
            var _this = _super.apply(this, __spreadArray([], __read(args), false)) || this;
            _this.scriptData = null;
            _this.firstPrescript = 0;
            _this.getScriptData();
            return _this;
        }
        class_1.prototype.combinePrePost = function(pre, post) {
            var bbox = new BBox_js_1.BBox(pre);
            bbox.combine(post, 0, 0);
            return bbox;
        };
        class_1.prototype.computeBBox = function(bbox, recompute) {
            if (recompute === void 0) {
                recompute = false;
            }
            var scriptspace = this.font.params.scriptspace;
            var data = this.scriptData;
            var sub = this.combinePrePost(data.sub, data.psub);
            var sup = this.combinePrePost(data.sup, data.psup);
            var _a = __read(this.getUVQ(sub, sup), 2), u = _a[0], v = _a[1];
            bbox.empty();
            if (data.numPrescripts) {
                bbox.combine(data.psup, scriptspace, u);
                bbox.combine(data.psub, scriptspace, v);
            }
            bbox.append(data.base);
            if (data.numScripts) {
                var w = bbox.w;
                bbox.combine(data.sup, w, u);
                bbox.combine(data.sub, w, v);
                bbox.w += scriptspace;
            }
            bbox.clean();
            this.setChildPWidths(recompute);
        };
        class_1.prototype.getScriptData = function() {
            var data = this.scriptData = {
                base: null,
                sub: BBox_js_1.BBox.empty(),
                sup: BBox_js_1.BBox.empty(),
                psub: BBox_js_1.BBox.empty(),
                psup: BBox_js_1.BBox.empty(),
                numPrescripts: 0,
                numScripts: 0
            };
            var lists = this.getScriptBBoxLists();
            this.combineBBoxLists(data.sub, data.sup, lists.subList, lists.supList);
            this.combineBBoxLists(data.psub, data.psup, lists.psubList, lists.psupList);
            data.base = lists.base[0];
            data.numPrescripts = lists.psubList.length;
            data.numScripts = lists.subList.length;
        };
        class_1.prototype.getScriptBBoxLists = function() {
            var e_1, _a;
            var lists = {
                base: [],
                subList: [],
                supList: [],
                psubList: [],
                psupList: []
            };
            var script = 'base';
            try {
                for(var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()){
                    var child = _c.value;
                    if (child.node.isKind('mprescripts')) {
                        script = 'psubList';
                    } else {
                        lists[script].push(child.getOuterBBox());
                        script = exports.NextScript[script];
                    }
                }
            } catch (e_1_1) {
                e_1 = {
                    error: e_1_1
                };
            } finally{
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                } finally{
                    if (e_1) throw e_1.error;
                }
            }
            this.firstPrescript = lists.subList.length + lists.supList.length + 2;
            this.padLists(lists.subList, lists.supList);
            this.padLists(lists.psubList, lists.psupList);
            return lists;
        };
        class_1.prototype.padLists = function(list1, list2) {
            if (list1.length > list2.length) {
                list2.push(BBox_js_1.BBox.empty());
            }
        };
        class_1.prototype.combineBBoxLists = function(bbox1, bbox2, list1, list2) {
            for(var i = 0; i < list1.length; i++){
                var _a = __read(this.getScaledWHD(list1[i]), 3), w1 = _a[0], h1 = _a[1], d1 = _a[2];
                var _b = __read(this.getScaledWHD(list2[i]), 3), w2 = _b[0], h2 = _b[1], d2 = _b[2];
                var w = Math.max(w1, w2);
                bbox1.w += w;
                bbox2.w += w;
                if (h1 > bbox1.h) bbox1.h = h1;
                if (d1 > bbox1.d) bbox1.d = d1;
                if (h2 > bbox2.h) bbox2.h = h2;
                if (d2 > bbox2.d) bbox2.d = d2;
            }
        };
        class_1.prototype.getScaledWHD = function(bbox) {
            var w = bbox.w, h = bbox.h, d = bbox.d, rscale = bbox.rscale;
            return [
                w * rscale,
                h * rscale,
                d * rscale
            ];
        };
        class_1.prototype.getUVQ = function(subbox, supbox) {
            var _a;
            if (!this.UVQ) {
                var _b = __read([
                    0,
                    0,
                    0
                ], 3), u = _b[0], v = _b[1], q = _b[2];
                if (subbox.h === 0 && subbox.d === 0) {
                    u = this.getU();
                } else if (supbox.h === 0 && supbox.d === 0) {
                    u = -this.getV();
                } else {
                    _a = __read(_super.prototype.getUVQ.call(this, subbox, supbox), 3), u = _a[0], v = _a[1], q = _a[2];
                }
                this.UVQ = [
                    u,
                    v,
                    q
                ];
            }
            return this.UVQ;
        };
        return class_1;
    }(Base);
}
exports.CommonMmultiscriptsMixin = CommonMmultiscriptsMixin; //# sourceMappingURL=mmultiscripts.js.map
}}),
"[project]/node_modules/mathjax-full/js/output/common/Wrappers/mtable.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __extends = this && this.__extends || function() {
    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || ({
            __proto__: []
        }) instanceof Array && function(d, b) {
            d.__proto__ = b;
        } || function(d, b) {
            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
        };
        return extendStatics(d, b);
    };
    return function(d, b) {
        if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
}();
var __read = this && this.__read || function(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);
    } catch (error) {
        e = {
            error: error
        };
    } finally{
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        } finally{
            if (e) throw e.error;
        }
    }
    return ar;
};
var __spreadArray = this && this.__spreadArray || function(to, from, pack) {
    if (pack || arguments.length === 2) for(var i = 0, l = from.length, ar; i < l; i++){
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var __values = this && this.__values || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function() {
            if (o && i >= o.length) o = void 0;
            return {
                value: o && o[i++],
                done: !o
            };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CommonMtableMixin = void 0;
var BBox_js_1 = __turbopack_context__.r("[project]/node_modules/mathjax-full/js/util/BBox.js [app-rsc] (ecmascript)");
var string_js_1 = __turbopack_context__.r("[project]/node_modules/mathjax-full/js/util/string.js [app-rsc] (ecmascript)");
var numeric_js_1 = __turbopack_context__.r("[project]/node_modules/mathjax-full/js/util/numeric.js [app-rsc] (ecmascript)");
function CommonMtableMixin(Base) {
    return function(_super) {
        __extends(class_1, _super);
        function class_1() {
            var args = [];
            for(var _i = 0; _i < arguments.length; _i++){
                args[_i] = arguments[_i];
            }
            var _this = _super.apply(this, __spreadArray([], __read(args), false)) || this;
            _this.numCols = 0;
            _this.numRows = 0;
            _this.data = null;
            _this.pwidthCells = [];
            _this.pWidth = 0;
            _this.numCols = (0, numeric_js_1.max)(_this.tableRows.map(function(row) {
                return row.numCells;
            }));
            _this.numRows = _this.childNodes.length;
            _this.hasLabels = _this.childNodes.reduce(function(value, row) {
                return value || row.node.isKind('mlabeledtr');
            }, false);
            _this.findContainer();
            _this.isTop = !_this.container || _this.container.node.isKind('math') && !_this.container.parent;
            if (_this.isTop) {
                _this.jax.table = _this;
            }
            _this.getPercentageWidth();
            var attributes = _this.node.attributes;
            _this.frame = attributes.get('frame') !== 'none';
            _this.fLine = _this.frame && attributes.get('frame') ? .07 : 0;
            _this.fSpace = _this.frame ? _this.convertLengths(_this.getAttributeArray('framespacing')) : [
                0,
                0
            ];
            _this.cSpace = _this.convertLengths(_this.getColumnAttributes('columnspacing'));
            _this.rSpace = _this.convertLengths(_this.getRowAttributes('rowspacing'));
            _this.cLines = _this.getColumnAttributes('columnlines').map(function(x) {
                return x === 'none' ? 0 : .07;
            });
            _this.rLines = _this.getRowAttributes('rowlines').map(function(x) {
                return x === 'none' ? 0 : .07;
            });
            _this.cWidths = _this.getColumnWidths();
            _this.stretchRows();
            _this.stretchColumns();
            return _this;
        }
        Object.defineProperty(class_1.prototype, "tableRows", {
            get: function() {
                return this.childNodes;
            },
            enumerable: false,
            configurable: true
        });
        class_1.prototype.findContainer = function() {
            var node = this;
            var parent = node.parent;
            while(parent && (parent.node.notParent || parent.node.isKind('mrow'))){
                node = parent;
                parent = parent.parent;
            }
            this.container = parent;
            this.containerI = node.node.childPosition();
        };
        class_1.prototype.getPercentageWidth = function() {
            if (this.hasLabels) {
                this.bbox.pwidth = BBox_js_1.BBox.fullWidth;
            } else {
                var width = this.node.attributes.get('width');
                if ((0, string_js_1.isPercent)(width)) {
                    this.bbox.pwidth = width;
                }
            }
        };
        class_1.prototype.stretchRows = function() {
            var equal = this.node.attributes.get('equalrows');
            var HD = equal ? this.getEqualRowHeight() : 0;
            var _a = equal ? this.getTableData() : {
                H: [
                    0
                ],
                D: [
                    0
                ]
            }, H = _a.H, D = _a.D;
            var rows = this.tableRows;
            for(var i = 0; i < this.numRows; i++){
                var hd = equal ? [
                    (HD + H[i] - D[i]) / 2,
                    (HD - H[i] + D[i]) / 2
                ] : null;
                rows[i].stretchChildren(hd);
            }
        };
        class_1.prototype.stretchColumns = function() {
            for(var i = 0; i < this.numCols; i++){
                var width = typeof this.cWidths[i] === 'number' ? this.cWidths[i] : null;
                this.stretchColumn(i, width);
            }
        };
        class_1.prototype.stretchColumn = function(i, W) {
            var e_1, _a, e_2, _b, e_3, _c;
            var stretchy = [];
            try {
                for(var _d = __values(this.tableRows), _e = _d.next(); !_e.done; _e = _d.next()){
                    var row = _e.value;
                    var cell = row.getChild(i);
                    if (cell) {
                        var child = cell.childNodes[0];
                        if (child.stretch.dir === 0 && child.canStretch(2)) {
                            stretchy.push(child);
                        }
                    }
                }
            } catch (e_1_1) {
                e_1 = {
                    error: e_1_1
                };
            } finally{
                try {
                    if (_e && !_e.done && (_a = _d.return)) _a.call(_d);
                } finally{
                    if (e_1) throw e_1.error;
                }
            }
            var count = stretchy.length;
            var nodeCount = this.childNodes.length;
            if (count && nodeCount > 1) {
                if (W === null) {
                    W = 0;
                    var all = count > 1 && count === nodeCount;
                    try {
                        for(var _f = __values(this.tableRows), _g = _f.next(); !_g.done; _g = _f.next()){
                            var row = _g.value;
                            var cell = row.getChild(i);
                            if (cell) {
                                var child = cell.childNodes[0];
                                var noStretch = child.stretch.dir === 0;
                                if (all || noStretch) {
                                    var w = child.getBBox(noStretch).w;
                                    if (w > W) {
                                        W = w;
                                    }
                                }
                            }
                        }
                    } catch (e_2_1) {
                        e_2 = {
                            error: e_2_1
                        };
                    } finally{
                        try {
                            if (_g && !_g.done && (_b = _f.return)) _b.call(_f);
                        } finally{
                            if (e_2) throw e_2.error;
                        }
                    }
                }
                try {
                    for(var stretchy_1 = __values(stretchy), stretchy_1_1 = stretchy_1.next(); !stretchy_1_1.done; stretchy_1_1 = stretchy_1.next()){
                        var child = stretchy_1_1.value;
                        child.coreMO().getStretchedVariant([
                            W
                        ]);
                    }
                } catch (e_3_1) {
                    e_3 = {
                        error: e_3_1
                    };
                } finally{
                    try {
                        if (stretchy_1_1 && !stretchy_1_1.done && (_c = stretchy_1.return)) _c.call(stretchy_1);
                    } finally{
                        if (e_3) throw e_3.error;
                    }
                }
            }
        };
        class_1.prototype.getTableData = function() {
            if (this.data) {
                return this.data;
            }
            var H = new Array(this.numRows).fill(0);
            var D = new Array(this.numRows).fill(0);
            var W = new Array(this.numCols).fill(0);
            var NH = new Array(this.numRows);
            var ND = new Array(this.numRows);
            var LW = [
                0
            ];
            var rows = this.tableRows;
            for(var j = 0; j < rows.length; j++){
                var M = 0;
                var row = rows[j];
                var align = row.node.attributes.get('rowalign');
                for(var i = 0; i < row.numCells; i++){
                    var cell = row.getChild(i);
                    M = this.updateHDW(cell, i, j, align, H, D, W, M);
                    this.recordPWidthCell(cell, i);
                }
                NH[j] = H[j];
                ND[j] = D[j];
                if (row.labeled) {
                    M = this.updateHDW(row.childNodes[0], 0, j, align, H, D, LW, M);
                }
                this.extendHD(j, H, D, M);
                this.extendHD(j, NH, ND, M);
            }
            var L = LW[0];
            this.data = {
                H: H,
                D: D,
                W: W,
                NH: NH,
                ND: ND,
                L: L
            };
            return this.data;
        };
        class_1.prototype.updateHDW = function(cell, i, j, align, H, D, W, M) {
            var _a = cell.getBBox(), h = _a.h, d = _a.d, w = _a.w;
            var scale = cell.parent.bbox.rscale;
            if (cell.parent.bbox.rscale !== 1) {
                h *= scale;
                d *= scale;
                w *= scale;
            }
            if (this.node.getProperty('useHeight')) {
                if (h < .75) h = .75;
                if (d < .25) d = .25;
            }
            var m = 0;
            align = cell.node.attributes.get('rowalign') || align;
            if (align !== 'baseline' && align !== 'axis') {
                m = h + d;
                h = d = 0;
            }
            if (h > H[j]) H[j] = h;
            if (d > D[j]) D[j] = d;
            if (m > M) M = m;
            if (W && w > W[i]) W[i] = w;
            return M;
        };
        class_1.prototype.extendHD = function(i, H, D, M) {
            var d = (M - (H[i] + D[i])) / 2;
            if (d < .00001) return;
            H[i] += d;
            D[i] += d;
        };
        class_1.prototype.recordPWidthCell = function(cell, i) {
            if (cell.childNodes[0] && cell.childNodes[0].getBBox().pwidth) {
                this.pwidthCells.push([
                    cell,
                    i
                ]);
            }
        };
        class_1.prototype.computeBBox = function(bbox, _recompute) {
            if (_recompute === void 0) {
                _recompute = false;
            }
            var _a = this.getTableData(), H = _a.H, D = _a.D;
            var height, width;
            if (this.node.attributes.get('equalrows')) {
                var HD = this.getEqualRowHeight();
                height = (0, numeric_js_1.sum)([].concat(this.rLines, this.rSpace)) + HD * this.numRows;
            } else {
                height = (0, numeric_js_1.sum)(H.concat(D, this.rLines, this.rSpace));
            }
            height += 2 * (this.fLine + this.fSpace[1]);
            var CW = this.getComputedWidths();
            width = (0, numeric_js_1.sum)(CW.concat(this.cLines, this.cSpace)) + 2 * (this.fLine + this.fSpace[0]);
            var w = this.node.attributes.get('width');
            if (w !== 'auto') {
                width = Math.max(this.length2em(w, 0) + 2 * this.fLine, width);
            }
            var _b = __read(this.getBBoxHD(height), 2), h = _b[0], d = _b[1];
            bbox.h = h;
            bbox.d = d;
            bbox.w = width;
            var _c = __read(this.getBBoxLR(), 2), L = _c[0], R = _c[1];
            bbox.L = L;
            bbox.R = R;
            if (!(0, string_js_1.isPercent)(w)) {
                this.setColumnPWidths();
            }
        };
        class_1.prototype.setChildPWidths = function(_recompute, cwidth, _clear) {
            var width = this.node.attributes.get('width');
            if (!(0, string_js_1.isPercent)(width)) return false;
            if (!this.hasLabels) {
                this.bbox.pwidth = '';
                this.container.bbox.pwidth = '';
            }
            var _a = this.bbox, w = _a.w, L = _a.L, R = _a.R;
            var labelInWidth = this.node.attributes.get('data-width-includes-label');
            var W = Math.max(w, this.length2em(width, Math.max(cwidth, L + w + R))) - (labelInWidth ? L + R : 0);
            var cols = this.node.attributes.get('equalcolumns') ? Array(this.numCols).fill(this.percent(1 / Math.max(1, this.numCols))) : this.getColumnAttributes('columnwidth', 0);
            this.cWidths = this.getColumnWidthsFixed(cols, W);
            var CW = this.getComputedWidths();
            this.pWidth = (0, numeric_js_1.sum)(CW.concat(this.cLines, this.cSpace)) + 2 * (this.fLine + this.fSpace[0]);
            if (this.isTop) {
                this.bbox.w = this.pWidth;
            }
            this.setColumnPWidths();
            if (this.pWidth !== w) {
                this.parent.invalidateBBox();
            }
            return this.pWidth !== w;
        };
        class_1.prototype.setColumnPWidths = function() {
            var e_4, _a;
            var W = this.cWidths;
            try {
                for(var _b = __values(this.pwidthCells), _c = _b.next(); !_c.done; _c = _b.next()){
                    var _d = __read(_c.value, 2), cell = _d[0], i = _d[1];
                    if (cell.setChildPWidths(false, W[i])) {
                        cell.invalidateBBox();
                        cell.getBBox();
                    }
                }
            } catch (e_4_1) {
                e_4 = {
                    error: e_4_1
                };
            } finally{
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                } finally{
                    if (e_4) throw e_4.error;
                }
            }
        };
        class_1.prototype.getBBoxHD = function(height) {
            var _a = __read(this.getAlignmentRow(), 2), align = _a[0], row = _a[1];
            if (row === null) {
                var a = this.font.params.axis_height;
                var h2 = height / 2;
                var HD = {
                    top: [
                        0,
                        height
                    ],
                    center: [
                        h2,
                        h2
                    ],
                    bottom: [
                        height,
                        0
                    ],
                    baseline: [
                        h2,
                        h2
                    ],
                    axis: [
                        h2 + a,
                        h2 - a
                    ]
                };
                return HD[align] || [
                    h2,
                    h2
                ];
            } else {
                var y = this.getVerticalPosition(row, align);
                return [
                    y,
                    height - y
                ];
            }
        };
        class_1.prototype.getBBoxLR = function() {
            if (this.hasLabels) {
                var attributes = this.node.attributes;
                var side = attributes.get('side');
                var _a = __read(this.getPadAlignShift(side), 2), pad = _a[0], align = _a[1];
                var labels = this.hasLabels && !!attributes.get('data-width-includes-label');
                if (labels && this.frame && this.fSpace[0]) {
                    pad -= this.fSpace[0];
                }
                return align === 'center' && !labels ? [
                    pad,
                    pad
                ] : side === 'left' ? [
                    pad,
                    0
                ] : [
                    0,
                    pad
                ];
            }
            return [
                0,
                0
            ];
        };
        class_1.prototype.getPadAlignShift = function(side) {
            var L = this.getTableData().L;
            var sep = this.length2em(this.node.attributes.get('minlabelspacing'));
            var pad = L + sep;
            var _a = __read(this.styles == null ? [
                '',
                ''
            ] : [
                this.styles.get('padding-left'),
                this.styles.get('padding-right')
            ], 2), lpad = _a[0], rpad = _a[1];
            if (lpad || rpad) {
                pad = Math.max(pad, this.length2em(lpad || '0'), this.length2em(rpad || '0'));
            }
            var _b = __read(this.getAlignShift(), 2), align = _b[0], shift = _b[1];
            if (align === side) {
                shift = side === 'left' ? Math.max(pad, shift) - pad : Math.min(-pad, shift) + pad;
            }
            return [
                pad,
                align,
                shift
            ];
        };
        class_1.prototype.getAlignShift = function() {
            return this.isTop ? _super.prototype.getAlignShift.call(this) : [
                this.container.getChildAlign(this.containerI),
                0
            ];
        };
        class_1.prototype.getWidth = function() {
            return this.pWidth || this.getBBox().w;
        };
        class_1.prototype.getEqualRowHeight = function() {
            var _a = this.getTableData(), H = _a.H, D = _a.D;
            var HD = Array.from(H.keys()).map(function(i) {
                return H[i] + D[i];
            });
            return Math.max.apply(Math, HD);
        };
        class_1.prototype.getComputedWidths = function() {
            var _this = this;
            var W = this.getTableData().W;
            var CW = Array.from(W.keys()).map(function(i) {
                return typeof _this.cWidths[i] === 'number' ? _this.cWidths[i] : W[i];
            });
            if (this.node.attributes.get('equalcolumns')) {
                CW = Array(CW.length).fill((0, numeric_js_1.max)(CW));
            }
            return CW;
        };
        class_1.prototype.getColumnWidths = function() {
            var width = this.node.attributes.get('width');
            if (this.node.attributes.get('equalcolumns')) {
                return this.getEqualColumns(width);
            }
            var swidths = this.getColumnAttributes('columnwidth', 0);
            if (width === 'auto') {
                return this.getColumnWidthsAuto(swidths);
            }
            if ((0, string_js_1.isPercent)(width)) {
                return this.getColumnWidthsPercent(swidths);
            }
            return this.getColumnWidthsFixed(swidths, this.length2em(width));
        };
        class_1.prototype.getEqualColumns = function(width) {
            var n = Math.max(1, this.numCols);
            var cwidth;
            if (width === 'auto') {
                var W = this.getTableData().W;
                cwidth = (0, numeric_js_1.max)(W);
            } else if ((0, string_js_1.isPercent)(width)) {
                cwidth = this.percent(1 / n);
            } else {
                var w = (0, numeric_js_1.sum)([].concat(this.cLines, this.cSpace)) + 2 * this.fSpace[0];
                cwidth = Math.max(0, this.length2em(width) - w) / n;
            }
            return Array(this.numCols).fill(cwidth);
        };
        class_1.prototype.getColumnWidthsAuto = function(swidths) {
            var _this = this;
            return swidths.map(function(x) {
                if (x === 'auto' || x === 'fit') return null;
                if ((0, string_js_1.isPercent)(x)) return x;
                return _this.length2em(x);
            });
        };
        class_1.prototype.getColumnWidthsPercent = function(swidths) {
            var _this = this;
            var hasFit = swidths.indexOf('fit') >= 0;
            var W = (hasFit ? this.getTableData() : {
                W: null
            }).W;
            return Array.from(swidths.keys()).map(function(i) {
                var x = swidths[i];
                if (x === 'fit') return null;
                if (x === 'auto') return hasFit ? W[i] : null;
                if ((0, string_js_1.isPercent)(x)) return x;
                return _this.length2em(x);
            });
        };
        class_1.prototype.getColumnWidthsFixed = function(swidths, width) {
            var _this = this;
            var indices = Array.from(swidths.keys());
            var fit = indices.filter(function(i) {
                return swidths[i] === 'fit';
            });
            var auto = indices.filter(function(i) {
                return swidths[i] === 'auto';
            });
            var n = fit.length || auto.length;
            var W = (n ? this.getTableData() : {
                W: null
            }).W;
            var cwidth = width - (0, numeric_js_1.sum)([].concat(this.cLines, this.cSpace)) - 2 * this.fSpace[0];
            var dw = cwidth;
            indices.forEach(function(i) {
                var x = swidths[i];
                dw -= x === 'fit' || x === 'auto' ? W[i] : _this.length2em(x, cwidth);
            });
            var fw = n && dw > 0 ? dw / n : 0;
            return indices.map(function(i) {
                var x = swidths[i];
                if (x === 'fit') return W[i] + fw;
                if (x === 'auto') return W[i] + (fit.length === 0 ? fw : 0);
                return _this.length2em(x, cwidth);
            });
        };
        class_1.prototype.getVerticalPosition = function(i, align) {
            var equal = this.node.attributes.get('equalrows');
            var _a = this.getTableData(), H = _a.H, D = _a.D;
            var HD = equal ? this.getEqualRowHeight() : 0;
            var space = this.getRowHalfSpacing();
            var y = this.fLine;
            for(var j = 0; j < i; j++){
                y += space[j] + (equal ? HD : H[j] + D[j]) + space[j + 1] + this.rLines[j];
            }
            var _b = __read(equal ? [
                (HD + H[i] - D[i]) / 2,
                (HD - H[i] + D[i]) / 2
            ] : [
                H[i],
                D[i]
            ], 2), h = _b[0], d = _b[1];
            var offset = {
                top: 0,
                center: space[i] + (h + d) / 2,
                bottom: space[i] + h + d + space[i + 1],
                baseline: space[i] + h,
                axis: space[i] + h - .25
            };
            y += offset[align] || 0;
            return y;
        };
        class_1.prototype.getEmHalfSpacing = function(fspace, space, scale) {
            if (scale === void 0) {
                scale = 1;
            }
            var fspaceEm = this.em(fspace * scale);
            var spaceEm = this.addEm(space, 2 / scale);
            spaceEm.unshift(fspaceEm);
            spaceEm.push(fspaceEm);
            return spaceEm;
        };
        class_1.prototype.getRowHalfSpacing = function() {
            var space = this.rSpace.map(function(x) {
                return x / 2;
            });
            space.unshift(this.fSpace[1]);
            space.push(this.fSpace[1]);
            return space;
        };
        class_1.prototype.getColumnHalfSpacing = function() {
            var space = this.cSpace.map(function(x) {
                return x / 2;
            });
            space.unshift(this.fSpace[0]);
            space.push(this.fSpace[0]);
            return space;
        };
        class_1.prototype.getAlignmentRow = function() {
            var _a = __read((0, string_js_1.split)(this.node.attributes.get('align')), 2), align = _a[0], row = _a[1];
            if (row == null) return [
                align,
                null
            ];
            var i = parseInt(row);
            if (i < 0) i += this.numRows + 1;
            return [
                align,
                i < 1 || i > this.numRows ? null : i - 1
            ];
        };
        class_1.prototype.getColumnAttributes = function(name, i) {
            if (i === void 0) {
                i = 1;
            }
            var n = this.numCols - i;
            var columns = this.getAttributeArray(name);
            if (columns.length === 0) return null;
            while(columns.length < n){
                columns.push(columns[columns.length - 1]);
            }
            if (columns.length > n) {
                columns.splice(n);
            }
            return columns;
        };
        class_1.prototype.getRowAttributes = function(name, i) {
            if (i === void 0) {
                i = 1;
            }
            var n = this.numRows - i;
            var rows = this.getAttributeArray(name);
            if (rows.length === 0) return null;
            while(rows.length < n){
                rows.push(rows[rows.length - 1]);
            }
            if (rows.length > n) {
                rows.splice(n);
            }
            return rows;
        };
        class_1.prototype.getAttributeArray = function(name) {
            var value = this.node.attributes.get(name);
            if (!value) return [
                this.node.attributes.getDefault(name)
            ];
            return (0, string_js_1.split)(value);
        };
        class_1.prototype.addEm = function(list, n) {
            var _this = this;
            if (n === void 0) {
                n = 1;
            }
            if (!list) return null;
            return list.map(function(x) {
                return _this.em(x / n);
            });
        };
        class_1.prototype.convertLengths = function(list) {
            var _this = this;
            if (!list) return null;
            return list.map(function(x) {
                return _this.length2em(x);
            });
        };
        return class_1;
    }(Base);
}
exports.CommonMtableMixin = CommonMtableMixin; //# sourceMappingURL=mtable.js.map
}}),
"[project]/node_modules/mathjax-full/js/output/common/Wrappers/mtr.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __extends = this && this.__extends || function() {
    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || ({
            __proto__: []
        }) instanceof Array && function(d, b) {
            d.__proto__ = b;
        } || function(d, b) {
            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
        };
        return extendStatics(d, b);
    };
    return function(d, b) {
        if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
}();
var __values = this && this.__values || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function() {
            if (o && i >= o.length) o = void 0;
            return {
                value: o && o[i++],
                done: !o
            };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CommonMlabeledtrMixin = exports.CommonMtrMixin = void 0;
function CommonMtrMixin(Base) {
    return function(_super) {
        __extends(class_1, _super);
        function class_1() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Object.defineProperty(class_1.prototype, "fixesPWidth", {
            get: function() {
                return false;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(class_1.prototype, "numCells", {
            get: function() {
                return this.childNodes.length;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(class_1.prototype, "labeled", {
            get: function() {
                return false;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(class_1.prototype, "tableCells", {
            get: function() {
                return this.childNodes;
            },
            enumerable: false,
            configurable: true
        });
        class_1.prototype.getChild = function(i) {
            return this.childNodes[i];
        };
        class_1.prototype.getChildBBoxes = function() {
            return this.childNodes.map(function(cell) {
                return cell.getBBox();
            });
        };
        class_1.prototype.stretchChildren = function(HD) {
            var e_1, _a, e_2, _b, e_3, _c;
            if (HD === void 0) {
                HD = null;
            }
            var stretchy = [];
            var children = this.labeled ? this.childNodes.slice(1) : this.childNodes;
            try {
                for(var children_1 = __values(children), children_1_1 = children_1.next(); !children_1_1.done; children_1_1 = children_1.next()){
                    var mtd = children_1_1.value;
                    var child = mtd.childNodes[0];
                    if (child.canStretch(1)) {
                        stretchy.push(child);
                    }
                }
            } catch (e_1_1) {
                e_1 = {
                    error: e_1_1
                };
            } finally{
                try {
                    if (children_1_1 && !children_1_1.done && (_a = children_1.return)) _a.call(children_1);
                } finally{
                    if (e_1) throw e_1.error;
                }
            }
            var count = stretchy.length;
            var nodeCount = this.childNodes.length;
            if (count && nodeCount > 1) {
                if (HD === null) {
                    var H = 0, D = 0;
                    var all = count > 1 && count === nodeCount;
                    try {
                        for(var children_2 = __values(children), children_2_1 = children_2.next(); !children_2_1.done; children_2_1 = children_2.next()){
                            var mtd = children_2_1.value;
                            var child = mtd.childNodes[0];
                            var noStretch = child.stretch.dir === 0;
                            if (all || noStretch) {
                                var _d = child.getBBox(noStretch), h = _d.h, d = _d.d;
                                if (h > H) {
                                    H = h;
                                }
                                if (d > D) {
                                    D = d;
                                }
                            }
                        }
                    } catch (e_2_1) {
                        e_2 = {
                            error: e_2_1
                        };
                    } finally{
                        try {
                            if (children_2_1 && !children_2_1.done && (_b = children_2.return)) _b.call(children_2);
                        } finally{
                            if (e_2) throw e_2.error;
                        }
                    }
                    HD = [
                        H,
                        D
                    ];
                }
                try {
                    for(var stretchy_1 = __values(stretchy), stretchy_1_1 = stretchy_1.next(); !stretchy_1_1.done; stretchy_1_1 = stretchy_1.next()){
                        var child = stretchy_1_1.value;
                        child.coreMO().getStretchedVariant(HD);
                    }
                } catch (e_3_1) {
                    e_3 = {
                        error: e_3_1
                    };
                } finally{
                    try {
                        if (stretchy_1_1 && !stretchy_1_1.done && (_c = stretchy_1.return)) _c.call(stretchy_1);
                    } finally{
                        if (e_3) throw e_3.error;
                    }
                }
            }
        };
        return class_1;
    }(Base);
}
exports.CommonMtrMixin = CommonMtrMixin;
function CommonMlabeledtrMixin(Base) {
    return function(_super) {
        __extends(class_2, _super);
        function class_2() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Object.defineProperty(class_2.prototype, "numCells", {
            get: function() {
                return Math.max(0, this.childNodes.length - 1);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(class_2.prototype, "labeled", {
            get: function() {
                return true;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(class_2.prototype, "tableCells", {
            get: function() {
                return this.childNodes.slice(1);
            },
            enumerable: false,
            configurable: true
        });
        class_2.prototype.getChild = function(i) {
            return this.childNodes[i + 1];
        };
        class_2.prototype.getChildBBoxes = function() {
            return this.childNodes.slice(1).map(function(cell) {
                return cell.getBBox();
            });
        };
        return class_2;
    }(Base);
}
exports.CommonMlabeledtrMixin = CommonMlabeledtrMixin; //# sourceMappingURL=mtr.js.map
}}),
"[project]/node_modules/mathjax-full/js/output/common/Wrappers/mtd.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __extends = this && this.__extends || function() {
    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || ({
            __proto__: []
        }) instanceof Array && function(d, b) {
            d.__proto__ = b;
        } || function(d, b) {
            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
        };
        return extendStatics(d, b);
    };
    return function(d, b) {
        if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
}();
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CommonMtdMixin = void 0;
function CommonMtdMixin(Base) {
    return function(_super) {
        __extends(class_1, _super);
        function class_1() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Object.defineProperty(class_1.prototype, "fixesPWidth", {
            get: function() {
                return false;
            },
            enumerable: false,
            configurable: true
        });
        class_1.prototype.invalidateBBox = function() {
            this.bboxComputed = false;
        };
        class_1.prototype.getWrapWidth = function(_j) {
            var table = this.parent.parent;
            var row = this.parent;
            var i = this.node.childPosition() - (row.labeled ? 1 : 0);
            return typeof table.cWidths[i] === 'number' ? table.cWidths[i] : table.getTableData().W[i];
        };
        class_1.prototype.getChildAlign = function(_i) {
            return this.node.attributes.get('columnalign');
        };
        return class_1;
    }(Base);
}
exports.CommonMtdMixin = CommonMtdMixin; //# sourceMappingURL=mtd.js.map
}}),
"[project]/node_modules/mathjax-full/js/output/common/Wrappers/maction.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __extends = this && this.__extends || function() {
    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || ({
            __proto__: []
        }) instanceof Array && function(d, b) {
            d.__proto__ = b;
        } || function(d, b) {
            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
        };
        return extendStatics(d, b);
    };
    return function(d, b) {
        if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
}();
var __read = this && this.__read || function(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);
    } catch (error) {
        e = {
            error: error
        };
    } finally{
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        } finally{
            if (e) throw e.error;
        }
    }
    return ar;
};
var __spreadArray = this && this.__spreadArray || function(to, from, pack) {
    if (pack || arguments.length === 2) for(var i = 0, l = from.length, ar; i < l; i++){
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CommonMactionMixin = exports.TooltipData = void 0;
var string_js_1 = __turbopack_context__.r("[project]/node_modules/mathjax-full/js/util/string.js [app-rsc] (ecmascript)");
exports.TooltipData = {
    dx: '.2em',
    dy: '.1em',
    postDelay: 600,
    clearDelay: 100,
    hoverTimer: new Map(),
    clearTimer: new Map(),
    stopTimers: function(node, data) {
        if (data.clearTimer.has(node)) {
            clearTimeout(data.clearTimer.get(node));
            data.clearTimer.delete(node);
        }
        if (data.hoverTimer.has(node)) {
            clearTimeout(data.hoverTimer.get(node));
            data.hoverTimer.delete(node);
        }
    }
};
function CommonMactionMixin(Base) {
    return function(_super) {
        __extends(class_1, _super);
        function class_1() {
            var args = [];
            for(var _i = 0; _i < arguments.length; _i++){
                args[_i] = arguments[_i];
            }
            var _this = _super.apply(this, __spreadArray([], __read(args), false)) || this;
            var actions = _this.constructor.actions;
            var action = _this.node.attributes.get('actiontype');
            var _a = __read(actions.get(action) || [
                function(_node, _data) {},
                {}
            ], 2), handler = _a[0], data = _a[1];
            _this.action = handler;
            _this.data = data;
            _this.getParameters();
            return _this;
        }
        Object.defineProperty(class_1.prototype, "selected", {
            get: function() {
                var selection = this.node.attributes.get('selection');
                var i = Math.max(1, Math.min(this.childNodes.length, selection)) - 1;
                return this.childNodes[i] || this.wrap(this.node.selected);
            },
            enumerable: false,
            configurable: true
        });
        class_1.prototype.getParameters = function() {
            var offsets = this.node.attributes.get('data-offsets');
            var _a = __read((0, string_js_1.split)(offsets || ''), 2), dx = _a[0], dy = _a[1];
            this.dx = this.length2em(dx || exports.TooltipData.dx);
            this.dy = this.length2em(dy || exports.TooltipData.dy);
        };
        class_1.prototype.computeBBox = function(bbox, recompute) {
            if (recompute === void 0) {
                recompute = false;
            }
            bbox.updateFrom(this.selected.getOuterBBox());
            this.selected.setChildPWidths(recompute);
        };
        return class_1;
    }(Base);
}
exports.CommonMactionMixin = CommonMactionMixin; //# sourceMappingURL=maction.js.map
}}),
"[project]/node_modules/mathjax-full/js/output/common/Notation.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __read = this && this.__read || function(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);
    } catch (error) {
        e = {
            error: error
        };
    } finally{
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        } finally{
            if (e) throw e.error;
        }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CommonArrow = exports.CommonDiagonalArrow = exports.CommonDiagonalStrike = exports.CommonBorder2 = exports.CommonBorder = exports.arrowBBox = exports.diagonalArrowDef = exports.arrowDef = exports.arrowBBoxW = exports.arrowBBoxHD = exports.arrowHead = exports.fullBorder = exports.fullPadding = exports.fullBBox = exports.sideNames = exports.sideIndex = exports.SOLID = exports.PADDING = exports.THICKNESS = exports.ARROWY = exports.ARROWDX = exports.ARROWX = void 0;
exports.ARROWX = 4, exports.ARROWDX = 1, exports.ARROWY = 2;
exports.THICKNESS = .067;
exports.PADDING = .2;
exports.SOLID = exports.THICKNESS + 'em solid';
exports.sideIndex = {
    top: 0,
    right: 1,
    bottom: 2,
    left: 3
};
exports.sideNames = Object.keys(exports.sideIndex);
exports.fullBBox = function(node) {
    return new Array(4).fill(node.thickness + node.padding);
};
exports.fullPadding = function(node) {
    return new Array(4).fill(node.padding);
};
exports.fullBorder = function(node) {
    return new Array(4).fill(node.thickness);
};
var arrowHead = function(node) {
    return Math.max(node.padding, node.thickness * (node.arrowhead.x + node.arrowhead.dx + 1));
};
exports.arrowHead = arrowHead;
var arrowBBoxHD = function(node, TRBL) {
    if (node.childNodes[0]) {
        var _a = node.childNodes[0].getBBox(), h = _a.h, d = _a.d;
        TRBL[0] = TRBL[2] = Math.max(0, node.thickness * node.arrowhead.y - (h + d) / 2);
    }
    return TRBL;
};
exports.arrowBBoxHD = arrowBBoxHD;
var arrowBBoxW = function(node, TRBL) {
    if (node.childNodes[0]) {
        var w = node.childNodes[0].getBBox().w;
        TRBL[1] = TRBL[3] = Math.max(0, node.thickness * node.arrowhead.y - w / 2);
    }
    return TRBL;
};
exports.arrowBBoxW = arrowBBoxW;
exports.arrowDef = {
    up: [
        -Math.PI / 2,
        false,
        true,
        'verticalstrike'
    ],
    down: [
        Math.PI / 2,
        false,
        true,
        'verticakstrike'
    ],
    right: [
        0,
        false,
        false,
        'horizontalstrike'
    ],
    left: [
        Math.PI,
        false,
        false,
        'horizontalstrike'
    ],
    updown: [
        Math.PI / 2,
        true,
        true,
        'verticalstrike uparrow downarrow'
    ],
    leftright: [
        0,
        true,
        false,
        'horizontalstrike leftarrow rightarrow'
    ]
};
exports.diagonalArrowDef = {
    updiagonal: [
        -1,
        0,
        false,
        'updiagonalstrike northeastarrow'
    ],
    northeast: [
        -1,
        0,
        false,
        'updiagonalstrike updiagonalarrow'
    ],
    southeast: [
        1,
        0,
        false,
        'downdiagonalstrike'
    ],
    northwest: [
        1,
        Math.PI,
        false,
        'downdiagonalstrike'
    ],
    southwest: [
        -1,
        Math.PI,
        false,
        'updiagonalstrike'
    ],
    northeastsouthwest: [
        -1,
        0,
        true,
        'updiagonalstrike northeastarrow updiagonalarrow southwestarrow'
    ],
    northwestsoutheast: [
        1,
        0,
        true,
        'downdiagonalstrike northwestarrow southeastarrow'
    ]
};
exports.arrowBBox = {
    up: function(node) {
        return (0, exports.arrowBBoxW)(node, [
            (0, exports.arrowHead)(node),
            0,
            node.padding,
            0
        ]);
    },
    down: function(node) {
        return (0, exports.arrowBBoxW)(node, [
            node.padding,
            0,
            (0, exports.arrowHead)(node),
            0
        ]);
    },
    right: function(node) {
        return (0, exports.arrowBBoxHD)(node, [
            0,
            (0, exports.arrowHead)(node),
            0,
            node.padding
        ]);
    },
    left: function(node) {
        return (0, exports.arrowBBoxHD)(node, [
            0,
            node.padding,
            0,
            (0, exports.arrowHead)(node)
        ]);
    },
    updown: function(node) {
        return (0, exports.arrowBBoxW)(node, [
            (0, exports.arrowHead)(node),
            0,
            (0, exports.arrowHead)(node),
            0
        ]);
    },
    leftright: function(node) {
        return (0, exports.arrowBBoxHD)(node, [
            0,
            (0, exports.arrowHead)(node),
            0,
            (0, exports.arrowHead)(node)
        ]);
    }
};
var CommonBorder = function(render) {
    return function(side) {
        var i = exports.sideIndex[side];
        return [
            side,
            {
                renderer: render,
                bbox: function(node) {
                    var bbox = [
                        0,
                        0,
                        0,
                        0
                    ];
                    bbox[i] = node.thickness + node.padding;
                    return bbox;
                },
                border: function(node) {
                    var bbox = [
                        0,
                        0,
                        0,
                        0
                    ];
                    bbox[i] = node.thickness;
                    return bbox;
                }
            }
        ];
    };
};
exports.CommonBorder = CommonBorder;
var CommonBorder2 = function(render) {
    return function(name, side1, side2) {
        var i1 = exports.sideIndex[side1];
        var i2 = exports.sideIndex[side2];
        return [
            name,
            {
                renderer: render,
                bbox: function(node) {
                    var t = node.thickness + node.padding;
                    var bbox = [
                        0,
                        0,
                        0,
                        0
                    ];
                    bbox[i1] = bbox[i2] = t;
                    return bbox;
                },
                border: function(node) {
                    var bbox = [
                        0,
                        0,
                        0,
                        0
                    ];
                    bbox[i1] = bbox[i2] = node.thickness;
                    return bbox;
                },
                remove: side1 + ' ' + side2
            }
        ];
    };
};
exports.CommonBorder2 = CommonBorder2;
var CommonDiagonalStrike = function(render) {
    return function(name) {
        var cname = 'mjx-' + name.charAt(0) + 'strike';
        return [
            name + 'diagonalstrike',
            {
                renderer: render(cname),
                bbox: exports.fullBBox
            }
        ];
    };
};
exports.CommonDiagonalStrike = CommonDiagonalStrike;
var CommonDiagonalArrow = function(render) {
    return function(name) {
        var _a = __read(exports.diagonalArrowDef[name], 4), c = _a[0], pi = _a[1], double = _a[2], remove = _a[3];
        return [
            name + 'arrow',
            {
                renderer: function(node, _child) {
                    var _a = __read(node.arrowAW(), 2), a = _a[0], W = _a[1];
                    var arrow = node.arrow(W, c * (a - pi), double);
                    render(node, arrow);
                },
                bbox: function(node) {
                    var _a = node.arrowData(), a = _a.a, x = _a.x, y = _a.y;
                    var _b = __read([
                        node.arrowhead.x,
                        node.arrowhead.y,
                        node.arrowhead.dx
                    ], 3), ax = _b[0], ay = _b[1], adx = _b[2];
                    var _c = __read(node.getArgMod(ax + adx, ay), 2), b = _c[0], ar = _c[1];
                    var dy = y + (b > a ? node.thickness * ar * Math.sin(b - a) : 0);
                    var dx = x + (b > Math.PI / 2 - a ? node.thickness * ar * Math.sin(b + a - Math.PI / 2) : 0);
                    return [
                        dy,
                        dx,
                        dy,
                        dx
                    ];
                },
                remove: remove
            }
        ];
    };
};
exports.CommonDiagonalArrow = CommonDiagonalArrow;
var CommonArrow = function(render) {
    return function(name) {
        var _a = __read(exports.arrowDef[name], 4), angle = _a[0], double = _a[1], isVertical = _a[2], remove = _a[3];
        return [
            name + 'arrow',
            {
                renderer: function(node, _child) {
                    var _a = node.getBBox(), w = _a.w, h = _a.h, d = _a.d;
                    var _b = __read(isVertical ? [
                        h + d,
                        'X'
                    ] : [
                        w,
                        'Y'
                    ], 2), W = _b[0], offset = _b[1];
                    var dd = node.getOffset(offset);
                    var arrow = node.arrow(W, angle, double, offset, dd);
                    render(node, arrow);
                },
                bbox: exports.arrowBBox[name],
                remove: remove
            }
        ];
    };
};
exports.CommonArrow = CommonArrow; //# sourceMappingURL=Notation.js.map
}}),
"[project]/node_modules/mathjax-full/js/output/common/Wrappers/menclose.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __extends = this && this.__extends || function() {
    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || ({
            __proto__: []
        }) instanceof Array && function(d, b) {
            d.__proto__ = b;
        } || function(d, b) {
            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
        };
        return extendStatics(d, b);
    };
    return function(d, b) {
        if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
}();
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    }
    __setModuleDefault(result, mod);
    return result;
};
var __read = this && this.__read || function(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);
    } catch (error) {
        e = {
            error: error
        };
    } finally{
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        } finally{
            if (e) throw e.error;
        }
    }
    return ar;
};
var __spreadArray = this && this.__spreadArray || function(to, from, pack) {
    if (pack || arguments.length === 2) for(var i = 0, l = from.length, ar; i < l; i++){
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var __values = this && this.__values || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function() {
            if (o && i >= o.length) o = void 0;
            return {
                value: o && o[i++],
                done: !o
            };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CommonMencloseMixin = void 0;
var Notation = __importStar(__turbopack_context__.r("[project]/node_modules/mathjax-full/js/output/common/Notation.js [app-rsc] (ecmascript)"));
var string_js_1 = __turbopack_context__.r("[project]/node_modules/mathjax-full/js/util/string.js [app-rsc] (ecmascript)");
function CommonMencloseMixin(Base) {
    return function(_super) {
        __extends(class_1, _super);
        function class_1() {
            var args = [];
            for(var _i = 0; _i < arguments.length; _i++){
                args[_i] = arguments[_i];
            }
            var _this = _super.apply(this, __spreadArray([], __read(args), false)) || this;
            _this.notations = {};
            _this.renderChild = null;
            _this.msqrt = null;
            _this.padding = Notation.PADDING;
            _this.thickness = Notation.THICKNESS;
            _this.arrowhead = {
                x: Notation.ARROWX,
                y: Notation.ARROWY,
                dx: Notation.ARROWDX
            };
            _this.TRBL = [
                0,
                0,
                0,
                0
            ];
            _this.getParameters();
            _this.getNotations();
            _this.removeRedundantNotations();
            _this.initializeNotations();
            _this.TRBL = _this.getBBoxExtenders();
            return _this;
        }
        class_1.prototype.getParameters = function() {
            var attributes = this.node.attributes;
            var padding = attributes.get('data-padding');
            if (padding !== undefined) {
                this.padding = this.length2em(padding, Notation.PADDING);
            }
            var thickness = attributes.get('data-thickness');
            if (thickness !== undefined) {
                this.thickness = this.length2em(thickness, Notation.THICKNESS);
            }
            var arrowhead = attributes.get('data-arrowhead');
            if (arrowhead !== undefined) {
                var _b = __read((0, string_js_1.split)(arrowhead), 3), x = _b[0], y = _b[1], dx = _b[2];
                this.arrowhead = {
                    x: x ? parseFloat(x) : Notation.ARROWX,
                    y: y ? parseFloat(y) : Notation.ARROWY,
                    dx: dx ? parseFloat(dx) : Notation.ARROWDX
                };
            }
        };
        class_1.prototype.getNotations = function() {
            var e_1, _b;
            var Notations = this.constructor.notations;
            try {
                for(var _c = __values((0, string_js_1.split)(this.node.attributes.get('notation'))), _d = _c.next(); !_d.done; _d = _c.next()){
                    var name_1 = _d.value;
                    var notation = Notations.get(name_1);
                    if (notation) {
                        this.notations[name_1] = notation;
                        if (notation.renderChild) {
                            this.renderChild = notation.renderer;
                        }
                    }
                }
            } catch (e_1_1) {
                e_1 = {
                    error: e_1_1
                };
            } finally{
                try {
                    if (_d && !_d.done && (_b = _c.return)) _b.call(_c);
                } finally{
                    if (e_1) throw e_1.error;
                }
            }
        };
        class_1.prototype.removeRedundantNotations = function() {
            var e_2, _b, e_3, _c;
            try {
                for(var _d = __values(Object.keys(this.notations)), _e = _d.next(); !_e.done; _e = _d.next()){
                    var name_2 = _e.value;
                    if (this.notations[name_2]) {
                        var remove = this.notations[name_2].remove || '';
                        try {
                            for(var _f = (e_3 = void 0, __values(remove.split(/ /))), _g = _f.next(); !_g.done; _g = _f.next()){
                                var notation = _g.value;
                                delete this.notations[notation];
                            }
                        } catch (e_3_1) {
                            e_3 = {
                                error: e_3_1
                            };
                        } finally{
                            try {
                                if (_g && !_g.done && (_c = _f.return)) _c.call(_f);
                            } finally{
                                if (e_3) throw e_3.error;
                            }
                        }
                    }
                }
            } catch (e_2_1) {
                e_2 = {
                    error: e_2_1
                };
            } finally{
                try {
                    if (_e && !_e.done && (_b = _d.return)) _b.call(_d);
                } finally{
                    if (e_2) throw e_2.error;
                }
            }
        };
        class_1.prototype.initializeNotations = function() {
            var e_4, _b;
            try {
                for(var _c = __values(Object.keys(this.notations)), _d = _c.next(); !_d.done; _d = _c.next()){
                    var name_3 = _d.value;
                    var init = this.notations[name_3].init;
                    init && init(this);
                }
            } catch (e_4_1) {
                e_4 = {
                    error: e_4_1
                };
            } finally{
                try {
                    if (_d && !_d.done && (_b = _c.return)) _b.call(_c);
                } finally{
                    if (e_4) throw e_4.error;
                }
            }
        };
        class_1.prototype.computeBBox = function(bbox, recompute) {
            if (recompute === void 0) {
                recompute = false;
            }
            var _b = __read(this.TRBL, 4), T = _b[0], R = _b[1], B = _b[2], L = _b[3];
            var child = this.childNodes[0].getBBox();
            bbox.combine(child, L, 0);
            bbox.h += T;
            bbox.d += B;
            bbox.w += R;
            this.setChildPWidths(recompute);
        };
        class_1.prototype.getBBoxExtenders = function() {
            var e_5, _b;
            var TRBL = [
                0,
                0,
                0,
                0
            ];
            try {
                for(var _c = __values(Object.keys(this.notations)), _d = _c.next(); !_d.done; _d = _c.next()){
                    var name_4 = _d.value;
                    this.maximizeEntries(TRBL, this.notations[name_4].bbox(this));
                }
            } catch (e_5_1) {
                e_5 = {
                    error: e_5_1
                };
            } finally{
                try {
                    if (_d && !_d.done && (_b = _c.return)) _b.call(_c);
                } finally{
                    if (e_5) throw e_5.error;
                }
            }
            return TRBL;
        };
        class_1.prototype.getPadding = function() {
            var e_6, _b;
            var _this = this;
            var BTRBL = [
                0,
                0,
                0,
                0
            ];
            try {
                for(var _c = __values(Object.keys(this.notations)), _d = _c.next(); !_d.done; _d = _c.next()){
                    var name_5 = _d.value;
                    var border = this.notations[name_5].border;
                    if (border) {
                        this.maximizeEntries(BTRBL, border(this));
                    }
                }
            } catch (e_6_1) {
                e_6 = {
                    error: e_6_1
                };
            } finally{
                try {
                    if (_d && !_d.done && (_b = _c.return)) _b.call(_c);
                } finally{
                    if (e_6) throw e_6.error;
                }
            }
            return [
                0,
                1,
                2,
                3
            ].map(function(i) {
                return _this.TRBL[i] - BTRBL[i];
            });
        };
        class_1.prototype.maximizeEntries = function(X, Y) {
            for(var i = 0; i < X.length; i++){
                if (X[i] < Y[i]) {
                    X[i] = Y[i];
                }
            }
        };
        class_1.prototype.getOffset = function(direction) {
            var _b = __read(this.TRBL, 4), T = _b[0], R = _b[1], B = _b[2], L = _b[3];
            var d = (direction === 'X' ? R - L : B - T) / 2;
            return Math.abs(d) > .001 ? d : 0;
        };
        class_1.prototype.getArgMod = function(w, h) {
            return [
                Math.atan2(h, w),
                Math.sqrt(w * w + h * h)
            ];
        };
        class_1.prototype.arrow = function(_w, _a, _double, _offset, _dist) {
            if (_offset === void 0) {
                _offset = '';
            }
            if (_dist === void 0) {
                _dist = 0;
            }
            return null;
        };
        class_1.prototype.arrowData = function() {
            var _b = __read([
                this.padding,
                this.thickness
            ], 2), p = _b[0], t = _b[1];
            var r = t * (this.arrowhead.x + Math.max(1, this.arrowhead.dx));
            var _c = this.childNodes[0].getBBox(), h = _c.h, d = _c.d, w = _c.w;
            var H = h + d;
            var R = Math.sqrt(H * H + w * w);
            var x = Math.max(p, r * w / R);
            var y = Math.max(p, r * H / R);
            var _d = __read(this.getArgMod(w + 2 * x, H + 2 * y), 2), a = _d[0], W = _d[1];
            return {
                a: a,
                W: W,
                x: x,
                y: y
            };
        };
        class_1.prototype.arrowAW = function() {
            var _b = this.childNodes[0].getBBox(), h = _b.h, d = _b.d, w = _b.w;
            var _c = __read(this.TRBL, 4), T = _c[0], R = _c[1], B = _c[2], L = _c[3];
            return this.getArgMod(L + w + R, T + h + d + B);
        };
        class_1.prototype.createMsqrt = function(child) {
            var mmlFactory = this.node.factory;
            var mml = mmlFactory.create('msqrt');
            mml.inheritAttributesFrom(this.node);
            mml.childNodes[0] = child.node;
            var node = this.wrap(mml);
            node.parent = this;
            return node;
        };
        class_1.prototype.sqrtTRBL = function() {
            var bbox = this.msqrt.getBBox();
            var cbox = this.msqrt.childNodes[0].getBBox();
            return [
                bbox.h - cbox.h,
                0,
                bbox.d - cbox.d,
                bbox.w - cbox.w
            ];
        };
        return class_1;
    }(Base);
}
exports.CommonMencloseMixin = CommonMencloseMixin; //# sourceMappingURL=menclose.js.map
}}),
"[project]/node_modules/mathjax-full/js/output/common/Wrappers/semantics.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __extends = this && this.__extends || function() {
    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || ({
            __proto__: []
        }) instanceof Array && function(d, b) {
            d.__proto__ = b;
        } || function(d, b) {
            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
        };
        return extendStatics(d, b);
    };
    return function(d, b) {
        if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
}();
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CommonSemanticsMixin = void 0;
function CommonSemanticsMixin(Base) {
    return function(_super) {
        __extends(class_1, _super);
        function class_1() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        class_1.prototype.computeBBox = function(bbox, _recompute) {
            if (_recompute === void 0) {
                _recompute = false;
            }
            if (this.childNodes.length) {
                var _a = this.childNodes[0].getBBox(), w = _a.w, h = _a.h, d = _a.d;
                bbox.w = w;
                bbox.h = h;
                bbox.d = d;
            }
        };
        return class_1;
    }(Base);
}
exports.CommonSemanticsMixin = CommonSemanticsMixin; //# sourceMappingURL=semantics.js.map
}}),
"[project]/node_modules/mathjax-full/js/output/common/Wrappers/mglyph.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __extends = this && this.__extends || function() {
    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || ({
            __proto__: []
        }) instanceof Array && function(d, b) {
            d.__proto__ = b;
        } || function(d, b) {
            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
        };
        return extendStatics(d, b);
    };
    return function(d, b) {
        if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
}();
var __read = this && this.__read || function(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);
    } catch (error) {
        e = {
            error: error
        };
    } finally{
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        } finally{
            if (e) throw e.error;
        }
    }
    return ar;
};
var __spreadArray = this && this.__spreadArray || function(to, from, pack) {
    if (pack || arguments.length === 2) for(var i = 0, l = from.length, ar; i < l; i++){
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CommonMglyphMixin = void 0;
function CommonMglyphMixin(Base) {
    return function(_super) {
        __extends(class_1, _super);
        function class_1() {
            var args = [];
            for(var _i = 0; _i < arguments.length; _i++){
                args[_i] = arguments[_i];
            }
            var _this = _super.apply(this, __spreadArray([], __read(args), false)) || this;
            _this.getParameters();
            return _this;
        }
        class_1.prototype.getParameters = function() {
            var _a = this.node.attributes.getList('width', 'height', 'valign', 'src', 'index'), width = _a.width, height = _a.height, valign = _a.valign, src = _a.src, index = _a.index;
            if (src) {
                this.width = width === 'auto' ? 1 : this.length2em(width);
                this.height = height === 'auto' ? 1 : this.length2em(height);
                this.valign = this.length2em(valign || '0');
            } else {
                var text = String.fromCodePoint(parseInt(index));
                var mmlFactory = this.node.factory;
                this.charWrapper = this.wrap(mmlFactory.create('text').setText(text));
                this.charWrapper.parent = this;
            }
        };
        class_1.prototype.computeBBox = function(bbox, _recompute) {
            if (_recompute === void 0) {
                _recompute = false;
            }
            if (this.charWrapper) {
                bbox.updateFrom(this.charWrapper.getBBox());
            } else {
                bbox.w = this.width;
                bbox.h = this.height + this.valign;
                bbox.d = -this.valign;
            }
        };
        return class_1;
    }(Base);
}
exports.CommonMglyphMixin = CommonMglyphMixin; //# sourceMappingURL=mglyph.js.map
}}),
"[project]/node_modules/mathjax-full/js/output/common/Wrappers/TeXAtom.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __extends = this && this.__extends || function() {
    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || ({
            __proto__: []
        }) instanceof Array && function(d, b) {
            d.__proto__ = b;
        } || function(d, b) {
            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
        };
        return extendStatics(d, b);
    };
    return function(d, b) {
        if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
}();
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CommonTeXAtomMixin = void 0;
var MmlNode_js_1 = __turbopack_context__.r("[project]/node_modules/mathjax-full/js/core/MmlTree/MmlNode.js [app-rsc] (ecmascript)");
function CommonTeXAtomMixin(Base) {
    return function(_super) {
        __extends(class_1, _super);
        function class_1() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        class_1.prototype.computeBBox = function(bbox, recompute) {
            if (recompute === void 0) {
                recompute = false;
            }
            _super.prototype.computeBBox.call(this, bbox, recompute);
            if (this.childNodes[0] && this.childNodes[0].bbox.ic) {
                bbox.ic = this.childNodes[0].bbox.ic;
            }
            if (this.node.texClass === MmlNode_js_1.TEXCLASS.VCENTER) {
                var h = bbox.h, d = bbox.d;
                var a = this.font.params.axis_height;
                var dh = (h + d) / 2 + a - h;
                bbox.h += dh;
                bbox.d -= dh;
            }
        };
        return class_1;
    }(Base);
}
exports.CommonTeXAtomMixin = CommonTeXAtomMixin; //# sourceMappingURL=TeXAtom.js.map
}}),
"[project]/node_modules/mathjax-full/js/output/common/Wrappers/TextNode.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __extends = this && this.__extends || function() {
    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || ({
            __proto__: []
        }) instanceof Array && function(d, b) {
            d.__proto__ = b;
        } || function(d, b) {
            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
        };
        return extendStatics(d, b);
    };
    return function(d, b) {
        if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
}();
var __values = this && this.__values || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function() {
            if (o && i >= o.length) o = void 0;
            return {
                value: o && o[i++],
                done: !o
            };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = this && this.__read || function(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);
    } catch (error) {
        e = {
            error: error
        };
    } finally{
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        } finally{
            if (e) throw e.error;
        }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CommonTextNodeMixin = void 0;
function CommonTextNodeMixin(Base) {
    return function(_super) {
        __extends(class_1, _super);
        function class_1() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        class_1.prototype.computeBBox = function(bbox, _recompute) {
            var e_1, _a;
            if (_recompute === void 0) {
                _recompute = false;
            }
            var variant = this.parent.variant;
            var text = this.node.getText();
            if (variant === '-explicitFont') {
                var font = this.jax.getFontData(this.parent.styles);
                var _b = this.jax.measureText(text, variant, font), w = _b.w, h = _b.h, d = _b.d;
                bbox.h = h;
                bbox.d = d;
                bbox.w = w;
            } else {
                var chars = this.remappedText(text, variant);
                bbox.empty();
                try {
                    for(var chars_1 = __values(chars), chars_1_1 = chars_1.next(); !chars_1_1.done; chars_1_1 = chars_1.next()){
                        var char = chars_1_1.value;
                        var _c = __read(this.getVariantChar(variant, char), 4), h = _c[0], d = _c[1], w = _c[2], data = _c[3];
                        if (data.unknown) {
                            var cbox = this.jax.measureText(String.fromCodePoint(char), variant);
                            w = cbox.w;
                            h = cbox.h;
                            d = cbox.d;
                        }
                        bbox.w += w;
                        if (h > bbox.h) bbox.h = h;
                        if (d > bbox.d) bbox.d = d;
                        bbox.ic = data.ic || 0;
                        bbox.sk = data.sk || 0;
                        bbox.dx = data.dx || 0;
                    }
                } catch (e_1_1) {
                    e_1 = {
                        error: e_1_1
                    };
                } finally{
                    try {
                        if (chars_1_1 && !chars_1_1.done && (_a = chars_1.return)) _a.call(chars_1);
                    } finally{
                        if (e_1) throw e_1.error;
                    }
                }
                if (chars.length > 1) {
                    bbox.sk = 0;
                }
                bbox.clean();
            }
        };
        class_1.prototype.remappedText = function(text, variant) {
            var c = this.parent.stretch.c;
            return c ? [
                c
            ] : this.parent.remapChars(this.unicodeChars(text, variant));
        };
        class_1.prototype.getStyles = function() {};
        class_1.prototype.getVariant = function() {};
        class_1.prototype.getScale = function() {};
        class_1.prototype.getSpace = function() {};
        return class_1;
    }(Base);
}
exports.CommonTextNodeMixin = CommonTextNodeMixin; //# sourceMappingURL=TextNode.js.map
}}),
"[project]/node_modules/mathjax-full/js/output/common/fonts/tex.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __extends = this && this.__extends || function() {
    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || ({
            __proto__: []
        }) instanceof Array && function(d, b) {
            d.__proto__ = b;
        } || function(d, b) {
            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
        };
        return extendStatics(d, b);
    };
    return function(d, b) {
        if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
}();
var __assign = this && this.__assign || function() {
    __assign = Object.assign || function(t) {
        for(var s, i = 1, n = arguments.length; i < n; i++){
            s = arguments[i];
            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __read = this && this.__read || function(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);
    } catch (error) {
        e = {
            error: error
        };
    } finally{
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        } finally{
            if (e) throw e.error;
        }
    }
    return ar;
};
var __spreadArray = this && this.__spreadArray || function(to, from, pack) {
    if (pack || arguments.length === 2) for(var i = 0, l = from.length, ar; i < l; i++){
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CommonTeXFontMixin = void 0;
function CommonTeXFontMixin(Base) {
    var _a;
    return _a = function(_super) {
        __extends(class_1, _super);
        function class_1() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        class_1.prototype.getDelimiterData = function(n) {
            return this.getChar('-smallop', n) || this.getChar('-size4', n);
        };
        return class_1;
    }(Base), _a.NAME = 'TeX', _a.defaultVariants = __spreadArray(__spreadArray([], __read(Base.defaultVariants), false), [
        [
            '-smallop',
            'normal'
        ],
        [
            '-largeop',
            'normal'
        ],
        [
            '-size3',
            'normal'
        ],
        [
            '-size4',
            'normal'
        ],
        [
            '-tex-calligraphic',
            'italic'
        ],
        [
            '-tex-bold-calligraphic',
            'bold-italic'
        ],
        [
            '-tex-oldstyle',
            'normal'
        ],
        [
            '-tex-bold-oldstyle',
            'bold'
        ],
        [
            '-tex-mathit',
            'italic'
        ],
        [
            '-tex-variant',
            'normal'
        ]
    ], false), _a.defaultCssFonts = __assign(__assign({}, Base.defaultCssFonts), {
        '-smallop': [
            'serif',
            false,
            false
        ],
        '-largeop': [
            'serif',
            false,
            false
        ],
        '-size3': [
            'serif',
            false,
            false
        ],
        '-size4': [
            'serif',
            false,
            false
        ],
        '-tex-calligraphic': [
            'cursive',
            true,
            false
        ],
        '-tex-bold-calligraphic': [
            'cursive',
            true,
            true
        ],
        '-tex-oldstyle': [
            'serif',
            false,
            false
        ],
        '-tex-bold-oldstyle': [
            'serif',
            false,
            true
        ],
        '-tex-mathit': [
            'serif',
            true,
            false
        ]
    }), _a.defaultSizeVariants = [
        'normal',
        '-smallop',
        '-largeop',
        '-size3',
        '-size4',
        '-tex-variant'
    ], _a.defaultStretchVariants = [
        '-size4'
    ], _a;
}
exports.CommonTeXFontMixin = CommonTeXFontMixin; //# sourceMappingURL=tex.js.map
}}),
"[project]/node_modules/mathjax-full/js/output/common/fonts/tex/bold-italic.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.boldItalic = void 0;
exports.boldItalic = {
    0x2F: [
        .711,
        .21,
        .894
    ],
    0x131: [
        .452,
        .008,
        .394,
        {
            sk: .0319
        }
    ],
    0x237: [
        .451,
        .201,
        .439,
        {
            sk: .0958
        }
    ],
    0x2044: [
        .711,
        .21,
        .894
    ],
    0x2206: [
        .711,
        0,
        .958,
        {
            sk: .192
        }
    ],
    0x29F8: [
        .711,
        .21,
        .894
    ]
}; //# sourceMappingURL=bold-italic.js.map
}}),
"[project]/node_modules/mathjax-full/js/output/common/fonts/tex/bold.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.bold = void 0;
exports.bold = {
    0x21: [
        .705,
        0,
        .35
    ],
    0x22: [
        .694,
        -0.329,
        .603
    ],
    0x23: [
        .694,
        .193,
        .958
    ],
    0x24: [
        .75,
        .056,
        .575
    ],
    0x25: [
        .75,
        .056,
        .958
    ],
    0x26: [
        .705,
        .011,
        .894
    ],
    0x27: [
        .694,
        -0.329,
        .319
    ],
    0x28: [
        .75,
        .249,
        .447
    ],
    0x29: [
        .75,
        .249,
        .447
    ],
    0x2A: [
        .75,
        -0.306,
        .575
    ],
    0x2B: [
        .633,
        .131,
        .894
    ],
    0x2C: [
        .171,
        .194,
        .319
    ],
    0x2D: [
        .278,
        -0.166,
        .383
    ],
    0x2E: [
        .171,
        0,
        .319
    ],
    0x2F: [
        .75,
        .25,
        .575
    ],
    0x3A: [
        .444,
        0,
        .319
    ],
    0x3B: [
        .444,
        .194,
        .319
    ],
    0x3C: [
        .587,
        .085,
        .894
    ],
    0x3D: [
        .393,
        -0.109,
        .894
    ],
    0x3E: [
        .587,
        .085,
        .894
    ],
    0x3F: [
        .7,
        0,
        .543
    ],
    0x40: [
        .699,
        .006,
        .894
    ],
    0x5B: [
        .75,
        .25,
        .319
    ],
    0x5C: [
        .75,
        .25,
        .575
    ],
    0x5D: [
        .75,
        .25,
        .319
    ],
    0x5E: [
        .694,
        -0.52,
        .575
    ],
    0x5F: [
        -0.01,
        .061,
        .575
    ],
    0x60: [
        .706,
        -0.503,
        .575
    ],
    0x7B: [
        .75,
        .25,
        .575
    ],
    0x7C: [
        .75,
        .249,
        .319
    ],
    0x7D: [
        .75,
        .25,
        .575
    ],
    0x7E: [
        .344,
        -0.202,
        .575
    ],
    0xA8: [
        .695,
        -0.535,
        .575
    ],
    0xAC: [
        .371,
        -0.061,
        .767
    ],
    0xAF: [
        .607,
        -0.54,
        .575
    ],
    0xB0: [
        .702,
        -0.536,
        .575
    ],
    0xB1: [
        .728,
        .035,
        .894
    ],
    0xB4: [
        .706,
        -0.503,
        .575
    ],
    0xB7: [
        .336,
        -0.166,
        .319
    ],
    0xD7: [
        .53,
        .028,
        .894
    ],
    0xF7: [
        .597,
        .096,
        .894
    ],
    0x131: [
        .442,
        0,
        .278,
        {
            sk: .0278
        }
    ],
    0x237: [
        .442,
        .205,
        .306,
        {
            sk: .0833
        }
    ],
    0x2B9: [
        .563,
        -0.033,
        .344
    ],
    0x2C6: [
        .694,
        -0.52,
        .575
    ],
    0x2C7: [
        .66,
        -0.515,
        .575
    ],
    0x2C9: [
        .607,
        -0.54,
        .575
    ],
    0x2CA: [
        .706,
        -0.503,
        .575
    ],
    0x2CB: [
        .706,
        -0.503,
        .575
    ],
    0x2D8: [
        .694,
        -0.5,
        .575
    ],
    0x2D9: [
        .695,
        -0.525,
        .575
    ],
    0x2DA: [
        .702,
        -0.536,
        .575
    ],
    0x2DC: [
        .694,
        -0.552,
        .575
    ],
    0x300: [
        .706,
        -0.503,
        0
    ],
    0x301: [
        .706,
        -0.503,
        0
    ],
    0x302: [
        .694,
        -0.52,
        0
    ],
    0x303: [
        .694,
        -0.552,
        0
    ],
    0x304: [
        .607,
        -0.54,
        0
    ],
    0x306: [
        .694,
        -0.5,
        0
    ],
    0x307: [
        .695,
        -0.525,
        0
    ],
    0x308: [
        .695,
        -0.535,
        0
    ],
    0x30A: [
        .702,
        -0.536,
        0
    ],
    0x30B: [
        .714,
        -0.511,
        0
    ],
    0x30C: [
        .66,
        -0.515,
        0
    ],
    0x338: [
        .711,
        .21,
        0
    ],
    0x2002: [
        0,
        0,
        .5
    ],
    0x2003: [
        0,
        0,
        .999
    ],
    0x2004: [
        0,
        0,
        .333
    ],
    0x2005: [
        0,
        0,
        .25
    ],
    0x2006: [
        0,
        0,
        .167
    ],
    0x2009: [
        0,
        0,
        .167
    ],
    0x200A: [
        0,
        0,
        .083
    ],
    0x2013: [
        .3,
        -0.249,
        .575
    ],
    0x2014: [
        .3,
        -0.249,
        1.15
    ],
    0x2015: [
        .3,
        -0.249,
        1.15
    ],
    0x2016: [
        .75,
        .248,
        .575
    ],
    0x2017: [
        -0.01,
        .061,
        .575
    ],
    0x2018: [
        .694,
        -0.329,
        .319
    ],
    0x2019: [
        .694,
        -0.329,
        .319
    ],
    0x201C: [
        .694,
        -0.329,
        .603
    ],
    0x201D: [
        .694,
        -0.329,
        .603
    ],
    0x2020: [
        .702,
        .211,
        .511
    ],
    0x2021: [
        .702,
        .202,
        .511
    ],
    0x2022: [
        .474,
        -0.028,
        .575
    ],
    0x2026: [
        .171,
        0,
        1.295
    ],
    0x2032: [
        .563,
        -0.033,
        .344
    ],
    0x2033: [
        .563,
        0,
        .688
    ],
    0x2034: [
        .563,
        0,
        1.032
    ],
    0x203E: [
        .607,
        -0.54,
        .575
    ],
    0x2044: [
        .75,
        .25,
        .575
    ],
    0x2057: [
        .563,
        0,
        1.376
    ],
    0x20D7: [
        .723,
        -0.513,
        .575
    ],
    0x210F: [
        .694,
        .008,
        .668,
        {
            sk: -0.0319
        }
    ],
    0x2113: [
        .702,
        .019,
        .474,
        {
            sk: .128
        }
    ],
    0x2118: [
        .461,
        .21,
        .74
    ],
    0x2135: [
        .694,
        0,
        .703
    ],
    0x2190: [
        .518,
        .017,
        1.15
    ],
    0x2191: [
        .694,
        .193,
        .575
    ],
    0x2192: [
        .518,
        .017,
        1.15
    ],
    0x2193: [
        .694,
        .194,
        .575
    ],
    0x2194: [
        .518,
        .017,
        1.15
    ],
    0x2195: [
        .767,
        .267,
        .575
    ],
    0x2196: [
        .724,
        .194,
        1.15
    ],
    0x2197: [
        .724,
        .193,
        1.15
    ],
    0x2198: [
        .694,
        .224,
        1.15
    ],
    0x2199: [
        .694,
        .224,
        1.15
    ],
    0x219A: [
        .711,
        .21,
        1.15
    ],
    0x219B: [
        .711,
        .21,
        1.15
    ],
    0x21A6: [
        .518,
        .017,
        1.15
    ],
    0x21A9: [
        .518,
        .017,
        1.282
    ],
    0x21AA: [
        .518,
        .017,
        1.282
    ],
    0x21AE: [
        .711,
        .21,
        1.15
    ],
    0x21BC: [
        .518,
        -0.22,
        1.15
    ],
    0x21BD: [
        .281,
        .017,
        1.15
    ],
    0x21C0: [
        .518,
        -0.22,
        1.15
    ],
    0x21C1: [
        .281,
        .017,
        1.15
    ],
    0x21CC: [
        .718,
        .017,
        1.15
    ],
    0x21CD: [
        .711,
        .21,
        1.15
    ],
    0x21CE: [
        .711,
        .21,
        1.15
    ],
    0x21CF: [
        .711,
        .21,
        1.15
    ],
    0x21D0: [
        .547,
        .046,
        1.15
    ],
    0x21D1: [
        .694,
        .193,
        .703
    ],
    0x21D2: [
        .547,
        .046,
        1.15
    ],
    0x21D3: [
        .694,
        .194,
        .703
    ],
    0x21D4: [
        .547,
        .046,
        1.15
    ],
    0x21D5: [
        .767,
        .267,
        .703
    ],
    0x2200: [
        .694,
        .016,
        .639
    ],
    0x2203: [
        .694,
        0,
        .639
    ],
    0x2204: [
        .711,
        .21,
        .639
    ],
    0x2205: [
        .767,
        .073,
        .575
    ],
    0x2206: [
        .698,
        0,
        .958
    ],
    0x2208: [
        .587,
        .086,
        .767
    ],
    0x2209: [
        .711,
        .21,
        .767
    ],
    0x220B: [
        .587,
        .086,
        .767
    ],
    0x220C: [
        .711,
        .21,
        .767
    ],
    0x2212: [
        .281,
        -0.221,
        .894
    ],
    0x2213: [
        .537,
        .227,
        .894
    ],
    0x2215: [
        .75,
        .25,
        .575
    ],
    0x2216: [
        .75,
        .25,
        .575
    ],
    0x2217: [
        .472,
        -0.028,
        .575
    ],
    0x2218: [
        .474,
        -0.028,
        .575
    ],
    0x2219: [
        .474,
        -0.028,
        .575
    ],
    0x221A: [
        .82,
        .18,
        .958,
        {
            ic: .03
        }
    ],
    0x221D: [
        .451,
        .008,
        .894
    ],
    0x221E: [
        .452,
        .008,
        1.15
    ],
    0x2220: [
        .714,
        0,
        .722
    ],
    0x2223: [
        .75,
        .249,
        .319
    ],
    0x2224: [
        .75,
        .249,
        .319
    ],
    0x2225: [
        .75,
        .248,
        .575
    ],
    0x2226: [
        .75,
        .248,
        .575
    ],
    0x2227: [
        .604,
        .017,
        .767
    ],
    0x2228: [
        .604,
        .016,
        .767
    ],
    0x2229: [
        .603,
        .016,
        .767
    ],
    0x222A: [
        .604,
        .016,
        .767
    ],
    0x222B: [
        .711,
        .211,
        .569,
        {
            ic: .063
        }
    ],
    0x223C: [
        .391,
        -0.109,
        .894
    ],
    0x2240: [
        .583,
        .082,
        .319
    ],
    0x2241: [
        .711,
        .21,
        .894
    ],
    0x2243: [
        .502,
        0,
        .894
    ],
    0x2244: [
        .711,
        .21,
        .894
    ],
    0x2245: [
        .638,
        .027,
        .894
    ],
    0x2247: [
        .711,
        .21,
        .894
    ],
    0x2248: [
        .524,
        -0.032,
        .894
    ],
    0x2249: [
        .711,
        .21,
        .894
    ],
    0x224D: [
        .533,
        .032,
        .894
    ],
    0x2250: [
        .721,
        -0.109,
        .894
    ],
    0x2260: [
        .711,
        .21,
        .894
    ],
    0x2261: [
        .505,
        0,
        .894
    ],
    0x2262: [
        .711,
        .21,
        .894
    ],
    0x2264: [
        .697,
        .199,
        .894
    ],
    0x2265: [
        .697,
        .199,
        .894
    ],
    0x226A: [
        .617,
        .116,
        1.15
    ],
    0x226B: [
        .618,
        .116,
        1.15
    ],
    0x226D: [
        .711,
        .21,
        .894
    ],
    0x226E: [
        .711,
        .21,
        .894
    ],
    0x226F: [
        .711,
        .21,
        .894
    ],
    0x2270: [
        .711,
        .21,
        .894
    ],
    0x2271: [
        .711,
        .21,
        .894
    ],
    0x227A: [
        .585,
        .086,
        .894
    ],
    0x227B: [
        .586,
        .086,
        .894
    ],
    0x2280: [
        .711,
        .21,
        .894
    ],
    0x2281: [
        .711,
        .21,
        .894
    ],
    0x2282: [
        .587,
        .085,
        .894
    ],
    0x2283: [
        .587,
        .086,
        .894
    ],
    0x2284: [
        .711,
        .21,
        .894
    ],
    0x2285: [
        .711,
        .21,
        .894
    ],
    0x2286: [
        .697,
        .199,
        .894
    ],
    0x2287: [
        .697,
        .199,
        .894
    ],
    0x2288: [
        .711,
        .21,
        .894
    ],
    0x2289: [
        .711,
        .21,
        .894
    ],
    0x228E: [
        .604,
        .016,
        .767
    ],
    0x2291: [
        .697,
        .199,
        .894
    ],
    0x2292: [
        .697,
        .199,
        .894
    ],
    0x2293: [
        .604,
        0,
        .767
    ],
    0x2294: [
        .604,
        0,
        .767
    ],
    0x2295: [
        .632,
        .132,
        .894
    ],
    0x2296: [
        .632,
        .132,
        .894
    ],
    0x2297: [
        .632,
        .132,
        .894
    ],
    0x2298: [
        .632,
        .132,
        .894
    ],
    0x2299: [
        .632,
        .132,
        .894
    ],
    0x22A2: [
        .693,
        0,
        .703
    ],
    0x22A3: [
        .693,
        0,
        .703
    ],
    0x22A4: [
        .694,
        0,
        .894
    ],
    0x22A5: [
        .693,
        0,
        .894
    ],
    0x22A8: [
        .75,
        .249,
        .974
    ],
    0x22AC: [
        .711,
        .21,
        .703
    ],
    0x22AD: [
        .75,
        .249,
        .974
    ],
    0x22C4: [
        .523,
        .021,
        .575
    ],
    0x22C5: [
        .336,
        -0.166,
        .319
    ],
    0x22C6: [
        .502,
        0,
        .575
    ],
    0x22C8: [
        .54,
        .039,
        1
    ],
    0x22E2: [
        .711,
        .21,
        .894
    ],
    0x22E3: [
        .711,
        .21,
        .894
    ],
    0x22EE: [
        .951,
        .029,
        .319
    ],
    0x22EF: [
        .336,
        -0.166,
        1.295
    ],
    0x22F1: [
        .871,
        -0.101,
        1.323
    ],
    0x2308: [
        .75,
        .248,
        .511
    ],
    0x2309: [
        .75,
        .248,
        .511
    ],
    0x230A: [
        .749,
        .248,
        .511
    ],
    0x230B: [
        .749,
        .248,
        .511
    ],
    0x2322: [
        .405,
        -0.108,
        1.15
    ],
    0x2323: [
        .392,
        -0.126,
        1.15
    ],
    0x2329: [
        .75,
        .249,
        .447
    ],
    0x232A: [
        .75,
        .249,
        .447
    ],
    0x25B3: [
        .711,
        0,
        1.022
    ],
    0x25B5: [
        .711,
        0,
        1.022
    ],
    0x25B9: [
        .54,
        .039,
        .575
    ],
    0x25BD: [
        .5,
        .21,
        1.022
    ],
    0x25BF: [
        .5,
        .21,
        1.022
    ],
    0x25C3: [
        .539,
        .038,
        .575
    ],
    0x25EF: [
        .711,
        .211,
        1.15
    ],
    0x2660: [
        .719,
        .129,
        .894
    ],
    0x2661: [
        .711,
        .024,
        .894
    ],
    0x2662: [
        .719,
        .154,
        .894
    ],
    0x2663: [
        .719,
        .129,
        .894
    ],
    0x266D: [
        .75,
        .017,
        .447
    ],
    0x266E: [
        .741,
        .223,
        .447
    ],
    0x266F: [
        .724,
        .224,
        .447
    ],
    0x2758: [
        .75,
        .249,
        .319
    ],
    0x27E8: [
        .75,
        .249,
        .447
    ],
    0x27E9: [
        .75,
        .249,
        .447
    ],
    0x27F5: [
        .518,
        .017,
        1.805
    ],
    0x27F6: [
        .518,
        .017,
        1.833
    ],
    0x27F7: [
        .518,
        .017,
        2.126
    ],
    0x27F8: [
        .547,
        .046,
        1.868
    ],
    0x27F9: [
        .547,
        .046,
        1.87
    ],
    0x27FA: [
        .547,
        .046,
        2.126
    ],
    0x27FC: [
        .518,
        .017,
        1.833
    ],
    0x29F8: [
        .711,
        .21,
        .894
    ],
    0x2A2F: [
        .53,
        .028,
        .894
    ],
    0x2A3F: [
        .686,
        0,
        .9
    ],
    0x2AAF: [
        .696,
        .199,
        .894
    ],
    0x2AB0: [
        .697,
        .199,
        .894
    ],
    0x3008: [
        .75,
        .249,
        .447
    ],
    0x3009: [
        .75,
        .249,
        .447
    ]
}; //# sourceMappingURL=bold.js.map
}}),
"[project]/node_modules/mathjax-full/js/output/common/fonts/tex/double-struck.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.doubleStruck = void 0;
exports.doubleStruck = {}; //# sourceMappingURL=double-struck.js.map
}}),
"[project]/node_modules/mathjax-full/js/output/common/fonts/tex/fraktur-bold.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.frakturBold = void 0;
exports.frakturBold = {
    0x21: [
        .689,
        .012,
        .349
    ],
    0x22: [
        .695,
        -0.432,
        .254
    ],
    0x26: [
        .696,
        .016,
        .871
    ],
    0x27: [
        .695,
        -0.436,
        .25
    ],
    0x28: [
        .737,
        .186,
        .459
    ],
    0x29: [
        .735,
        .187,
        .459
    ],
    0x2A: [
        .692,
        -0.449,
        .328
    ],
    0x2B: [
        .598,
        .082,
        .893
    ],
    0x2C: [
        .107,
        .191,
        .328
    ],
    0x2D: [
        .275,
        -0.236,
        .893
    ],
    0x2E: [
        .102,
        .015,
        .328
    ],
    0x2F: [
        .721,
        .182,
        .593
    ],
    0x30: [
        .501,
        .012,
        .593
    ],
    0x31: [
        .489,
        0,
        .593
    ],
    0x32: [
        .491,
        0,
        .593
    ],
    0x33: [
        .487,
        .193,
        .593
    ],
    0x34: [
        .495,
        .196,
        .593
    ],
    0x35: [
        .481,
        .19,
        .593
    ],
    0x36: [
        .704,
        .012,
        .593
    ],
    0x37: [
        .479,
        .197,
        .593
    ],
    0x38: [
        .714,
        .005,
        .593
    ],
    0x39: [
        .487,
        .195,
        .593
    ],
    0x3A: [
        .457,
        .012,
        .255
    ],
    0x3B: [
        .458,
        .19,
        .255
    ],
    0x3D: [
        .343,
        -0.168,
        .582
    ],
    0x3F: [
        .697,
        .014,
        .428
    ],
    0x5B: [
        .74,
        .13,
        .257
    ],
    0x5D: [
        .738,
        .132,
        .257
    ],
    0x5E: [
        .734,
        -0.452,
        .59
    ],
    0x2018: [
        .708,
        -0.411,
        .254
    ],
    0x2019: [
        .692,
        -0.394,
        .254
    ],
    0x2044: [
        .721,
        .182,
        .593
    ],
    0xE301: [
        .63,
        .027,
        .587
    ],
    0xE302: [
        .693,
        .212,
        .394,
        {
            ic: .014
        }
    ],
    0xE303: [
        .681,
        .219,
        .387
    ],
    0xE304: [
        .473,
        .212,
        .593
    ],
    0xE305: [
        .684,
        .027,
        .393
    ],
    0xE308: [
        .679,
        .22,
        .981
    ],
    0xE309: [
        .717,
        .137,
        .727
    ]
}; //# sourceMappingURL=fraktur-bold.js.map
}}),
"[project]/node_modules/mathjax-full/js/output/common/fonts/tex/fraktur.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.fraktur = void 0;
exports.fraktur = {
    0x21: [
        .689,
        .012,
        .296
    ],
    0x22: [
        .695,
        -0.432,
        .215
    ],
    0x26: [
        .698,
        .011,
        .738
    ],
    0x27: [
        .695,
        -0.436,
        .212
    ],
    0x28: [
        .737,
        .186,
        .389
    ],
    0x29: [
        .735,
        .187,
        .389
    ],
    0x2A: [
        .692,
        -0.449,
        .278
    ],
    0x2B: [
        .598,
        .082,
        .756
    ],
    0x2C: [
        .107,
        .191,
        .278
    ],
    0x2D: [
        .275,
        -0.236,
        .756
    ],
    0x2E: [
        .102,
        .015,
        .278
    ],
    0x2F: [
        .721,
        .182,
        .502
    ],
    0x30: [
        .492,
        .013,
        .502
    ],
    0x31: [
        .468,
        0,
        .502
    ],
    0x32: [
        .474,
        0,
        .502
    ],
    0x33: [
        .473,
        .182,
        .502
    ],
    0x34: [
        .476,
        .191,
        .502
    ],
    0x35: [
        .458,
        .184,
        .502
    ],
    0x36: [
        .7,
        .013,
        .502
    ],
    0x37: [
        .468,
        .181,
        .502
    ],
    0x38: [
        .705,
        .01,
        .502
    ],
    0x39: [
        .469,
        .182,
        .502
    ],
    0x3A: [
        .457,
        .012,
        .216
    ],
    0x3B: [
        .458,
        .189,
        .216
    ],
    0x3D: [
        .368,
        -0.132,
        .756
    ],
    0x3F: [
        .693,
        .011,
        .362
    ],
    0x5B: [
        .74,
        .13,
        .278
    ],
    0x5D: [
        .738,
        .131,
        .278
    ],
    0x5E: [
        .734,
        -0.452,
        .5
    ],
    0x2018: [
        .708,
        -0.41,
        .215
    ],
    0x2019: [
        .692,
        -0.395,
        .215
    ],
    0x2044: [
        .721,
        .182,
        .502
    ],
    0xE300: [
        .683,
        .032,
        .497
    ],
    0xE301: [
        .616,
        .03,
        .498
    ],
    0xE302: [
        .68,
        .215,
        .333
    ],
    0xE303: [
        .679,
        .224,
        .329
    ],
    0xE304: [
        .471,
        .214,
        .503
    ],
    0xE305: [
        .686,
        .02,
        .333
    ],
    0xE306: [
        .577,
        .021,
        .334,
        {
            ic: .013
        }
    ],
    0xE307: [
        .475,
        .022,
        .501,
        {
            ic: .013
        }
    ]
}; //# sourceMappingURL=fraktur.js.map
}}),
"[project]/node_modules/mathjax-full/js/output/common/fonts/tex/italic.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.italic = void 0;
exports.italic = {
    0x21: [
        .716,
        0,
        .307,
        {
            ic: .073
        }
    ],
    0x22: [
        .694,
        -0.379,
        .514,
        {
            ic: .024
        }
    ],
    0x23: [
        .694,
        .194,
        .818,
        {
            ic: .01
        }
    ],
    0x25: [
        .75,
        .056,
        .818,
        {
            ic: .029
        }
    ],
    0x26: [
        .716,
        .022,
        .767,
        {
            ic: .035
        }
    ],
    0x27: [
        .694,
        -0.379,
        .307,
        {
            ic: .07
        }
    ],
    0x28: [
        .75,
        .25,
        .409,
        {
            ic: .108
        }
    ],
    0x29: [
        .75,
        .25,
        .409
    ],
    0x2A: [
        .75,
        -0.32,
        .511,
        {
            ic: .073
        }
    ],
    0x2B: [
        .557,
        .057,
        .767
    ],
    0x2C: [
        .121,
        .194,
        .307
    ],
    0x2D: [
        .251,
        -0.18,
        .358
    ],
    0x2E: [
        .121,
        0,
        .307
    ],
    0x2F: [
        .716,
        .215,
        .778
    ],
    0x30: [
        .665,
        .021,
        .511,
        {
            ic: .051
        }
    ],
    0x31: [
        .666,
        0,
        .511
    ],
    0x32: [
        .666,
        .022,
        .511,
        {
            ic: .04
        }
    ],
    0x33: [
        .666,
        .022,
        .511,
        {
            ic: .051
        }
    ],
    0x34: [
        .666,
        .194,
        .511
    ],
    0x35: [
        .666,
        .022,
        .511,
        {
            ic: .056
        }
    ],
    0x36: [
        .665,
        .022,
        .511,
        {
            ic: .054
        }
    ],
    0x37: [
        .666,
        .022,
        .511,
        {
            ic: .123
        }
    ],
    0x38: [
        .666,
        .021,
        .511,
        {
            ic: .042
        }
    ],
    0x39: [
        .666,
        .022,
        .511,
        {
            ic: .042
        }
    ],
    0x3A: [
        .431,
        0,
        .307
    ],
    0x3B: [
        .431,
        .194,
        .307
    ],
    0x3D: [
        .367,
        -0.133,
        .767
    ],
    0x3F: [
        .716,
        0,
        .511,
        {
            ic: .04
        }
    ],
    0x40: [
        .705,
        .011,
        .767,
        {
            ic: .022
        }
    ],
    0x5B: [
        .75,
        .25,
        .307,
        {
            ic: .139
        }
    ],
    0x5D: [
        .75,
        .25,
        .307,
        {
            ic: .052
        }
    ],
    0x5E: [
        .694,
        -0.527,
        .511,
        {
            ic: .017
        }
    ],
    0x5F: [
        -0.025,
        .062,
        .511,
        {
            ic: .043
        }
    ],
    0x7E: [
        .318,
        -0.208,
        .511,
        {
            ic: .06
        }
    ],
    0x131: [
        .441,
        .01,
        .307,
        {
            ic: .033
        }
    ],
    0x237: [
        .442,
        .204,
        .332
    ],
    0x300: [
        .697,
        -0.5,
        0
    ],
    0x301: [
        .697,
        -0.5,
        0,
        {
            ic: .039
        }
    ],
    0x302: [
        .694,
        -0.527,
        0,
        {
            ic: .017
        }
    ],
    0x303: [
        .668,
        -0.558,
        0,
        {
            ic: .06
        }
    ],
    0x304: [
        .589,
        -0.544,
        0,
        {
            ic: .054
        }
    ],
    0x306: [
        .694,
        -0.515,
        0,
        {
            ic: .062
        }
    ],
    0x307: [
        .669,
        -0.548,
        0
    ],
    0x308: [
        .669,
        -0.554,
        0,
        {
            ic: .045
        }
    ],
    0x30A: [
        .716,
        -0.542,
        0
    ],
    0x30B: [
        .697,
        -0.503,
        0,
        {
            ic: .065
        }
    ],
    0x30C: [
        .638,
        -0.502,
        0,
        {
            ic: .029
        }
    ],
    0x3DD: [
        .605,
        .085,
        .778
    ],
    0x2013: [
        .285,
        -0.248,
        .511,
        {
            ic: .043
        }
    ],
    0x2014: [
        .285,
        -0.248,
        1.022,
        {
            ic: .016
        }
    ],
    0x2015: [
        .285,
        -0.248,
        1.022,
        {
            ic: .016
        }
    ],
    0x2017: [
        -0.025,
        .062,
        .511,
        {
            ic: .043
        }
    ],
    0x2018: [
        .694,
        -0.379,
        .307,
        {
            ic: .055
        }
    ],
    0x2019: [
        .694,
        -0.379,
        .307,
        {
            ic: .07
        }
    ],
    0x201C: [
        .694,
        -0.379,
        .514,
        {
            ic: .092
        }
    ],
    0x201D: [
        .694,
        -0.379,
        .514,
        {
            ic: .024
        }
    ],
    0x2044: [
        .716,
        .215,
        .778
    ],
    0x210F: [
        .695,
        .013,
        .54,
        {
            ic: .022
        }
    ],
    0x2206: [
        .716,
        0,
        .833,
        {
            sk: .167
        }
    ],
    0x29F8: [
        .716,
        .215,
        .778
    ]
}; //# sourceMappingURL=italic.js.map
}}),
"[project]/node_modules/mathjax-full/js/output/common/fonts/tex/largeop.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.largeop = void 0;
exports.largeop = {
    0x28: [
        1.15,
        .649,
        .597
    ],
    0x29: [
        1.15,
        .649,
        .597
    ],
    0x2F: [
        1.15,
        .649,
        .811
    ],
    0x5B: [
        1.15,
        .649,
        .472
    ],
    0x5C: [
        1.15,
        .649,
        .811
    ],
    0x5D: [
        1.15,
        .649,
        .472
    ],
    0x7B: [
        1.15,
        .649,
        .667
    ],
    0x7D: [
        1.15,
        .649,
        .667
    ],
    0x2C6: [
        .772,
        -0.565,
        1
    ],
    0x2DC: [
        .75,
        -0.611,
        1
    ],
    0x302: [
        .772,
        -0.565,
        0
    ],
    0x303: [
        .75,
        -0.611,
        0
    ],
    0x2016: [
        .602,
        0,
        .778
    ],
    0x2044: [
        1.15,
        .649,
        .811
    ],
    0x2191: [
        .6,
        0,
        .667
    ],
    0x2193: [
        .6,
        0,
        .667
    ],
    0x21D1: [
        .599,
        0,
        .778
    ],
    0x21D3: [
        .6,
        0,
        .778
    ],
    0x220F: [
        .95,
        .45,
        1.278
    ],
    0x2210: [
        .95,
        .45,
        1.278
    ],
    0x2211: [
        .95,
        .45,
        1.444
    ],
    0x221A: [
        1.15,
        .65,
        1,
        {
            ic: .02
        }
    ],
    0x2223: [
        .627,
        .015,
        .333
    ],
    0x2225: [
        .627,
        .015,
        .556
    ],
    0x222B: [
        1.36,
        .862,
        .556,
        {
            ic: .388
        }
    ],
    0x222C: [
        1.36,
        .862,
        1.084,
        {
            ic: .388
        }
    ],
    0x222D: [
        1.36,
        .862,
        1.592,
        {
            ic: .388
        }
    ],
    0x222E: [
        1.36,
        .862,
        .556,
        {
            ic: .388
        }
    ],
    0x22C0: [
        .95,
        .45,
        1.111
    ],
    0x22C1: [
        .95,
        .45,
        1.111
    ],
    0x22C2: [
        .949,
        .45,
        1.111
    ],
    0x22C3: [
        .95,
        .449,
        1.111
    ],
    0x2308: [
        1.15,
        .649,
        .528
    ],
    0x2309: [
        1.15,
        .649,
        .528
    ],
    0x230A: [
        1.15,
        .649,
        .528
    ],
    0x230B: [
        1.15,
        .649,
        .528
    ],
    0x2329: [
        1.15,
        .649,
        .611
    ],
    0x232A: [
        1.15,
        .649,
        .611
    ],
    0x23D0: [
        .602,
        0,
        .667
    ],
    0x2758: [
        .627,
        .015,
        .333
    ],
    0x27E8: [
        1.15,
        .649,
        .611
    ],
    0x27E9: [
        1.15,
        .649,
        .611
    ],
    0x2A00: [
        .949,
        .449,
        1.511
    ],
    0x2A01: [
        .949,
        .449,
        1.511
    ],
    0x2A02: [
        .949,
        .449,
        1.511
    ],
    0x2A04: [
        .95,
        .449,
        1.111
    ],
    0x2A06: [
        .95,
        .45,
        1.111
    ],
    0x2A0C: [
        1.36,
        .862,
        2.168,
        {
            ic: .388
        }
    ],
    0x3008: [
        1.15,
        .649,
        .611
    ],
    0x3009: [
        1.15,
        .649,
        .611
    ]
}; //# sourceMappingURL=largeop.js.map
}}),
"[project]/node_modules/mathjax-full/js/output/common/fonts/tex/monospace.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.monospace = void 0;
exports.monospace = {
    0x20: [
        0,
        0,
        .525
    ],
    0x21: [
        .622,
        0,
        .525
    ],
    0x22: [
        .623,
        -0.333,
        .525
    ],
    0x23: [
        .611,
        0,
        .525
    ],
    0x24: [
        .694,
        .082,
        .525
    ],
    0x25: [
        .694,
        .083,
        .525
    ],
    0x26: [
        .622,
        .011,
        .525
    ],
    0x27: [
        .611,
        -0.287,
        .525
    ],
    0x28: [
        .694,
        .082,
        .525
    ],
    0x29: [
        .694,
        .082,
        .525
    ],
    0x2A: [
        .52,
        -0.09,
        .525
    ],
    0x2B: [
        .531,
        -0.081,
        .525
    ],
    0x2C: [
        .14,
        .139,
        .525
    ],
    0x2D: [
        .341,
        -0.271,
        .525
    ],
    0x2E: [
        .14,
        0,
        .525
    ],
    0x2F: [
        .694,
        .083,
        .525
    ],
    0x3A: [
        .431,
        0,
        .525
    ],
    0x3B: [
        .431,
        .139,
        .525
    ],
    0x3C: [
        .557,
        -0.055,
        .525
    ],
    0x3D: [
        .417,
        -0.195,
        .525
    ],
    0x3E: [
        .557,
        -0.055,
        .525
    ],
    0x3F: [
        .617,
        0,
        .525
    ],
    0x40: [
        .617,
        .006,
        .525
    ],
    0x5B: [
        .694,
        .082,
        .525
    ],
    0x5C: [
        .694,
        .083,
        .525
    ],
    0x5D: [
        .694,
        .082,
        .525
    ],
    0x5E: [
        .611,
        -0.46,
        .525
    ],
    0x5F: [
        -0.025,
        .095,
        .525
    ],
    0x60: [
        .681,
        -0.357,
        .525
    ],
    0x7B: [
        .694,
        .083,
        .525
    ],
    0x7C: [
        .694,
        .082,
        .525
    ],
    0x7D: [
        .694,
        .083,
        .525
    ],
    0x7E: [
        .611,
        -0.466,
        .525
    ],
    0x7F: [
        .612,
        -0.519,
        .525
    ],
    0xA0: [
        0,
        0,
        .525
    ],
    0x131: [
        .431,
        0,
        .525
    ],
    0x237: [
        .431,
        .228,
        .525
    ],
    0x2B9: [
        .623,
        -0.334,
        .525
    ],
    0x300: [
        .611,
        -0.485,
        0
    ],
    0x301: [
        .611,
        -0.485,
        0
    ],
    0x302: [
        .611,
        -0.46,
        0
    ],
    0x303: [
        .611,
        -0.466,
        0
    ],
    0x304: [
        .577,
        -0.5,
        0
    ],
    0x306: [
        .611,
        -0.504,
        0
    ],
    0x308: [
        .612,
        -0.519,
        0
    ],
    0x30A: [
        .619,
        -0.499,
        0
    ],
    0x30C: [
        .577,
        -0.449,
        0
    ],
    0x391: [
        .623,
        0,
        .525
    ],
    0x392: [
        .611,
        0,
        .525
    ],
    0x393: [
        .611,
        0,
        .525
    ],
    0x394: [
        .623,
        0,
        .525
    ],
    0x395: [
        .611,
        0,
        .525
    ],
    0x396: [
        .611,
        0,
        .525
    ],
    0x397: [
        .611,
        0,
        .525
    ],
    0x398: [
        .621,
        .01,
        .525
    ],
    0x399: [
        .611,
        0,
        .525
    ],
    0x39A: [
        .611,
        0,
        .525
    ],
    0x39B: [
        .623,
        0,
        .525
    ],
    0x39C: [
        .611,
        0,
        .525
    ],
    0x39D: [
        .611,
        0,
        .525
    ],
    0x39E: [
        .611,
        0,
        .525
    ],
    0x39F: [
        .621,
        .01,
        .525
    ],
    0x3A0: [
        .611,
        0,
        .525
    ],
    0x3A1: [
        .611,
        0,
        .525
    ],
    0x3A3: [
        .611,
        0,
        .525
    ],
    0x3A4: [
        .611,
        0,
        .525
    ],
    0x3A5: [
        .622,
        0,
        .525
    ],
    0x3A6: [
        .611,
        0,
        .525
    ],
    0x3A7: [
        .611,
        0,
        .525
    ],
    0x3A8: [
        .611,
        0,
        .525
    ],
    0x3A9: [
        .622,
        0,
        .525
    ],
    0x2017: [
        -0.025,
        .095,
        .525
    ],
    0x2032: [
        .623,
        -0.334,
        .525
    ],
    0x2033: [
        .623,
        0,
        1.05
    ],
    0x2034: [
        .623,
        0,
        1.575
    ],
    0x2044: [
        .694,
        .083,
        .525
    ],
    0x2057: [
        .623,
        0,
        2.1
    ],
    0x2206: [
        .623,
        0,
        .525
    ]
}; //# sourceMappingURL=monospace.js.map
}}),
"[project]/node_modules/mathjax-full/js/output/common/fonts/tex/normal.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.normal = void 0;
exports.normal = {
    0x20: [
        0,
        0,
        .25
    ],
    0x21: [
        .716,
        0,
        .278
    ],
    0x22: [
        .694,
        -0.379,
        .5
    ],
    0x23: [
        .694,
        .194,
        .833
    ],
    0x24: [
        .75,
        .056,
        .5
    ],
    0x25: [
        .75,
        .056,
        .833
    ],
    0x26: [
        .716,
        .022,
        .778
    ],
    0x27: [
        .694,
        -0.379,
        .278
    ],
    0x28: [
        .75,
        .25,
        .389
    ],
    0x29: [
        .75,
        .25,
        .389
    ],
    0x2A: [
        .75,
        -0.32,
        .5
    ],
    0x2B: [
        .583,
        .082,
        .778
    ],
    0x2C: [
        .121,
        .194,
        .278
    ],
    0x2D: [
        .252,
        -0.179,
        .333
    ],
    0x2E: [
        .12,
        0,
        .278
    ],
    0x2F: [
        .75,
        .25,
        .5
    ],
    0x30: [
        .666,
        .022,
        .5
    ],
    0x31: [
        .666,
        0,
        .5
    ],
    0x32: [
        .666,
        0,
        .5
    ],
    0x33: [
        .665,
        .022,
        .5
    ],
    0x34: [
        .677,
        0,
        .5
    ],
    0x35: [
        .666,
        .022,
        .5
    ],
    0x36: [
        .666,
        .022,
        .5
    ],
    0x37: [
        .676,
        .022,
        .5
    ],
    0x38: [
        .666,
        .022,
        .5
    ],
    0x39: [
        .666,
        .022,
        .5
    ],
    0x3A: [
        .43,
        0,
        .278
    ],
    0x3B: [
        .43,
        .194,
        .278
    ],
    0x3C: [
        .54,
        .04,
        .778
    ],
    0x3D: [
        .583,
        .082,
        .778
    ],
    0x3E: [
        .54,
        .04,
        .778
    ],
    0x3F: [
        .705,
        0,
        .472
    ],
    0x40: [
        .705,
        .011,
        .778
    ],
    0x41: [
        .716,
        0,
        .75
    ],
    0x42: [
        .683,
        0,
        .708
    ],
    0x43: [
        .705,
        .021,
        .722
    ],
    0x44: [
        .683,
        0,
        .764
    ],
    0x45: [
        .68,
        0,
        .681
    ],
    0x46: [
        .68,
        0,
        .653
    ],
    0x47: [
        .705,
        .022,
        .785
    ],
    0x48: [
        .683,
        0,
        .75
    ],
    0x49: [
        .683,
        0,
        .361
    ],
    0x4A: [
        .683,
        .022,
        .514
    ],
    0x4B: [
        .683,
        0,
        .778
    ],
    0x4C: [
        .683,
        0,
        .625
    ],
    0x4D: [
        .683,
        0,
        .917
    ],
    0x4E: [
        .683,
        0,
        .75
    ],
    0x4F: [
        .705,
        .022,
        .778
    ],
    0x50: [
        .683,
        0,
        .681
    ],
    0x51: [
        .705,
        .193,
        .778
    ],
    0x52: [
        .683,
        .022,
        .736
    ],
    0x53: [
        .705,
        .022,
        .556
    ],
    0x54: [
        .677,
        0,
        .722
    ],
    0x55: [
        .683,
        .022,
        .75
    ],
    0x56: [
        .683,
        .022,
        .75
    ],
    0x57: [
        .683,
        .022,
        1.028
    ],
    0x58: [
        .683,
        0,
        .75
    ],
    0x59: [
        .683,
        0,
        .75
    ],
    0x5A: [
        .683,
        0,
        .611
    ],
    0x5B: [
        .75,
        .25,
        .278
    ],
    0x5C: [
        .75,
        .25,
        .5
    ],
    0x5D: [
        .75,
        .25,
        .278
    ],
    0x5E: [
        .694,
        -0.531,
        .5
    ],
    0x5F: [
        -0.025,
        .062,
        .5
    ],
    0x60: [
        .699,
        -0.505,
        .5
    ],
    0x61: [
        .448,
        .011,
        .5
    ],
    0x62: [
        .694,
        .011,
        .556
    ],
    0x63: [
        .448,
        .011,
        .444
    ],
    0x64: [
        .694,
        .011,
        .556
    ],
    0x65: [
        .448,
        .011,
        .444
    ],
    0x66: [
        .705,
        0,
        .306,
        {
            ic: .066
        }
    ],
    0x67: [
        .453,
        .206,
        .5
    ],
    0x68: [
        .694,
        0,
        .556
    ],
    0x69: [
        .669,
        0,
        .278
    ],
    0x6A: [
        .669,
        .205,
        .306
    ],
    0x6B: [
        .694,
        0,
        .528
    ],
    0x6C: [
        .694,
        0,
        .278
    ],
    0x6D: [
        .442,
        0,
        .833
    ],
    0x6E: [
        .442,
        0,
        .556
    ],
    0x6F: [
        .448,
        .01,
        .5
    ],
    0x70: [
        .442,
        .194,
        .556
    ],
    0x71: [
        .442,
        .194,
        .528
    ],
    0x72: [
        .442,
        0,
        .392
    ],
    0x73: [
        .448,
        .011,
        .394
    ],
    0x74: [
        .615,
        .01,
        .389
    ],
    0x75: [
        .442,
        .011,
        .556
    ],
    0x76: [
        .431,
        .011,
        .528
    ],
    0x77: [
        .431,
        .011,
        .722
    ],
    0x78: [
        .431,
        0,
        .528
    ],
    0x79: [
        .431,
        .204,
        .528
    ],
    0x7A: [
        .431,
        0,
        .444
    ],
    0x7B: [
        .75,
        .25,
        .5
    ],
    0x7C: [
        .75,
        .249,
        .278
    ],
    0x7D: [
        .75,
        .25,
        .5
    ],
    0x7E: [
        .318,
        -0.215,
        .5
    ],
    0xA0: [
        0,
        0,
        .25
    ],
    0xA3: [
        .714,
        .011,
        .769
    ],
    0xA5: [
        .683,
        0,
        .75
    ],
    0xA8: [
        .669,
        -0.554,
        .5
    ],
    0xAC: [
        .356,
        -0.089,
        .667
    ],
    0xAE: [
        .709,
        .175,
        .947
    ],
    0xAF: [
        .59,
        -0.544,
        .5
    ],
    0xB0: [
        .715,
        -0.542,
        .5
    ],
    0xB1: [
        .666,
        0,
        .778
    ],
    0xB4: [
        .699,
        -0.505,
        .5
    ],
    0xB7: [
        .31,
        -0.19,
        .278
    ],
    0xD7: [
        .491,
        -0.009,
        .778
    ],
    0xF0: [
        .749,
        .021,
        .556
    ],
    0xF7: [
        .537,
        .036,
        .778
    ],
    0x131: [
        .442,
        0,
        .278,
        {
            sk: .0278
        }
    ],
    0x237: [
        .442,
        .205,
        .306,
        {
            sk: .0833
        }
    ],
    0x2B9: [
        .56,
        -0.043,
        .275
    ],
    0x2C6: [
        .694,
        -0.531,
        .5
    ],
    0x2C7: [
        .644,
        -0.513,
        .5
    ],
    0x2C9: [
        .59,
        -0.544,
        .5
    ],
    0x2CA: [
        .699,
        -0.505,
        .5
    ],
    0x2CB: [
        .699,
        -0.505,
        .5
    ],
    0x2D8: [
        .694,
        -0.515,
        .5
    ],
    0x2D9: [
        .669,
        -0.549,
        .5
    ],
    0x2DA: [
        .715,
        -0.542,
        .5
    ],
    0x2DC: [
        .668,
        -0.565,
        .5
    ],
    0x300: [
        .699,
        -0.505,
        0
    ],
    0x301: [
        .699,
        -0.505,
        0
    ],
    0x302: [
        .694,
        -0.531,
        0
    ],
    0x303: [
        .668,
        -0.565,
        0
    ],
    0x304: [
        .59,
        -0.544,
        0
    ],
    0x306: [
        .694,
        -0.515,
        0
    ],
    0x307: [
        .669,
        -0.549,
        0
    ],
    0x308: [
        .669,
        -0.554,
        0
    ],
    0x30A: [
        .715,
        -0.542,
        0
    ],
    0x30B: [
        .701,
        -0.51,
        0
    ],
    0x30C: [
        .644,
        -0.513,
        0
    ],
    0x338: [
        .716,
        .215,
        0
    ],
    0x391: [
        .716,
        0,
        .75
    ],
    0x392: [
        .683,
        0,
        .708
    ],
    0x393: [
        .68,
        0,
        .625
    ],
    0x394: [
        .716,
        0,
        .833
    ],
    0x395: [
        .68,
        0,
        .681
    ],
    0x396: [
        .683,
        0,
        .611
    ],
    0x397: [
        .683,
        0,
        .75
    ],
    0x398: [
        .705,
        .022,
        .778
    ],
    0x399: [
        .683,
        0,
        .361
    ],
    0x39A: [
        .683,
        0,
        .778
    ],
    0x39B: [
        .716,
        0,
        .694
    ],
    0x39C: [
        .683,
        0,
        .917
    ],
    0x39D: [
        .683,
        0,
        .75
    ],
    0x39E: [
        .677,
        0,
        .667
    ],
    0x39F: [
        .705,
        .022,
        .778
    ],
    0x3A0: [
        .68,
        0,
        .75
    ],
    0x3A1: [
        .683,
        0,
        .681
    ],
    0x3A3: [
        .683,
        0,
        .722
    ],
    0x3A4: [
        .677,
        0,
        .722
    ],
    0x3A5: [
        .705,
        0,
        .778
    ],
    0x3A6: [
        .683,
        0,
        .722
    ],
    0x3A7: [
        .683,
        0,
        .75
    ],
    0x3A8: [
        .683,
        0,
        .778
    ],
    0x3A9: [
        .704,
        0,
        .722
    ],
    0x2000: [
        0,
        0,
        .5
    ],
    0x2001: [
        0,
        0,
        1
    ],
    0x2002: [
        0,
        0,
        .5
    ],
    0x2003: [
        0,
        0,
        1
    ],
    0x2004: [
        0,
        0,
        .333
    ],
    0x2005: [
        0,
        0,
        .25
    ],
    0x2006: [
        0,
        0,
        .167
    ],
    0x2009: [
        0,
        0,
        .167
    ],
    0x200A: [
        0,
        0,
        .1
    ],
    0x200B: [
        0,
        0,
        0
    ],
    0x200C: [
        0,
        0,
        0
    ],
    0x2013: [
        .285,
        -0.248,
        .5
    ],
    0x2014: [
        .285,
        -0.248,
        1
    ],
    0x2015: [
        .285,
        -0.248,
        1
    ],
    0x2016: [
        .75,
        .25,
        .5
    ],
    0x2017: [
        -0.025,
        .062,
        .5
    ],
    0x2018: [
        .694,
        -0.379,
        .278
    ],
    0x2019: [
        .694,
        -0.379,
        .278
    ],
    0x201C: [
        .694,
        -0.379,
        .5
    ],
    0x201D: [
        .694,
        -0.379,
        .5
    ],
    0x2020: [
        .705,
        .216,
        .444
    ],
    0x2021: [
        .705,
        .205,
        .444
    ],
    0x2022: [
        .444,
        -0.055,
        .5
    ],
    0x2026: [
        .12,
        0,
        1.172
    ],
    0x2032: [
        .56,
        -0.043,
        .275
    ],
    0x2033: [
        .56,
        0,
        .55
    ],
    0x2034: [
        .56,
        0,
        .825
    ],
    0x2035: [
        .56,
        -0.043,
        .275
    ],
    0x2036: [
        .56,
        0,
        .55
    ],
    0x2037: [
        .56,
        0,
        .825
    ],
    0x203E: [
        .59,
        -0.544,
        .5
    ],
    0x2044: [
        .75,
        .25,
        .5
    ],
    0x2057: [
        .56,
        0,
        1.1
    ],
    0x2060: [
        0,
        0,
        0
    ],
    0x2061: [
        0,
        0,
        0
    ],
    0x2062: [
        0,
        0,
        0
    ],
    0x2063: [
        0,
        0,
        0
    ],
    0x2064: [
        0,
        0,
        0
    ],
    0x20D7: [
        .714,
        -0.516,
        .5
    ],
    0x2102: [
        .702,
        .019,
        .722
    ],
    0x210B: [
        .717,
        .036,
        .969,
        {
            ic: .272,
            sk: .333
        }
    ],
    0x210C: [
        .666,
        .133,
        .72
    ],
    0x210D: [
        .683,
        0,
        .778
    ],
    0x210E: [
        .694,
        .011,
        .576,
        {
            sk: -0.0278
        }
    ],
    0x210F: [
        .695,
        .013,
        .54,
        {
            ic: .022
        }
    ],
    0x2110: [
        .717,
        .017,
        .809,
        {
            ic: .137,
            sk: .333
        }
    ],
    0x2111: [
        .686,
        .026,
        .554
    ],
    0x2112: [
        .717,
        .017,
        .874,
        {
            ic: .161,
            sk: .306
        }
    ],
    0x2113: [
        .705,
        .02,
        .417,
        {
            sk: .111
        }
    ],
    0x2115: [
        .683,
        .02,
        .722
    ],
    0x2118: [
        .453,
        .216,
        .636,
        {
            sk: .111
        }
    ],
    0x2119: [
        .683,
        0,
        .611
    ],
    0x211A: [
        .701,
        .181,
        .778
    ],
    0x211B: [
        .717,
        .017,
        .85,
        {
            ic: .037,
            sk: .194
        }
    ],
    0x211C: [
        .686,
        .026,
        .828
    ],
    0x211D: [
        .683,
        0,
        .722
    ],
    0x2124: [
        .683,
        0,
        .667
    ],
    0x2126: [
        .704,
        0,
        .722
    ],
    0x2127: [
        .684,
        .022,
        .722
    ],
    0x2128: [
        .729,
        .139,
        .602
    ],
    0x212C: [
        .708,
        .028,
        .908,
        {
            ic: .02,
            sk: .194
        }
    ],
    0x212D: [
        .685,
        .024,
        .613
    ],
    0x2130: [
        .707,
        .008,
        .562,
        {
            ic: .156,
            sk: .139
        }
    ],
    0x2131: [
        .735,
        .036,
        .895,
        {
            ic: .095,
            sk: .222
        }
    ],
    0x2132: [
        .695,
        0,
        .556
    ],
    0x2133: [
        .721,
        .05,
        1.08,
        {
            ic: .136,
            sk: .444
        }
    ],
    0x2135: [
        .694,
        0,
        .611
    ],
    0x2136: [
        .763,
        .021,
        .667,
        {
            ic: .02
        }
    ],
    0x2137: [
        .764,
        .043,
        .444
    ],
    0x2138: [
        .764,
        .043,
        .667
    ],
    0x2141: [
        .705,
        .023,
        .639
    ],
    0x2190: [
        .511,
        .011,
        1
    ],
    0x2191: [
        .694,
        .193,
        .5
    ],
    0x2192: [
        .511,
        .011,
        1
    ],
    0x2193: [
        .694,
        .194,
        .5
    ],
    0x2194: [
        .511,
        .011,
        1
    ],
    0x2195: [
        .772,
        .272,
        .5
    ],
    0x2196: [
        .72,
        .195,
        1
    ],
    0x2197: [
        .72,
        .195,
        1
    ],
    0x2198: [
        .695,
        .22,
        1
    ],
    0x2199: [
        .695,
        .22,
        1
    ],
    0x219A: [
        .437,
        -0.06,
        1
    ],
    0x219B: [
        .437,
        -0.06,
        1
    ],
    0x219E: [
        .417,
        -0.083,
        1
    ],
    0x21A0: [
        .417,
        -0.083,
        1
    ],
    0x21A2: [
        .417,
        -0.083,
        1.111
    ],
    0x21A3: [
        .417,
        -0.083,
        1.111
    ],
    0x21A6: [
        .511,
        .011,
        1
    ],
    0x21A9: [
        .511,
        .011,
        1.126
    ],
    0x21AA: [
        .511,
        .011,
        1.126
    ],
    0x21AB: [
        .575,
        .041,
        1
    ],
    0x21AC: [
        .575,
        .041,
        1
    ],
    0x21AD: [
        .417,
        -0.083,
        1.389
    ],
    0x21AE: [
        .437,
        -0.06,
        1
    ],
    0x21B0: [
        .722,
        0,
        .5
    ],
    0x21B1: [
        .722,
        0,
        .5
    ],
    0x21B6: [
        .461,
        0,
        1
    ],
    0x21B7: [
        .46,
        0,
        1
    ],
    0x21BA: [
        .65,
        .083,
        .778
    ],
    0x21BB: [
        .65,
        .083,
        .778
    ],
    0x21BC: [
        .511,
        -0.23,
        1
    ],
    0x21BD: [
        .27,
        .011,
        1
    ],
    0x21BE: [
        .694,
        .194,
        .417
    ],
    0x21BF: [
        .694,
        .194,
        .417
    ],
    0x21C0: [
        .511,
        -0.23,
        1
    ],
    0x21C1: [
        .27,
        .011,
        1
    ],
    0x21C2: [
        .694,
        .194,
        .417
    ],
    0x21C3: [
        .694,
        .194,
        .417
    ],
    0x21C4: [
        .667,
        0,
        1
    ],
    0x21C6: [
        .667,
        0,
        1
    ],
    0x21C7: [
        .583,
        .083,
        1
    ],
    0x21C8: [
        .694,
        .193,
        .833
    ],
    0x21C9: [
        .583,
        .083,
        1
    ],
    0x21CA: [
        .694,
        .194,
        .833
    ],
    0x21CB: [
        .514,
        .014,
        1
    ],
    0x21CC: [
        .671,
        .011,
        1
    ],
    0x21CD: [
        .534,
        .035,
        1
    ],
    0x21CE: [
        .534,
        .037,
        1
    ],
    0x21CF: [
        .534,
        .035,
        1
    ],
    0x21D0: [
        .525,
        .024,
        1
    ],
    0x21D1: [
        .694,
        .194,
        .611
    ],
    0x21D2: [
        .525,
        .024,
        1
    ],
    0x21D3: [
        .694,
        .194,
        .611
    ],
    0x21D4: [
        .526,
        .025,
        1
    ],
    0x21D5: [
        .772,
        .272,
        .611
    ],
    0x21DA: [
        .611,
        .111,
        1
    ],
    0x21DB: [
        .611,
        .111,
        1
    ],
    0x21DD: [
        .417,
        -0.083,
        1
    ],
    0x21E0: [
        .437,
        -0.064,
        1.334
    ],
    0x21E2: [
        .437,
        -0.064,
        1.334
    ],
    0x2200: [
        .694,
        .022,
        .556
    ],
    0x2201: [
        .846,
        .021,
        .5
    ],
    0x2202: [
        .715,
        .022,
        .531,
        {
            ic: .035,
            sk: .0833
        }
    ],
    0x2203: [
        .694,
        0,
        .556
    ],
    0x2204: [
        .716,
        .215,
        .556
    ],
    0x2205: [
        .772,
        .078,
        .5
    ],
    0x2206: [
        .716,
        0,
        .833
    ],
    0x2207: [
        .683,
        .033,
        .833
    ],
    0x2208: [
        .54,
        .04,
        .667
    ],
    0x2209: [
        .716,
        .215,
        .667
    ],
    0x220B: [
        .54,
        .04,
        .667
    ],
    0x220C: [
        .716,
        .215,
        .667
    ],
    0x220D: [
        .44,
        0,
        .429,
        {
            ic: .027
        }
    ],
    0x220F: [
        .75,
        .25,
        .944
    ],
    0x2210: [
        .75,
        .25,
        .944
    ],
    0x2211: [
        .75,
        .25,
        1.056
    ],
    0x2212: [
        .583,
        .082,
        .778
    ],
    0x2213: [
        .5,
        .166,
        .778
    ],
    0x2214: [
        .766,
        .093,
        .778
    ],
    0x2215: [
        .75,
        .25,
        .5
    ],
    0x2216: [
        .75,
        .25,
        .5
    ],
    0x2217: [
        .465,
        -0.035,
        .5
    ],
    0x2218: [
        .444,
        -0.055,
        .5
    ],
    0x2219: [
        .444,
        -0.055,
        .5
    ],
    0x221A: [
        .8,
        .2,
        .833,
        {
            ic: .02
        }
    ],
    0x221D: [
        .442,
        .011,
        .778
    ],
    0x221E: [
        .442,
        .011,
        1
    ],
    0x2220: [
        .694,
        0,
        .722
    ],
    0x2221: [
        .714,
        .02,
        .722
    ],
    0x2222: [
        .551,
        .051,
        .722
    ],
    0x2223: [
        .75,
        .249,
        .278
    ],
    0x2224: [
        .75,
        .252,
        .278,
        {
            ic: .019
        }
    ],
    0x2225: [
        .75,
        .25,
        .5
    ],
    0x2226: [
        .75,
        .25,
        .5,
        {
            ic: .018
        }
    ],
    0x2227: [
        .598,
        .022,
        .667
    ],
    0x2228: [
        .598,
        .022,
        .667
    ],
    0x2229: [
        .598,
        .022,
        .667
    ],
    0x222A: [
        .598,
        .022,
        .667
    ],
    0x222B: [
        .716,
        .216,
        .417,
        {
            ic: .055
        }
    ],
    0x222C: [
        .805,
        .306,
        .819,
        {
            ic: .138
        }
    ],
    0x222D: [
        .805,
        .306,
        1.166,
        {
            ic: .138
        }
    ],
    0x222E: [
        .805,
        .306,
        .472,
        {
            ic: .138
        }
    ],
    0x2234: [
        .471,
        .082,
        .667
    ],
    0x2235: [
        .471,
        .082,
        .667
    ],
    0x223C: [
        .367,
        -0.133,
        .778
    ],
    0x223D: [
        .367,
        -0.133,
        .778
    ],
    0x2240: [
        .583,
        .083,
        .278
    ],
    0x2241: [
        .467,
        -0.032,
        .778
    ],
    0x2242: [
        .463,
        -0.034,
        .778
    ],
    0x2243: [
        .464,
        -0.036,
        .778
    ],
    0x2244: [
        .716,
        .215,
        .778
    ],
    0x2245: [
        .589,
        -0.022,
        .778
    ],
    0x2247: [
        .652,
        .155,
        .778
    ],
    0x2248: [
        .483,
        -0.055,
        .778
    ],
    0x2249: [
        .716,
        .215,
        .778
    ],
    0x224A: [
        .579,
        .039,
        .778
    ],
    0x224D: [
        .484,
        -0.016,
        .778
    ],
    0x224E: [
        .492,
        -0.008,
        .778
    ],
    0x224F: [
        .492,
        -0.133,
        .778
    ],
    0x2250: [
        .67,
        -0.133,
        .778
    ],
    0x2251: [
        .609,
        .108,
        .778
    ],
    0x2252: [
        .601,
        .101,
        .778
    ],
    0x2253: [
        .601,
        .102,
        .778
    ],
    0x2256: [
        .367,
        -0.133,
        .778
    ],
    0x2257: [
        .721,
        -0.133,
        .778
    ],
    0x225C: [
        .859,
        -0.133,
        .778
    ],
    0x2260: [
        .716,
        .215,
        .778
    ],
    0x2261: [
        .464,
        -0.036,
        .778
    ],
    0x2262: [
        .716,
        .215,
        .778
    ],
    0x2264: [
        .636,
        .138,
        .778
    ],
    0x2265: [
        .636,
        .138,
        .778
    ],
    0x2266: [
        .753,
        .175,
        .778
    ],
    0x2267: [
        .753,
        .175,
        .778
    ],
    0x2268: [
        .752,
        .286,
        .778
    ],
    0x2269: [
        .752,
        .286,
        .778
    ],
    0x226A: [
        .568,
        .067,
        1
    ],
    0x226B: [
        .567,
        .067,
        1
    ],
    0x226C: [
        .75,
        .25,
        .5
    ],
    0x226D: [
        .716,
        .215,
        .778
    ],
    0x226E: [
        .708,
        .209,
        .778
    ],
    0x226F: [
        .708,
        .209,
        .778
    ],
    0x2270: [
        .801,
        .303,
        .778
    ],
    0x2271: [
        .801,
        .303,
        .778
    ],
    0x2272: [
        .732,
        .228,
        .778
    ],
    0x2273: [
        .732,
        .228,
        .778
    ],
    0x2274: [
        .732,
        .228,
        .778
    ],
    0x2275: [
        .732,
        .228,
        .778
    ],
    0x2276: [
        .681,
        .253,
        .778
    ],
    0x2277: [
        .681,
        .253,
        .778
    ],
    0x2278: [
        .716,
        .253,
        .778
    ],
    0x2279: [
        .716,
        .253,
        .778
    ],
    0x227A: [
        .539,
        .041,
        .778
    ],
    0x227B: [
        .539,
        .041,
        .778
    ],
    0x227C: [
        .58,
        .153,
        .778
    ],
    0x227D: [
        .58,
        .154,
        .778
    ],
    0x227E: [
        .732,
        .228,
        .778
    ],
    0x227F: [
        .732,
        .228,
        .778
    ],
    0x2280: [
        .705,
        .208,
        .778
    ],
    0x2281: [
        .705,
        .208,
        .778
    ],
    0x2282: [
        .54,
        .04,
        .778
    ],
    0x2283: [
        .54,
        .04,
        .778
    ],
    0x2284: [
        .716,
        .215,
        .778
    ],
    0x2285: [
        .716,
        .215,
        .778
    ],
    0x2286: [
        .636,
        .138,
        .778
    ],
    0x2287: [
        .636,
        .138,
        .778
    ],
    0x2288: [
        .801,
        .303,
        .778
    ],
    0x2289: [
        .801,
        .303,
        .778
    ],
    0x228A: [
        .635,
        .241,
        .778
    ],
    0x228B: [
        .635,
        .241,
        .778
    ],
    0x228E: [
        .598,
        .022,
        .667
    ],
    0x228F: [
        .539,
        .041,
        .778
    ],
    0x2290: [
        .539,
        .041,
        .778
    ],
    0x2291: [
        .636,
        .138,
        .778
    ],
    0x2292: [
        .636,
        .138,
        .778
    ],
    0x2293: [
        .598,
        0,
        .667
    ],
    0x2294: [
        .598,
        0,
        .667
    ],
    0x2295: [
        .583,
        .083,
        .778
    ],
    0x2296: [
        .583,
        .083,
        .778
    ],
    0x2297: [
        .583,
        .083,
        .778
    ],
    0x2298: [
        .583,
        .083,
        .778
    ],
    0x2299: [
        .583,
        .083,
        .778
    ],
    0x229A: [
        .582,
        .082,
        .778
    ],
    0x229B: [
        .582,
        .082,
        .778
    ],
    0x229D: [
        .582,
        .082,
        .778
    ],
    0x229E: [
        .689,
        0,
        .778
    ],
    0x229F: [
        .689,
        0,
        .778
    ],
    0x22A0: [
        .689,
        0,
        .778
    ],
    0x22A1: [
        .689,
        0,
        .778
    ],
    0x22A2: [
        .694,
        0,
        .611
    ],
    0x22A3: [
        .694,
        0,
        .611
    ],
    0x22A4: [
        .668,
        0,
        .778
    ],
    0x22A5: [
        .668,
        0,
        .778
    ],
    0x22A8: [
        .75,
        .249,
        .867
    ],
    0x22A9: [
        .694,
        0,
        .722
    ],
    0x22AA: [
        .694,
        0,
        .889
    ],
    0x22AC: [
        .695,
        0,
        .611
    ],
    0x22AD: [
        .695,
        0,
        .611
    ],
    0x22AE: [
        .695,
        0,
        .722
    ],
    0x22AF: [
        .695,
        0,
        .722
    ],
    0x22B2: [
        .539,
        .041,
        .778
    ],
    0x22B3: [
        .539,
        .041,
        .778
    ],
    0x22B4: [
        .636,
        .138,
        .778
    ],
    0x22B5: [
        .636,
        .138,
        .778
    ],
    0x22B8: [
        .408,
        -0.092,
        1.111
    ],
    0x22BA: [
        .431,
        .212,
        .556
    ],
    0x22BB: [
        .716,
        0,
        .611
    ],
    0x22BC: [
        .716,
        0,
        .611
    ],
    0x22C0: [
        .75,
        .249,
        .833
    ],
    0x22C1: [
        .75,
        .249,
        .833
    ],
    0x22C2: [
        .75,
        .249,
        .833
    ],
    0x22C3: [
        .75,
        .249,
        .833
    ],
    0x22C4: [
        .488,
        -0.012,
        .5
    ],
    0x22C5: [
        .31,
        -0.19,
        .278
    ],
    0x22C6: [
        .486,
        -0.016,
        .5
    ],
    0x22C7: [
        .545,
        .044,
        .778
    ],
    0x22C8: [
        .505,
        .005,
        .9
    ],
    0x22C9: [
        .492,
        -0.008,
        .778
    ],
    0x22CA: [
        .492,
        -0.008,
        .778
    ],
    0x22CB: [
        .694,
        .022,
        .778
    ],
    0x22CC: [
        .694,
        .022,
        .778
    ],
    0x22CD: [
        .464,
        -0.036,
        .778
    ],
    0x22CE: [
        .578,
        .021,
        .76
    ],
    0x22CF: [
        .578,
        .022,
        .76
    ],
    0x22D0: [
        .54,
        .04,
        .778
    ],
    0x22D1: [
        .54,
        .04,
        .778
    ],
    0x22D2: [
        .598,
        .022,
        .667
    ],
    0x22D3: [
        .598,
        .022,
        .667
    ],
    0x22D4: [
        .736,
        .022,
        .667
    ],
    0x22D6: [
        .541,
        .041,
        .778
    ],
    0x22D7: [
        .541,
        .041,
        .778
    ],
    0x22D8: [
        .568,
        .067,
        1.333
    ],
    0x22D9: [
        .568,
        .067,
        1.333
    ],
    0x22DA: [
        .886,
        .386,
        .778
    ],
    0x22DB: [
        .886,
        .386,
        .778
    ],
    0x22DE: [
        .734,
        0,
        .778
    ],
    0x22DF: [
        .734,
        0,
        .778
    ],
    0x22E0: [
        .801,
        .303,
        .778
    ],
    0x22E1: [
        .801,
        .303,
        .778
    ],
    0x22E2: [
        .716,
        .215,
        .778
    ],
    0x22E3: [
        .716,
        .215,
        .778
    ],
    0x22E6: [
        .73,
        .359,
        .778
    ],
    0x22E7: [
        .73,
        .359,
        .778
    ],
    0x22E8: [
        .73,
        .359,
        .778
    ],
    0x22E9: [
        .73,
        .359,
        .778
    ],
    0x22EA: [
        .706,
        .208,
        .778
    ],
    0x22EB: [
        .706,
        .208,
        .778
    ],
    0x22EC: [
        .802,
        .303,
        .778
    ],
    0x22ED: [
        .801,
        .303,
        .778
    ],
    0x22EE: [
        1.3,
        .03,
        .278
    ],
    0x22EF: [
        .31,
        -0.19,
        1.172
    ],
    0x22F1: [
        1.52,
        -0.1,
        1.282
    ],
    0x2305: [
        .716,
        0,
        .611
    ],
    0x2306: [
        .813,
        .097,
        .611
    ],
    0x2308: [
        .75,
        .25,
        .444
    ],
    0x2309: [
        .75,
        .25,
        .444
    ],
    0x230A: [
        .75,
        .25,
        .444
    ],
    0x230B: [
        .75,
        .25,
        .444
    ],
    0x231C: [
        .694,
        -0.306,
        .5
    ],
    0x231D: [
        .694,
        -0.306,
        .5
    ],
    0x231E: [
        .366,
        .022,
        .5
    ],
    0x231F: [
        .366,
        .022,
        .5
    ],
    0x2322: [
        .388,
        -0.122,
        1
    ],
    0x2323: [
        .378,
        -0.134,
        1
    ],
    0x2329: [
        .75,
        .25,
        .389
    ],
    0x232A: [
        .75,
        .25,
        .389
    ],
    0x23B0: [
        .744,
        .244,
        .412
    ],
    0x23B1: [
        .744,
        .244,
        .412
    ],
    0x23D0: [
        .602,
        0,
        .667
    ],
    0x24C8: [
        .709,
        .175,
        .902
    ],
    0x250C: [
        .694,
        -0.306,
        .5
    ],
    0x2510: [
        .694,
        -0.306,
        .5
    ],
    0x2514: [
        .366,
        .022,
        .5
    ],
    0x2518: [
        .366,
        .022,
        .5
    ],
    0x2571: [
        .694,
        .195,
        .889
    ],
    0x2572: [
        .694,
        .195,
        .889
    ],
    0x25A0: [
        .689,
        0,
        .778
    ],
    0x25A1: [
        .689,
        0,
        .778
    ],
    0x25AA: [
        .689,
        0,
        .778
    ],
    0x25B2: [
        .575,
        .02,
        .722
    ],
    0x25B3: [
        .716,
        0,
        .889
    ],
    0x25B4: [
        .575,
        .02,
        .722
    ],
    0x25B5: [
        .716,
        0,
        .889
    ],
    0x25B6: [
        .539,
        .041,
        .778
    ],
    0x25B8: [
        .539,
        .041,
        .778
    ],
    0x25B9: [
        .505,
        .005,
        .5
    ],
    0x25BC: [
        .576,
        .019,
        .722
    ],
    0x25BD: [
        .5,
        .215,
        .889
    ],
    0x25BE: [
        .576,
        .019,
        .722
    ],
    0x25BF: [
        .5,
        .215,
        .889
    ],
    0x25C0: [
        .539,
        .041,
        .778
    ],
    0x25C2: [
        .539,
        .041,
        .778
    ],
    0x25C3: [
        .505,
        .005,
        .5
    ],
    0x25CA: [
        .716,
        .132,
        .667
    ],
    0x25EF: [
        .715,
        .215,
        1
    ],
    0x25FB: [
        .689,
        0,
        .778
    ],
    0x25FC: [
        .689,
        0,
        .778
    ],
    0x2605: [
        .694,
        .111,
        .944
    ],
    0x2660: [
        .727,
        .13,
        .778
    ],
    0x2661: [
        .716,
        .033,
        .778
    ],
    0x2662: [
        .727,
        .162,
        .778
    ],
    0x2663: [
        .726,
        .13,
        .778
    ],
    0x266D: [
        .75,
        .022,
        .389
    ],
    0x266E: [
        .734,
        .223,
        .389
    ],
    0x266F: [
        .723,
        .223,
        .389
    ],
    0x2713: [
        .706,
        .034,
        .833
    ],
    0x2720: [
        .716,
        .022,
        .833
    ],
    0x2758: [
        .75,
        .249,
        .278
    ],
    0x27E8: [
        .75,
        .25,
        .389
    ],
    0x27E9: [
        .75,
        .25,
        .389
    ],
    0x27EE: [
        .744,
        .244,
        .412
    ],
    0x27EF: [
        .744,
        .244,
        .412
    ],
    0x27F5: [
        .511,
        .011,
        1.609
    ],
    0x27F6: [
        .511,
        .011,
        1.638
    ],
    0x27F7: [
        .511,
        .011,
        1.859
    ],
    0x27F8: [
        .525,
        .024,
        1.609
    ],
    0x27F9: [
        .525,
        .024,
        1.638
    ],
    0x27FA: [
        .525,
        .024,
        1.858
    ],
    0x27FC: [
        .511,
        .011,
        1.638
    ],
    0x29EB: [
        .716,
        .132,
        .667
    ],
    0x29F8: [
        .716,
        .215,
        .778
    ],
    0x2A00: [
        .75,
        .25,
        1.111
    ],
    0x2A01: [
        .75,
        .25,
        1.111
    ],
    0x2A02: [
        .75,
        .25,
        1.111
    ],
    0x2A04: [
        .75,
        .249,
        .833
    ],
    0x2A06: [
        .75,
        .249,
        .833
    ],
    0x2A0C: [
        .805,
        .306,
        1.638,
        {
            ic: .138
        }
    ],
    0x2A2F: [
        .491,
        -0.009,
        .778
    ],
    0x2A3F: [
        .683,
        0,
        .75
    ],
    0x2A5E: [
        .813,
        .097,
        .611
    ],
    0x2A7D: [
        .636,
        .138,
        .778
    ],
    0x2A7E: [
        .636,
        .138,
        .778
    ],
    0x2A85: [
        .762,
        .29,
        .778
    ],
    0x2A86: [
        .762,
        .29,
        .778
    ],
    0x2A87: [
        .635,
        .241,
        .778
    ],
    0x2A88: [
        .635,
        .241,
        .778
    ],
    0x2A89: [
        .761,
        .387,
        .778
    ],
    0x2A8A: [
        .761,
        .387,
        .778
    ],
    0x2A8B: [
        1.003,
        .463,
        .778
    ],
    0x2A8C: [
        1.003,
        .463,
        .778
    ],
    0x2A95: [
        .636,
        .138,
        .778
    ],
    0x2A96: [
        .636,
        .138,
        .778
    ],
    0x2AAF: [
        .636,
        .138,
        .778
    ],
    0x2AB0: [
        .636,
        .138,
        .778
    ],
    0x2AB5: [
        .752,
        .286,
        .778
    ],
    0x2AB6: [
        .752,
        .286,
        .778
    ],
    0x2AB7: [
        .761,
        .294,
        .778
    ],
    0x2AB8: [
        .761,
        .294,
        .778
    ],
    0x2AB9: [
        .761,
        .337,
        .778
    ],
    0x2ABA: [
        .761,
        .337,
        .778
    ],
    0x2AC5: [
        .753,
        .215,
        .778
    ],
    0x2AC6: [
        .753,
        .215,
        .778
    ],
    0x2ACB: [
        .783,
        .385,
        .778
    ],
    0x2ACC: [
        .783,
        .385,
        .778
    ],
    0x3008: [
        .75,
        .25,
        .389
    ],
    0x3009: [
        .75,
        .25,
        .389
    ],
    0xE006: [
        .43,
        .023,
        .222,
        {
            ic: .018
        }
    ],
    0xE007: [
        .431,
        .024,
        .389,
        {
            ic: .018
        }
    ],
    0xE008: [
        .605,
        .085,
        .778
    ],
    0xE009: [
        .434,
        .006,
        .667,
        {
            ic: .067
        }
    ],
    0xE00C: [
        .752,
        .284,
        .778
    ],
    0xE00D: [
        .752,
        .284,
        .778
    ],
    0xE00E: [
        .919,
        .421,
        .778
    ],
    0xE00F: [
        .801,
        .303,
        .778
    ],
    0xE010: [
        .801,
        .303,
        .778
    ],
    0xE011: [
        .919,
        .421,
        .778
    ],
    0xE016: [
        .828,
        .33,
        .778
    ],
    0xE017: [
        .752,
        .332,
        .778
    ],
    0xE018: [
        .828,
        .33,
        .778
    ],
    0xE019: [
        .752,
        .333,
        .778
    ],
    0xE01A: [
        .634,
        .255,
        .778
    ],
    0xE01B: [
        .634,
        .254,
        .778
    ],
    0x1D400: [
        .698,
        0,
        .869
    ],
    0x1D401: [
        .686,
        0,
        .818
    ],
    0x1D402: [
        .697,
        .011,
        .831
    ],
    0x1D403: [
        .686,
        0,
        .882
    ],
    0x1D404: [
        .68,
        0,
        .756
    ],
    0x1D405: [
        .68,
        0,
        .724
    ],
    0x1D406: [
        .697,
        .01,
        .904
    ],
    0x1D407: [
        .686,
        0,
        .9
    ],
    0x1D408: [
        .686,
        0,
        .436
    ],
    0x1D409: [
        .686,
        .011,
        .594
    ],
    0x1D40A: [
        .686,
        0,
        .901
    ],
    0x1D40B: [
        .686,
        0,
        .692
    ],
    0x1D40C: [
        .686,
        0,
        1.092
    ],
    0x1D40D: [
        .686,
        0,
        .9
    ],
    0x1D40E: [
        .696,
        .01,
        .864
    ],
    0x1D40F: [
        .686,
        0,
        .786
    ],
    0x1D410: [
        .696,
        .193,
        .864
    ],
    0x1D411: [
        .686,
        .011,
        .862
    ],
    0x1D412: [
        .697,
        .011,
        .639
    ],
    0x1D413: [
        .675,
        0,
        .8
    ],
    0x1D414: [
        .686,
        .011,
        .885
    ],
    0x1D415: [
        .686,
        .007,
        .869
    ],
    0x1D416: [
        .686,
        .007,
        1.189
    ],
    0x1D417: [
        .686,
        0,
        .869
    ],
    0x1D418: [
        .686,
        0,
        .869
    ],
    0x1D419: [
        .686,
        0,
        .703
    ],
    0x1D41A: [
        .453,
        .006,
        .559
    ],
    0x1D41B: [
        .694,
        .006,
        .639
    ],
    0x1D41C: [
        .453,
        .006,
        .511
    ],
    0x1D41D: [
        .694,
        .006,
        .639
    ],
    0x1D41E: [
        .452,
        .006,
        .527
    ],
    0x1D41F: [
        .7,
        0,
        .351,
        {
            ic: .101
        }
    ],
    0x1D420: [
        .455,
        .201,
        .575
    ],
    0x1D421: [
        .694,
        0,
        .639
    ],
    0x1D422: [
        .695,
        0,
        .319
    ],
    0x1D423: [
        .695,
        .2,
        .351
    ],
    0x1D424: [
        .694,
        0,
        .607
    ],
    0x1D425: [
        .694,
        0,
        .319
    ],
    0x1D426: [
        .45,
        0,
        .958
    ],
    0x1D427: [
        .45,
        0,
        .639
    ],
    0x1D428: [
        .452,
        .005,
        .575
    ],
    0x1D429: [
        .45,
        .194,
        .639
    ],
    0x1D42A: [
        .45,
        .194,
        .607
    ],
    0x1D42B: [
        .45,
        0,
        .474
    ],
    0x1D42C: [
        .453,
        .006,
        .454
    ],
    0x1D42D: [
        .635,
        .005,
        .447
    ],
    0x1D42E: [
        .45,
        .006,
        .639
    ],
    0x1D42F: [
        .444,
        0,
        .607
    ],
    0x1D430: [
        .444,
        0,
        .831
    ],
    0x1D431: [
        .444,
        0,
        .607
    ],
    0x1D432: [
        .444,
        .2,
        .607
    ],
    0x1D433: [
        .444,
        0,
        .511
    ],
    0x1D434: [
        .716,
        0,
        .75,
        {
            sk: .139
        }
    ],
    0x1D435: [
        .683,
        0,
        .759,
        {
            sk: .0833
        }
    ],
    0x1D436: [
        .705,
        .022,
        .715,
        {
            ic: .045,
            sk: .0833
        }
    ],
    0x1D437: [
        .683,
        0,
        .828,
        {
            sk: .0556
        }
    ],
    0x1D438: [
        .68,
        0,
        .738,
        {
            ic: .026,
            sk: .0833
        }
    ],
    0x1D439: [
        .68,
        0,
        .643,
        {
            ic: .106,
            sk: .0833
        }
    ],
    0x1D43A: [
        .705,
        .022,
        .786,
        {
            sk: .0833
        }
    ],
    0x1D43B: [
        .683,
        0,
        .831,
        {
            ic: .057,
            sk: .0556
        }
    ],
    0x1D43C: [
        .683,
        0,
        .44,
        {
            ic: .064,
            sk: .111
        }
    ],
    0x1D43D: [
        .683,
        .022,
        .555,
        {
            ic: .078,
            sk: .167
        }
    ],
    0x1D43E: [
        .683,
        0,
        .849,
        {
            ic: .04,
            sk: .0556
        }
    ],
    0x1D43F: [
        .683,
        0,
        .681,
        {
            sk: .0278
        }
    ],
    0x1D440: [
        .683,
        0,
        .97,
        {
            ic: .081,
            sk: .0833
        }
    ],
    0x1D441: [
        .683,
        0,
        .803,
        {
            ic: .085,
            sk: .0833
        }
    ],
    0x1D442: [
        .704,
        .022,
        .763,
        {
            sk: .0833
        }
    ],
    0x1D443: [
        .683,
        0,
        .642,
        {
            ic: .109,
            sk: .0833
        }
    ],
    0x1D444: [
        .704,
        .194,
        .791,
        {
            sk: .0833
        }
    ],
    0x1D445: [
        .683,
        .021,
        .759,
        {
            sk: .0833
        }
    ],
    0x1D446: [
        .705,
        .022,
        .613,
        {
            ic: .032,
            sk: .0833
        }
    ],
    0x1D447: [
        .677,
        0,
        .584,
        {
            ic: .12,
            sk: .0833
        }
    ],
    0x1D448: [
        .683,
        .022,
        .683,
        {
            ic: .084,
            sk: .0278
        }
    ],
    0x1D449: [
        .683,
        .022,
        .583,
        {
            ic: .186
        }
    ],
    0x1D44A: [
        .683,
        .022,
        .944,
        {
            ic: .104
        }
    ],
    0x1D44B: [
        .683,
        0,
        .828,
        {
            ic: .024,
            sk: .0833
        }
    ],
    0x1D44C: [
        .683,
        0,
        .581,
        {
            ic: .182
        }
    ],
    0x1D44D: [
        .683,
        0,
        .683,
        {
            ic: .04,
            sk: .0833
        }
    ],
    0x1D44E: [
        .441,
        .01,
        .529
    ],
    0x1D44F: [
        .694,
        .011,
        .429
    ],
    0x1D450: [
        .442,
        .011,
        .433,
        {
            sk: .0556
        }
    ],
    0x1D451: [
        .694,
        .01,
        .52,
        {
            sk: .167
        }
    ],
    0x1D452: [
        .442,
        .011,
        .466,
        {
            sk: .0556
        }
    ],
    0x1D453: [
        .705,
        .205,
        .49,
        {
            ic: .06,
            sk: .167
        }
    ],
    0x1D454: [
        .442,
        .205,
        .477,
        {
            sk: .0278
        }
    ],
    0x1D456: [
        .661,
        .011,
        .345
    ],
    0x1D457: [
        .661,
        .204,
        .412
    ],
    0x1D458: [
        .694,
        .011,
        .521
    ],
    0x1D459: [
        .694,
        .011,
        .298,
        {
            sk: .0833
        }
    ],
    0x1D45A: [
        .442,
        .011,
        .878
    ],
    0x1D45B: [
        .442,
        .011,
        .6
    ],
    0x1D45C: [
        .441,
        .011,
        .485,
        {
            sk: .0556
        }
    ],
    0x1D45D: [
        .442,
        .194,
        .503,
        {
            sk: .0833
        }
    ],
    0x1D45E: [
        .442,
        .194,
        .446,
        {
            ic: .014,
            sk: .0833
        }
    ],
    0x1D45F: [
        .442,
        .011,
        .451,
        {
            sk: .0556
        }
    ],
    0x1D460: [
        .442,
        .01,
        .469,
        {
            sk: .0556
        }
    ],
    0x1D461: [
        .626,
        .011,
        .361,
        {
            sk: .0833
        }
    ],
    0x1D462: [
        .442,
        .011,
        .572,
        {
            sk: .0278
        }
    ],
    0x1D463: [
        .443,
        .011,
        .485,
        {
            sk: .0278
        }
    ],
    0x1D464: [
        .443,
        .011,
        .716,
        {
            sk: .0833
        }
    ],
    0x1D465: [
        .442,
        .011,
        .572,
        {
            sk: .0278
        }
    ],
    0x1D466: [
        .442,
        .205,
        .49,
        {
            sk: .0556
        }
    ],
    0x1D467: [
        .442,
        .011,
        .465,
        {
            sk: .0556
        }
    ],
    0x1D468: [
        .711,
        0,
        .869,
        {
            sk: .16
        }
    ],
    0x1D469: [
        .686,
        0,
        .866,
        {
            sk: .0958
        }
    ],
    0x1D46A: [
        .703,
        .017,
        .817,
        {
            ic: .038,
            sk: .0958
        }
    ],
    0x1D46B: [
        .686,
        0,
        .938,
        {
            sk: .0639
        }
    ],
    0x1D46C: [
        .68,
        0,
        .81,
        {
            ic: .015,
            sk: .0958
        }
    ],
    0x1D46D: [
        .68,
        0,
        .689,
        {
            ic: .12,
            sk: .0958
        }
    ],
    0x1D46E: [
        .703,
        .016,
        .887,
        {
            sk: .0958
        }
    ],
    0x1D46F: [
        .686,
        0,
        .982,
        {
            ic: .045,
            sk: .0639
        }
    ],
    0x1D470: [
        .686,
        0,
        .511,
        {
            ic: .062,
            sk: .128
        }
    ],
    0x1D471: [
        .686,
        .017,
        .631,
        {
            ic: .063,
            sk: .192
        }
    ],
    0x1D472: [
        .686,
        0,
        .971,
        {
            ic: .032,
            sk: .0639
        }
    ],
    0x1D473: [
        .686,
        0,
        .756,
        {
            sk: .0319
        }
    ],
    0x1D474: [
        .686,
        0,
        1.142,
        {
            ic: .077,
            sk: .0958
        }
    ],
    0x1D475: [
        .686,
        0,
        .95,
        {
            ic: .077,
            sk: .0958
        }
    ],
    0x1D476: [
        .703,
        .017,
        .837,
        {
            sk: .0958
        }
    ],
    0x1D477: [
        .686,
        0,
        .723,
        {
            ic: .124,
            sk: .0958
        }
    ],
    0x1D478: [
        .703,
        .194,
        .869,
        {
            sk: .0958
        }
    ],
    0x1D479: [
        .686,
        .017,
        .872,
        {
            sk: .0958
        }
    ],
    0x1D47A: [
        .703,
        .017,
        .693,
        {
            ic: .021,
            sk: .0958
        }
    ],
    0x1D47B: [
        .675,
        0,
        .637,
        {
            ic: .135,
            sk: .0958
        }
    ],
    0x1D47C: [
        .686,
        .016,
        .8,
        {
            ic: .077,
            sk: .0319
        }
    ],
    0x1D47D: [
        .686,
        .016,
        .678,
        {
            ic: .208
        }
    ],
    0x1D47E: [
        .686,
        .017,
        1.093,
        {
            ic: .114
        }
    ],
    0x1D47F: [
        .686,
        0,
        .947,
        {
            sk: .0958
        }
    ],
    0x1D480: [
        .686,
        0,
        .675,
        {
            ic: .201
        }
    ],
    0x1D481: [
        .686,
        0,
        .773,
        {
            ic: .032,
            sk: .0958
        }
    ],
    0x1D482: [
        .452,
        .008,
        .633
    ],
    0x1D483: [
        .694,
        .008,
        .521
    ],
    0x1D484: [
        .451,
        .008,
        .513,
        {
            sk: .0639
        }
    ],
    0x1D485: [
        .694,
        .008,
        .61,
        {
            sk: .192
        }
    ],
    0x1D486: [
        .452,
        .008,
        .554,
        {
            sk: .0639
        }
    ],
    0x1D487: [
        .701,
        .201,
        .568,
        {
            ic: .056,
            sk: .192
        }
    ],
    0x1D488: [
        .452,
        .202,
        .545,
        {
            sk: .0319
        }
    ],
    0x1D489: [
        .694,
        .008,
        .668,
        {
            sk: -0.0319
        }
    ],
    0x1D48A: [
        .694,
        .008,
        .405
    ],
    0x1D48B: [
        .694,
        .202,
        .471
    ],
    0x1D48C: [
        .694,
        .008,
        .604
    ],
    0x1D48D: [
        .694,
        .008,
        .348,
        {
            sk: .0958
        }
    ],
    0x1D48E: [
        .452,
        .008,
        1.032
    ],
    0x1D48F: [
        .452,
        .008,
        .713
    ],
    0x1D490: [
        .452,
        .008,
        .585,
        {
            sk: .0639
        }
    ],
    0x1D491: [
        .452,
        .194,
        .601,
        {
            sk: .0958
        }
    ],
    0x1D492: [
        .452,
        .194,
        .542,
        {
            sk: .0958
        }
    ],
    0x1D493: [
        .452,
        .008,
        .529,
        {
            sk: .0639
        }
    ],
    0x1D494: [
        .451,
        .008,
        .531,
        {
            sk: .0639
        }
    ],
    0x1D495: [
        .643,
        .007,
        .415,
        {
            sk: .0958
        }
    ],
    0x1D496: [
        .452,
        .008,
        .681,
        {
            sk: .0319
        }
    ],
    0x1D497: [
        .453,
        .008,
        .567,
        {
            sk: .0319
        }
    ],
    0x1D498: [
        .453,
        .008,
        .831,
        {
            sk: .0958
        }
    ],
    0x1D499: [
        .452,
        .008,
        .659,
        {
            sk: .0319
        }
    ],
    0x1D49A: [
        .452,
        .202,
        .59,
        {
            sk: .0639
        }
    ],
    0x1D49B: [
        .452,
        .008,
        .555,
        {
            sk: .0639
        }
    ],
    0x1D49C: [
        .717,
        .008,
        .803,
        {
            ic: .213,
            sk: .389
        }
    ],
    0x1D49E: [
        .728,
        .026,
        .666,
        {
            ic: .153,
            sk: .278
        }
    ],
    0x1D49F: [
        .708,
        .031,
        .774,
        {
            ic: .081,
            sk: .111
        }
    ],
    0x1D4A2: [
        .717,
        .037,
        .61,
        {
            ic: .128,
            sk: .25
        }
    ],
    0x1D4A5: [
        .717,
        .314,
        1.052,
        {
            ic: .081,
            sk: .417
        }
    ],
    0x1D4A6: [
        .717,
        .037,
        .914,
        {
            ic: .29,
            sk: .361
        }
    ],
    0x1D4A9: [
        .726,
        .036,
        .902,
        {
            ic: .306,
            sk: .389
        }
    ],
    0x1D4AA: [
        .707,
        .008,
        .738,
        {
            ic: .067,
            sk: .167
        }
    ],
    0x1D4AB: [
        .716,
        .037,
        1.013,
        {
            ic: .018,
            sk: .222
        }
    ],
    0x1D4AC: [
        .717,
        .017,
        .883,
        {
            sk: .278
        }
    ],
    0x1D4AE: [
        .708,
        .036,
        .868,
        {
            ic: .148,
            sk: .333
        }
    ],
    0x1D4AF: [
        .735,
        .037,
        .747,
        {
            ic: .249,
            sk: .222
        }
    ],
    0x1D4B0: [
        .717,
        .017,
        .8,
        {
            ic: .16,
            sk: .25
        }
    ],
    0x1D4B1: [
        .717,
        .017,
        .622,
        {
            ic: .228,
            sk: .222
        }
    ],
    0x1D4B2: [
        .717,
        .017,
        .805,
        {
            ic: .221,
            sk: .25
        }
    ],
    0x1D4B3: [
        .717,
        .017,
        .944,
        {
            ic: .187,
            sk: .278
        }
    ],
    0x1D4B4: [
        .716,
        .017,
        .71,
        {
            ic: .249,
            sk: .194
        }
    ],
    0x1D4B5: [
        .717,
        .016,
        .821,
        {
            ic: .211,
            sk: .306
        }
    ],
    0x1D504: [
        .696,
        .026,
        .718
    ],
    0x1D505: [
        .691,
        .027,
        .884
    ],
    0x1D507: [
        .685,
        .027,
        .832
    ],
    0x1D508: [
        .685,
        .024,
        .663
    ],
    0x1D509: [
        .686,
        .153,
        .611
    ],
    0x1D50A: [
        .69,
        .026,
        .785
    ],
    0x1D50D: [
        .686,
        .139,
        .552
    ],
    0x1D50E: [
        .68,
        .027,
        .668,
        {
            ic: .014
        }
    ],
    0x1D50F: [
        .686,
        .026,
        .666
    ],
    0x1D510: [
        .692,
        .027,
        1.05
    ],
    0x1D511: [
        .686,
        .025,
        .832
    ],
    0x1D512: [
        .729,
        .027,
        .827
    ],
    0x1D513: [
        .692,
        .218,
        .828
    ],
    0x1D514: [
        .729,
        .069,
        .827
    ],
    0x1D516: [
        .692,
        .027,
        .829
    ],
    0x1D517: [
        .701,
        .027,
        .669
    ],
    0x1D518: [
        .697,
        .027,
        .646,
        {
            ic: .019
        }
    ],
    0x1D519: [
        .686,
        .026,
        .831
    ],
    0x1D51A: [
        .686,
        .027,
        1.046
    ],
    0x1D51B: [
        .688,
        .027,
        .719
    ],
    0x1D51C: [
        .686,
        .218,
        .833
    ],
    0x1D51E: [
        .47,
        .035,
        .5
    ],
    0x1D51F: [
        .685,
        .031,
        .513
    ],
    0x1D520: [
        .466,
        .029,
        .389
    ],
    0x1D521: [
        .609,
        .033,
        .499
    ],
    0x1D522: [
        .467,
        .03,
        .401
    ],
    0x1D523: [
        .681,
        .221,
        .326
    ],
    0x1D524: [
        .47,
        .209,
        .504
    ],
    0x1D525: [
        .688,
        .205,
        .521
    ],
    0x1D526: [
        .673,
        .02,
        .279
    ],
    0x1D527: [
        .672,
        .208,
        .281
    ],
    0x1D528: [
        .689,
        .025,
        .389
    ],
    0x1D529: [
        .685,
        .02,
        .28
    ],
    0x1D52A: [
        .475,
        .026,
        .767
    ],
    0x1D52B: [
        .475,
        .022,
        .527
    ],
    0x1D52C: [
        .48,
        .028,
        .489
    ],
    0x1D52D: [
        .541,
        .212,
        .5
    ],
    0x1D52E: [
        .479,
        .219,
        .489
    ],
    0x1D52F: [
        .474,
        .021,
        .389
    ],
    0x1D530: [
        .478,
        .029,
        .443
    ],
    0x1D531: [
        .64,
        .02,
        .333,
        {
            ic: .015
        }
    ],
    0x1D532: [
        .474,
        .023,
        .517
    ],
    0x1D533: [
        .53,
        .028,
        .512
    ],
    0x1D534: [
        .532,
        .028,
        .774
    ],
    0x1D535: [
        .472,
        .188,
        .389
    ],
    0x1D536: [
        .528,
        .218,
        .499
    ],
    0x1D537: [
        .471,
        .214,
        .391
    ],
    0x1D538: [
        .701,
        0,
        .722
    ],
    0x1D539: [
        .683,
        0,
        .667
    ],
    0x1D53B: [
        .683,
        0,
        .722
    ],
    0x1D53C: [
        .683,
        0,
        .667
    ],
    0x1D53D: [
        .683,
        0,
        .611
    ],
    0x1D53E: [
        .702,
        .019,
        .778
    ],
    0x1D540: [
        .683,
        0,
        .389
    ],
    0x1D541: [
        .683,
        .077,
        .5
    ],
    0x1D542: [
        .683,
        0,
        .778
    ],
    0x1D543: [
        .683,
        0,
        .667
    ],
    0x1D544: [
        .683,
        0,
        .944
    ],
    0x1D546: [
        .701,
        .019,
        .778
    ],
    0x1D54A: [
        .702,
        .012,
        .556
    ],
    0x1D54B: [
        .683,
        0,
        .667
    ],
    0x1D54C: [
        .683,
        .019,
        .722
    ],
    0x1D54D: [
        .683,
        .02,
        .722
    ],
    0x1D54E: [
        .683,
        .019,
        1
    ],
    0x1D54F: [
        .683,
        0,
        .722
    ],
    0x1D550: [
        .683,
        0,
        .722
    ],
    0x1D56C: [
        .686,
        .031,
        .847
    ],
    0x1D56D: [
        .684,
        .031,
        1.044
    ],
    0x1D56E: [
        .676,
        .032,
        .723
    ],
    0x1D56F: [
        .683,
        .029,
        .982
    ],
    0x1D570: [
        .686,
        .029,
        .783
    ],
    0x1D571: [
        .684,
        .146,
        .722
    ],
    0x1D572: [
        .687,
        .029,
        .927
    ],
    0x1D573: [
        .683,
        .126,
        .851
    ],
    0x1D574: [
        .681,
        .025,
        .655
    ],
    0x1D575: [
        .68,
        .141,
        .652
    ],
    0x1D576: [
        .681,
        .026,
        .789,
        {
            ic: .017
        }
    ],
    0x1D577: [
        .683,
        .028,
        .786
    ],
    0x1D578: [
        .683,
        .032,
        1.239
    ],
    0x1D579: [
        .679,
        .03,
        .983
    ],
    0x1D57A: [
        .726,
        .03,
        .976
    ],
    0x1D57B: [
        .688,
        .223,
        .977
    ],
    0x1D57C: [
        .726,
        .083,
        .976
    ],
    0x1D57D: [
        .688,
        .028,
        .978
    ],
    0x1D57E: [
        .685,
        .031,
        .978
    ],
    0x1D57F: [
        .686,
        .03,
        .79,
        {
            ic: .012
        }
    ],
    0x1D580: [
        .688,
        .039,
        .851,
        {
            ic: .02
        }
    ],
    0x1D581: [
        .685,
        .029,
        .982
    ],
    0x1D582: [
        .683,
        .03,
        1.235
    ],
    0x1D583: [
        .681,
        .035,
        .849
    ],
    0x1D584: [
        .688,
        .214,
        .984
    ],
    0x1D585: [
        .677,
        .148,
        .711
    ],
    0x1D586: [
        .472,
        .032,
        .603
    ],
    0x1D587: [
        .69,
        .032,
        .59
    ],
    0x1D588: [
        .473,
        .026,
        .464
    ],
    0x1D589: [
        .632,
        .028,
        .589
    ],
    0x1D58A: [
        .471,
        .027,
        .472
    ],
    0x1D58B: [
        .687,
        .222,
        .388
    ],
    0x1D58C: [
        .472,
        .208,
        .595
    ],
    0x1D58D: [
        .687,
        .207,
        .615
    ],
    0x1D58E: [
        .686,
        .025,
        .331
    ],
    0x1D58F: [
        .682,
        .203,
        .332
    ],
    0x1D590: [
        .682,
        .025,
        .464
    ],
    0x1D591: [
        .681,
        .024,
        .337
    ],
    0x1D592: [
        .476,
        .031,
        .921
    ],
    0x1D593: [
        .473,
        .028,
        .654
    ],
    0x1D594: [
        .482,
        .034,
        .609
    ],
    0x1D595: [
        .557,
        .207,
        .604
    ],
    0x1D596: [
        .485,
        .211,
        .596
    ],
    0x1D597: [
        .472,
        .026,
        .46
    ],
    0x1D598: [
        .479,
        .034,
        .523
    ],
    0x1D599: [
        .648,
        .027,
        .393,
        {
            ic: .014
        }
    ],
    0x1D59A: [
        .472,
        .032,
        .589,
        {
            ic: .014
        }
    ],
    0x1D59B: [
        .546,
        .027,
        .604
    ],
    0x1D59C: [
        .549,
        .032,
        .918
    ],
    0x1D59D: [
        .471,
        .188,
        .459
    ],
    0x1D59E: [
        .557,
        .221,
        .589
    ],
    0x1D59F: [
        .471,
        .214,
        .461
    ],
    0x1D5A0: [
        .694,
        0,
        .667
    ],
    0x1D5A1: [
        .694,
        0,
        .667
    ],
    0x1D5A2: [
        .705,
        .011,
        .639
    ],
    0x1D5A3: [
        .694,
        0,
        .722
    ],
    0x1D5A4: [
        .691,
        0,
        .597
    ],
    0x1D5A5: [
        .691,
        0,
        .569
    ],
    0x1D5A6: [
        .704,
        .011,
        .667
    ],
    0x1D5A7: [
        .694,
        0,
        .708
    ],
    0x1D5A8: [
        .694,
        0,
        .278
    ],
    0x1D5A9: [
        .694,
        .022,
        .472
    ],
    0x1D5AA: [
        .694,
        0,
        .694
    ],
    0x1D5AB: [
        .694,
        0,
        .542
    ],
    0x1D5AC: [
        .694,
        0,
        .875
    ],
    0x1D5AD: [
        .694,
        0,
        .708
    ],
    0x1D5AE: [
        .715,
        .022,
        .736
    ],
    0x1D5AF: [
        .694,
        0,
        .639
    ],
    0x1D5B0: [
        .715,
        .125,
        .736
    ],
    0x1D5B1: [
        .694,
        0,
        .646
    ],
    0x1D5B2: [
        .716,
        .022,
        .556
    ],
    0x1D5B3: [
        .688,
        0,
        .681
    ],
    0x1D5B4: [
        .694,
        .022,
        .688
    ],
    0x1D5B5: [
        .694,
        0,
        .667
    ],
    0x1D5B6: [
        .694,
        0,
        .944
    ],
    0x1D5B7: [
        .694,
        0,
        .667
    ],
    0x1D5B8: [
        .694,
        0,
        .667
    ],
    0x1D5B9: [
        .694,
        0,
        .611
    ],
    0x1D5BA: [
        .46,
        .01,
        .481
    ],
    0x1D5BB: [
        .694,
        .011,
        .517
    ],
    0x1D5BC: [
        .46,
        .01,
        .444
    ],
    0x1D5BD: [
        .694,
        .01,
        .517
    ],
    0x1D5BE: [
        .461,
        .01,
        .444
    ],
    0x1D5BF: [
        .705,
        0,
        .306,
        {
            ic: .041
        }
    ],
    0x1D5C0: [
        .455,
        .206,
        .5
    ],
    0x1D5C1: [
        .694,
        0,
        .517
    ],
    0x1D5C2: [
        .68,
        0,
        .239
    ],
    0x1D5C3: [
        .68,
        .205,
        .267
    ],
    0x1D5C4: [
        .694,
        0,
        .489
    ],
    0x1D5C5: [
        .694,
        0,
        .239
    ],
    0x1D5C6: [
        .455,
        0,
        .794
    ],
    0x1D5C7: [
        .455,
        0,
        .517
    ],
    0x1D5C8: [
        .46,
        .01,
        .5
    ],
    0x1D5C9: [
        .455,
        .194,
        .517
    ],
    0x1D5CA: [
        .455,
        .194,
        .517
    ],
    0x1D5CB: [
        .455,
        0,
        .342
    ],
    0x1D5CC: [
        .46,
        .01,
        .383
    ],
    0x1D5CD: [
        .571,
        .01,
        .361
    ],
    0x1D5CE: [
        .444,
        .01,
        .517
    ],
    0x1D5CF: [
        .444,
        0,
        .461
    ],
    0x1D5D0: [
        .444,
        0,
        .683
    ],
    0x1D5D1: [
        .444,
        0,
        .461
    ],
    0x1D5D2: [
        .444,
        .204,
        .461
    ],
    0x1D5D3: [
        .444,
        0,
        .435
    ],
    0x1D5D4: [
        .694,
        0,
        .733
    ],
    0x1D5D5: [
        .694,
        0,
        .733
    ],
    0x1D5D6: [
        .704,
        .011,
        .703
    ],
    0x1D5D7: [
        .694,
        0,
        .794
    ],
    0x1D5D8: [
        .691,
        0,
        .642
    ],
    0x1D5D9: [
        .691,
        0,
        .611
    ],
    0x1D5DA: [
        .705,
        .011,
        .733
    ],
    0x1D5DB: [
        .694,
        0,
        .794
    ],
    0x1D5DC: [
        .694,
        0,
        .331
    ],
    0x1D5DD: [
        .694,
        .022,
        .519
    ],
    0x1D5DE: [
        .694,
        0,
        .764
    ],
    0x1D5DF: [
        .694,
        0,
        .581
    ],
    0x1D5E0: [
        .694,
        0,
        .978
    ],
    0x1D5E1: [
        .694,
        0,
        .794
    ],
    0x1D5E2: [
        .716,
        .022,
        .794
    ],
    0x1D5E3: [
        .694,
        0,
        .703
    ],
    0x1D5E4: [
        .716,
        .106,
        .794
    ],
    0x1D5E5: [
        .694,
        0,
        .703
    ],
    0x1D5E6: [
        .716,
        .022,
        .611
    ],
    0x1D5E7: [
        .688,
        0,
        .733
    ],
    0x1D5E8: [
        .694,
        .022,
        .764
    ],
    0x1D5E9: [
        .694,
        0,
        .733
    ],
    0x1D5EA: [
        .694,
        0,
        1.039
    ],
    0x1D5EB: [
        .694,
        0,
        .733
    ],
    0x1D5EC: [
        .694,
        0,
        .733
    ],
    0x1D5ED: [
        .694,
        0,
        .672
    ],
    0x1D5EE: [
        .475,
        .011,
        .525
    ],
    0x1D5EF: [
        .694,
        .01,
        .561
    ],
    0x1D5F0: [
        .475,
        .011,
        .489
    ],
    0x1D5F1: [
        .694,
        .011,
        .561
    ],
    0x1D5F2: [
        .474,
        .01,
        .511
    ],
    0x1D5F3: [
        .705,
        0,
        .336,
        {
            ic: .045
        }
    ],
    0x1D5F4: [
        .469,
        .206,
        .55
    ],
    0x1D5F5: [
        .694,
        0,
        .561
    ],
    0x1D5F6: [
        .695,
        0,
        .256
    ],
    0x1D5F7: [
        .695,
        .205,
        .286
    ],
    0x1D5F8: [
        .694,
        0,
        .531
    ],
    0x1D5F9: [
        .694,
        0,
        .256
    ],
    0x1D5FA: [
        .469,
        0,
        .867
    ],
    0x1D5FB: [
        .468,
        0,
        .561
    ],
    0x1D5FC: [
        .474,
        .011,
        .55
    ],
    0x1D5FD: [
        .469,
        .194,
        .561
    ],
    0x1D5FE: [
        .469,
        .194,
        .561
    ],
    0x1D5FF: [
        .469,
        0,
        .372
    ],
    0x1D600: [
        .474,
        .01,
        .422
    ],
    0x1D601: [
        .589,
        .01,
        .404
    ],
    0x1D602: [
        .458,
        .011,
        .561
    ],
    0x1D603: [
        .458,
        0,
        .5
    ],
    0x1D604: [
        .458,
        0,
        .744
    ],
    0x1D605: [
        .458,
        0,
        .5
    ],
    0x1D606: [
        .458,
        .205,
        .5
    ],
    0x1D607: [
        .458,
        0,
        .476
    ],
    0x1D608: [
        .694,
        0,
        .667
    ],
    0x1D609: [
        .694,
        0,
        .667,
        {
            ic: .029
        }
    ],
    0x1D60A: [
        .705,
        .01,
        .639,
        {
            ic: .08
        }
    ],
    0x1D60B: [
        .694,
        0,
        .722,
        {
            ic: .025
        }
    ],
    0x1D60C: [
        .691,
        0,
        .597,
        {
            ic: .091
        }
    ],
    0x1D60D: [
        .691,
        0,
        .569,
        {
            ic: .104
        }
    ],
    0x1D60E: [
        .705,
        .011,
        .667,
        {
            ic: .063
        }
    ],
    0x1D60F: [
        .694,
        0,
        .708,
        {
            ic: .06
        }
    ],
    0x1D610: [
        .694,
        0,
        .278,
        {
            ic: .06
        }
    ],
    0x1D611: [
        .694,
        .022,
        .472,
        {
            ic: .063
        }
    ],
    0x1D612: [
        .694,
        0,
        .694,
        {
            ic: .091
        }
    ],
    0x1D613: [
        .694,
        0,
        .542
    ],
    0x1D614: [
        .694,
        0,
        .875,
        {
            ic: .054
        }
    ],
    0x1D615: [
        .694,
        0,
        .708,
        {
            ic: .058
        }
    ],
    0x1D616: [
        .716,
        .022,
        .736,
        {
            ic: .027
        }
    ],
    0x1D617: [
        .694,
        0,
        .639,
        {
            ic: .051
        }
    ],
    0x1D618: [
        .716,
        .125,
        .736,
        {
            ic: .027
        }
    ],
    0x1D619: [
        .694,
        0,
        .646,
        {
            ic: .052
        }
    ],
    0x1D61A: [
        .716,
        .022,
        .556,
        {
            ic: .053
        }
    ],
    0x1D61B: [
        .688,
        0,
        .681,
        {
            ic: .109
        }
    ],
    0x1D61C: [
        .694,
        .022,
        .688,
        {
            ic: .059
        }
    ],
    0x1D61D: [
        .694,
        0,
        .667,
        {
            ic: .132
        }
    ],
    0x1D61E: [
        .694,
        0,
        .944,
        {
            ic: .132
        }
    ],
    0x1D61F: [
        .694,
        0,
        .667,
        {
            ic: .091
        }
    ],
    0x1D620: [
        .694,
        0,
        .667,
        {
            ic: .143
        }
    ],
    0x1D621: [
        .694,
        0,
        .611,
        {
            ic: .091
        }
    ],
    0x1D622: [
        .461,
        .01,
        .481
    ],
    0x1D623: [
        .694,
        .011,
        .517,
        {
            ic: .022
        }
    ],
    0x1D624: [
        .46,
        .011,
        .444,
        {
            ic: .055
        }
    ],
    0x1D625: [
        .694,
        .01,
        .517,
        {
            ic: .071
        }
    ],
    0x1D626: [
        .46,
        .011,
        .444,
        {
            ic: .028
        }
    ],
    0x1D627: [
        .705,
        0,
        .306,
        {
            ic: .188
        }
    ],
    0x1D628: [
        .455,
        .206,
        .5,
        {
            ic: .068
        }
    ],
    0x1D629: [
        .694,
        0,
        .517
    ],
    0x1D62A: [
        .68,
        0,
        .239,
        {
            ic: .076
        }
    ],
    0x1D62B: [
        .68,
        .204,
        .267,
        {
            ic: .069
        }
    ],
    0x1D62C: [
        .694,
        0,
        .489,
        {
            ic: .054
        }
    ],
    0x1D62D: [
        .694,
        0,
        .239,
        {
            ic: .072
        }
    ],
    0x1D62E: [
        .455,
        0,
        .794
    ],
    0x1D62F: [
        .454,
        0,
        .517
    ],
    0x1D630: [
        .461,
        .011,
        .5,
        {
            ic: .023
        }
    ],
    0x1D631: [
        .455,
        .194,
        .517,
        {
            ic: .021
        }
    ],
    0x1D632: [
        .455,
        .194,
        .517,
        {
            ic: .021
        }
    ],
    0x1D633: [
        .455,
        0,
        .342,
        {
            ic: .082
        }
    ],
    0x1D634: [
        .461,
        .011,
        .383,
        {
            ic: .053
        }
    ],
    0x1D635: [
        .571,
        .011,
        .361,
        {
            ic: .049
        }
    ],
    0x1D636: [
        .444,
        .01,
        .517,
        {
            ic: .02
        }
    ],
    0x1D637: [
        .444,
        0,
        .461,
        {
            ic: .079
        }
    ],
    0x1D638: [
        .444,
        0,
        .683,
        {
            ic: .079
        }
    ],
    0x1D639: [
        .444,
        0,
        .461,
        {
            ic: .076
        }
    ],
    0x1D63A: [
        .444,
        .205,
        .461,
        {
            ic: .079
        }
    ],
    0x1D63B: [
        .444,
        0,
        .435,
        {
            ic: .059
        }
    ],
    0x1D670: [
        .623,
        0,
        .525
    ],
    0x1D671: [
        .611,
        0,
        .525
    ],
    0x1D672: [
        .622,
        .011,
        .525
    ],
    0x1D673: [
        .611,
        0,
        .525
    ],
    0x1D674: [
        .611,
        0,
        .525
    ],
    0x1D675: [
        .611,
        0,
        .525
    ],
    0x1D676: [
        .622,
        .011,
        .525
    ],
    0x1D677: [
        .611,
        0,
        .525
    ],
    0x1D678: [
        .611,
        0,
        .525
    ],
    0x1D679: [
        .611,
        .011,
        .525
    ],
    0x1D67A: [
        .611,
        0,
        .525
    ],
    0x1D67B: [
        .611,
        0,
        .525
    ],
    0x1D67C: [
        .611,
        0,
        .525
    ],
    0x1D67D: [
        .611,
        0,
        .525
    ],
    0x1D67E: [
        .621,
        .01,
        .525
    ],
    0x1D67F: [
        .611,
        0,
        .525
    ],
    0x1D680: [
        .621,
        .138,
        .525
    ],
    0x1D681: [
        .611,
        .011,
        .525
    ],
    0x1D682: [
        .622,
        .011,
        .525
    ],
    0x1D683: [
        .611,
        0,
        .525
    ],
    0x1D684: [
        .611,
        .011,
        .525
    ],
    0x1D685: [
        .611,
        .007,
        .525
    ],
    0x1D686: [
        .611,
        .007,
        .525
    ],
    0x1D687: [
        .611,
        0,
        .525
    ],
    0x1D688: [
        .611,
        0,
        .525
    ],
    0x1D689: [
        .611,
        0,
        .525
    ],
    0x1D68A: [
        .439,
        .006,
        .525
    ],
    0x1D68B: [
        .611,
        .006,
        .525
    ],
    0x1D68C: [
        .44,
        .006,
        .525
    ],
    0x1D68D: [
        .611,
        .006,
        .525
    ],
    0x1D68E: [
        .44,
        .006,
        .525
    ],
    0x1D68F: [
        .617,
        0,
        .525
    ],
    0x1D690: [
        .442,
        .229,
        .525
    ],
    0x1D691: [
        .611,
        0,
        .525
    ],
    0x1D692: [
        .612,
        0,
        .525
    ],
    0x1D693: [
        .612,
        .228,
        .525
    ],
    0x1D694: [
        .611,
        0,
        .525
    ],
    0x1D695: [
        .611,
        0,
        .525
    ],
    0x1D696: [
        .436,
        0,
        .525,
        {
            ic: .011
        }
    ],
    0x1D697: [
        .436,
        0,
        .525
    ],
    0x1D698: [
        .44,
        .006,
        .525
    ],
    0x1D699: [
        .437,
        .221,
        .525
    ],
    0x1D69A: [
        .437,
        .221,
        .525,
        {
            ic: .02
        }
    ],
    0x1D69B: [
        .437,
        0,
        .525
    ],
    0x1D69C: [
        .44,
        .006,
        .525
    ],
    0x1D69D: [
        .554,
        .006,
        .525
    ],
    0x1D69E: [
        .431,
        .005,
        .525
    ],
    0x1D69F: [
        .431,
        0,
        .525
    ],
    0x1D6A0: [
        .431,
        0,
        .525
    ],
    0x1D6A1: [
        .431,
        0,
        .525
    ],
    0x1D6A2: [
        .431,
        .228,
        .525
    ],
    0x1D6A3: [
        .431,
        0,
        .525
    ],
    0x1D6A8: [
        .698,
        0,
        .869
    ],
    0x1D6A9: [
        .686,
        0,
        .818
    ],
    0x1D6AA: [
        .68,
        0,
        .692
    ],
    0x1D6AB: [
        .698,
        0,
        .958
    ],
    0x1D6AC: [
        .68,
        0,
        .756
    ],
    0x1D6AD: [
        .686,
        0,
        .703
    ],
    0x1D6AE: [
        .686,
        0,
        .9
    ],
    0x1D6AF: [
        .696,
        .01,
        .894
    ],
    0x1D6B0: [
        .686,
        0,
        .436
    ],
    0x1D6B1: [
        .686,
        0,
        .901
    ],
    0x1D6B2: [
        .698,
        0,
        .806
    ],
    0x1D6B3: [
        .686,
        0,
        1.092
    ],
    0x1D6B4: [
        .686,
        0,
        .9
    ],
    0x1D6B5: [
        .675,
        0,
        .767
    ],
    0x1D6B6: [
        .696,
        .01,
        .864
    ],
    0x1D6B7: [
        .68,
        0,
        .9
    ],
    0x1D6B8: [
        .686,
        0,
        .786
    ],
    0x1D6BA: [
        .686,
        0,
        .831
    ],
    0x1D6BB: [
        .675,
        0,
        .8
    ],
    0x1D6BC: [
        .697,
        0,
        .894
    ],
    0x1D6BD: [
        .686,
        0,
        .831
    ],
    0x1D6BE: [
        .686,
        0,
        .869
    ],
    0x1D6BF: [
        .686,
        0,
        .894
    ],
    0x1D6C0: [
        .696,
        0,
        .831
    ],
    0x1D6C1: [
        .686,
        .024,
        .958
    ],
    0x1D6E2: [
        .716,
        0,
        .75,
        {
            sk: .139
        }
    ],
    0x1D6E3: [
        .683,
        0,
        .759,
        {
            sk: .0833
        }
    ],
    0x1D6E4: [
        .68,
        0,
        .615,
        {
            ic: .106,
            sk: .0833
        }
    ],
    0x1D6E5: [
        .716,
        0,
        .833,
        {
            sk: .167
        }
    ],
    0x1D6E6: [
        .68,
        0,
        .738,
        {
            ic: .026,
            sk: .0833
        }
    ],
    0x1D6E7: [
        .683,
        0,
        .683,
        {
            ic: .04,
            sk: .0833
        }
    ],
    0x1D6E8: [
        .683,
        0,
        .831,
        {
            ic: .057,
            sk: .0556
        }
    ],
    0x1D6E9: [
        .704,
        .022,
        .763,
        {
            sk: .0833
        }
    ],
    0x1D6EA: [
        .683,
        0,
        .44,
        {
            ic: .064,
            sk: .111
        }
    ],
    0x1D6EB: [
        .683,
        0,
        .849,
        {
            ic: .04,
            sk: .0556
        }
    ],
    0x1D6EC: [
        .716,
        0,
        .694,
        {
            sk: .167
        }
    ],
    0x1D6ED: [
        .683,
        0,
        .97,
        {
            ic: .081,
            sk: .0833
        }
    ],
    0x1D6EE: [
        .683,
        0,
        .803,
        {
            ic: .085,
            sk: .0833
        }
    ],
    0x1D6EF: [
        .677,
        0,
        .742,
        {
            ic: .035,
            sk: .0833
        }
    ],
    0x1D6F0: [
        .704,
        .022,
        .763,
        {
            sk: .0833
        }
    ],
    0x1D6F1: [
        .68,
        0,
        .831,
        {
            ic: .056,
            sk: .0556
        }
    ],
    0x1D6F2: [
        .683,
        0,
        .642,
        {
            ic: .109,
            sk: .0833
        }
    ],
    0x1D6F4: [
        .683,
        0,
        .78,
        {
            ic: .026,
            sk: .0833
        }
    ],
    0x1D6F5: [
        .677,
        0,
        .584,
        {
            ic: .12,
            sk: .0833
        }
    ],
    0x1D6F6: [
        .705,
        0,
        .583,
        {
            ic: .117,
            sk: .0556
        }
    ],
    0x1D6F7: [
        .683,
        0,
        .667,
        {
            sk: .0833
        }
    ],
    0x1D6F8: [
        .683,
        0,
        .828,
        {
            ic: .024,
            sk: .0833
        }
    ],
    0x1D6F9: [
        .683,
        0,
        .612,
        {
            ic: .08,
            sk: .0556
        }
    ],
    0x1D6FA: [
        .704,
        0,
        .772,
        {
            ic: .014,
            sk: .0833
        }
    ],
    0x1D6FC: [
        .442,
        .011,
        .64,
        {
            sk: .0278
        }
    ],
    0x1D6FD: [
        .705,
        .194,
        .566,
        {
            sk: .0833
        }
    ],
    0x1D6FE: [
        .441,
        .216,
        .518,
        {
            ic: .025
        }
    ],
    0x1D6FF: [
        .717,
        .01,
        .444,
        {
            sk: .0556
        }
    ],
    0x1D700: [
        .452,
        .022,
        .466,
        {
            sk: .0833
        }
    ],
    0x1D701: [
        .704,
        .204,
        .438,
        {
            ic: .033,
            sk: .0833
        }
    ],
    0x1D702: [
        .442,
        .216,
        .497,
        {
            sk: .0556
        }
    ],
    0x1D703: [
        .705,
        .01,
        .469,
        {
            sk: .0833
        }
    ],
    0x1D704: [
        .442,
        .01,
        .354,
        {
            sk: .0556
        }
    ],
    0x1D705: [
        .442,
        .011,
        .576
    ],
    0x1D706: [
        .694,
        .012,
        .583
    ],
    0x1D707: [
        .442,
        .216,
        .603,
        {
            sk: .0278
        }
    ],
    0x1D708: [
        .442,
        0,
        .494,
        {
            ic: .036,
            sk: .0278
        }
    ],
    0x1D709: [
        .704,
        .205,
        .438,
        {
            sk: .111
        }
    ],
    0x1D70A: [
        .441,
        .011,
        .485,
        {
            sk: .0556
        }
    ],
    0x1D70B: [
        .431,
        .011,
        .57
    ],
    0x1D70C: [
        .442,
        .216,
        .517,
        {
            sk: .0833
        }
    ],
    0x1D70D: [
        .442,
        .107,
        .363,
        {
            ic: .042,
            sk: .0833
        }
    ],
    0x1D70E: [
        .431,
        .011,
        .571
    ],
    0x1D70F: [
        .431,
        .013,
        .437,
        {
            ic: .08,
            sk: .0278
        }
    ],
    0x1D710: [
        .443,
        .01,
        .54,
        {
            sk: .0278
        }
    ],
    0x1D711: [
        .442,
        .218,
        .654,
        {
            sk: .0833
        }
    ],
    0x1D712: [
        .442,
        .204,
        .626,
        {
            sk: .0556
        }
    ],
    0x1D713: [
        .694,
        .205,
        .651,
        {
            sk: .111
        }
    ],
    0x1D714: [
        .443,
        .011,
        .622
    ],
    0x1D715: [
        .715,
        .022,
        .531,
        {
            ic: .035,
            sk: .0833
        }
    ],
    0x1D716: [
        .431,
        .011,
        .406,
        {
            sk: .0556
        }
    ],
    0x1D717: [
        .705,
        .011,
        .591,
        {
            sk: .0833
        }
    ],
    0x1D718: [
        .434,
        .006,
        .667,
        {
            ic: .067
        }
    ],
    0x1D719: [
        .694,
        .205,
        .596,
        {
            sk: .0833
        }
    ],
    0x1D71A: [
        .442,
        .194,
        .517,
        {
            sk: .0833
        }
    ],
    0x1D71B: [
        .431,
        .01,
        .828
    ],
    0x1D71C: [
        .711,
        0,
        .869,
        {
            sk: .16
        }
    ],
    0x1D71D: [
        .686,
        0,
        .866,
        {
            sk: .0958
        }
    ],
    0x1D71E: [
        .68,
        0,
        .657,
        {
            ic: .12,
            sk: .0958
        }
    ],
    0x1D71F: [
        .711,
        0,
        .958,
        {
            sk: .192
        }
    ],
    0x1D720: [
        .68,
        0,
        .81,
        {
            ic: .015,
            sk: .0958
        }
    ],
    0x1D721: [
        .686,
        0,
        .773,
        {
            ic: .032,
            sk: .0958
        }
    ],
    0x1D722: [
        .686,
        0,
        .982,
        {
            ic: .045,
            sk: .0639
        }
    ],
    0x1D723: [
        .702,
        .017,
        .867,
        {
            sk: .0958
        }
    ],
    0x1D724: [
        .686,
        0,
        .511,
        {
            ic: .062,
            sk: .128
        }
    ],
    0x1D725: [
        .686,
        0,
        .971,
        {
            ic: .032,
            sk: .0639
        }
    ],
    0x1D726: [
        .711,
        0,
        .806,
        {
            sk: .192
        }
    ],
    0x1D727: [
        .686,
        0,
        1.142,
        {
            ic: .077,
            sk: .0958
        }
    ],
    0x1D728: [
        .686,
        0,
        .95,
        {
            ic: .077,
            sk: .0958
        }
    ],
    0x1D729: [
        .675,
        0,
        .841,
        {
            ic: .026,
            sk: .0958
        }
    ],
    0x1D72A: [
        .703,
        .017,
        .837,
        {
            sk: .0958
        }
    ],
    0x1D72B: [
        .68,
        0,
        .982,
        {
            ic: .044,
            sk: .0639
        }
    ],
    0x1D72C: [
        .686,
        0,
        .723,
        {
            ic: .124,
            sk: .0958
        }
    ],
    0x1D72E: [
        .686,
        0,
        .885,
        {
            ic: .017,
            sk: .0958
        }
    ],
    0x1D72F: [
        .675,
        0,
        .637,
        {
            ic: .135,
            sk: .0958
        }
    ],
    0x1D730: [
        .703,
        0,
        .671,
        {
            ic: .131,
            sk: .0639
        }
    ],
    0x1D731: [
        .686,
        0,
        .767,
        {
            sk: .0958
        }
    ],
    0x1D732: [
        .686,
        0,
        .947,
        {
            sk: .0958
        }
    ],
    0x1D733: [
        .686,
        0,
        .714,
        {
            ic: .076,
            sk: .0639
        }
    ],
    0x1D734: [
        .703,
        0,
        .879,
        {
            sk: .0958
        }
    ],
    0x1D736: [
        .452,
        .008,
        .761,
        {
            sk: .0319
        }
    ],
    0x1D737: [
        .701,
        .194,
        .66,
        {
            sk: .0958
        }
    ],
    0x1D738: [
        .451,
        .211,
        .59,
        {
            ic: .027
        }
    ],
    0x1D739: [
        .725,
        .008,
        .522,
        {
            sk: .0639
        }
    ],
    0x1D73A: [
        .461,
        .017,
        .529,
        {
            sk: .0958
        }
    ],
    0x1D73B: [
        .711,
        .202,
        .508,
        {
            ic: .013,
            sk: .0958
        }
    ],
    0x1D73C: [
        .452,
        .211,
        .6,
        {
            sk: .0639
        }
    ],
    0x1D73D: [
        .702,
        .008,
        .562,
        {
            sk: .0958
        }
    ],
    0x1D73E: [
        .452,
        .008,
        .412,
        {
            sk: .0639
        }
    ],
    0x1D73F: [
        .452,
        .008,
        .668
    ],
    0x1D740: [
        .694,
        .013,
        .671
    ],
    0x1D741: [
        .452,
        .211,
        .708,
        {
            sk: .0319
        }
    ],
    0x1D742: [
        .452,
        0,
        .577,
        {
            ic: .031,
            sk: .0319
        }
    ],
    0x1D743: [
        .711,
        .201,
        .508,
        {
            sk: .128
        }
    ],
    0x1D744: [
        .452,
        .008,
        .585,
        {
            sk: .0639
        }
    ],
    0x1D745: [
        .444,
        .008,
        .682
    ],
    0x1D746: [
        .451,
        .211,
        .612,
        {
            sk: .0958
        }
    ],
    0x1D747: [
        .451,
        .105,
        .424,
        {
            ic: .033,
            sk: .0958
        }
    ],
    0x1D748: [
        .444,
        .008,
        .686
    ],
    0x1D749: [
        .444,
        .013,
        .521,
        {
            ic: .089,
            sk: .0319
        }
    ],
    0x1D74A: [
        .453,
        .008,
        .631,
        {
            sk: .0319
        }
    ],
    0x1D74B: [
        .452,
        .216,
        .747,
        {
            sk: .0958
        }
    ],
    0x1D74C: [
        .452,
        .201,
        .718,
        {
            sk: .0639
        }
    ],
    0x1D74D: [
        .694,
        .202,
        .758,
        {
            sk: .128
        }
    ],
    0x1D74E: [
        .453,
        .008,
        .718
    ],
    0x1D74F: [
        .71,
        .017,
        .628,
        {
            ic: .029,
            sk: .0958
        }
    ],
    0x1D750: [
        .444,
        .007,
        .483,
        {
            sk: .0639
        }
    ],
    0x1D751: [
        .701,
        .008,
        .692,
        {
            sk: .0958
        }
    ],
    0x1D752: [
        .434,
        .006,
        .667,
        {
            ic: .067
        }
    ],
    0x1D753: [
        .694,
        .202,
        .712,
        {
            sk: .0958
        }
    ],
    0x1D754: [
        .451,
        .194,
        .612,
        {
            sk: .0958
        }
    ],
    0x1D755: [
        .444,
        .008,
        .975
    ],
    0x1D756: [
        .694,
        0,
        .733
    ],
    0x1D757: [
        .694,
        0,
        .733
    ],
    0x1D758: [
        .691,
        0,
        .581
    ],
    0x1D759: [
        .694,
        0,
        .917
    ],
    0x1D75A: [
        .691,
        0,
        .642
    ],
    0x1D75B: [
        .694,
        0,
        .672
    ],
    0x1D75C: [
        .694,
        0,
        .794
    ],
    0x1D75D: [
        .716,
        .022,
        .856
    ],
    0x1D75E: [
        .694,
        0,
        .331
    ],
    0x1D75F: [
        .694,
        0,
        .764
    ],
    0x1D760: [
        .694,
        0,
        .672
    ],
    0x1D761: [
        .694,
        0,
        .978
    ],
    0x1D762: [
        .694,
        0,
        .794
    ],
    0x1D763: [
        .688,
        0,
        .733
    ],
    0x1D764: [
        .716,
        .022,
        .794
    ],
    0x1D765: [
        .691,
        0,
        .794
    ],
    0x1D766: [
        .694,
        0,
        .703
    ],
    0x1D768: [
        .694,
        0,
        .794
    ],
    0x1D769: [
        .688,
        0,
        .733
    ],
    0x1D76A: [
        .715,
        0,
        .856
    ],
    0x1D76B: [
        .694,
        0,
        .794
    ],
    0x1D76C: [
        .694,
        0,
        .733
    ],
    0x1D76D: [
        .694,
        0,
        .856
    ],
    0x1D76E: [
        .716,
        0,
        .794
    ],
    0x1D7CE: [
        .654,
        .01,
        .575
    ],
    0x1D7CF: [
        .655,
        0,
        .575
    ],
    0x1D7D0: [
        .654,
        0,
        .575
    ],
    0x1D7D1: [
        .655,
        .011,
        .575
    ],
    0x1D7D2: [
        .656,
        0,
        .575
    ],
    0x1D7D3: [
        .655,
        .011,
        .575
    ],
    0x1D7D4: [
        .655,
        .011,
        .575
    ],
    0x1D7D5: [
        .676,
        .011,
        .575
    ],
    0x1D7D6: [
        .654,
        .011,
        .575
    ],
    0x1D7D7: [
        .654,
        .011,
        .575
    ],
    0x1D7E2: [
        .678,
        .022,
        .5
    ],
    0x1D7E3: [
        .678,
        0,
        .5
    ],
    0x1D7E4: [
        .677,
        0,
        .5
    ],
    0x1D7E5: [
        .678,
        .022,
        .5
    ],
    0x1D7E6: [
        .656,
        0,
        .5
    ],
    0x1D7E7: [
        .656,
        .021,
        .5
    ],
    0x1D7E8: [
        .677,
        .022,
        .5
    ],
    0x1D7E9: [
        .656,
        .011,
        .5
    ],
    0x1D7EA: [
        .678,
        .022,
        .5
    ],
    0x1D7EB: [
        .677,
        .022,
        .5
    ],
    0x1D7EC: [
        .715,
        .022,
        .55
    ],
    0x1D7ED: [
        .716,
        0,
        .55
    ],
    0x1D7EE: [
        .716,
        0,
        .55
    ],
    0x1D7EF: [
        .716,
        .022,
        .55
    ],
    0x1D7F0: [
        .694,
        0,
        .55
    ],
    0x1D7F1: [
        .694,
        .022,
        .55
    ],
    0x1D7F2: [
        .716,
        .022,
        .55
    ],
    0x1D7F3: [
        .695,
        .011,
        .55
    ],
    0x1D7F4: [
        .715,
        .022,
        .55
    ],
    0x1D7F5: [
        .716,
        .022,
        .55
    ],
    0x1D7F6: [
        .621,
        .01,
        .525
    ],
    0x1D7F7: [
        .622,
        0,
        .525
    ],
    0x1D7F8: [
        .622,
        0,
        .525
    ],
    0x1D7F9: [
        .622,
        .011,
        .525
    ],
    0x1D7FA: [
        .624,
        0,
        .525
    ],
    0x1D7FB: [
        .611,
        .01,
        .525
    ],
    0x1D7FC: [
        .622,
        .011,
        .525
    ],
    0x1D7FD: [
        .627,
        .01,
        .525
    ],
    0x1D7FE: [
        .621,
        .01,
        .525
    ],
    0x1D7FF: [
        .622,
        .011,
        .525
    ]
}; //# sourceMappingURL=normal.js.map
}}),
"[project]/node_modules/mathjax-full/js/output/common/fonts/tex/sans-serif-bold-italic.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.sansSerifBoldItalic = void 0;
exports.sansSerifBoldItalic = {
    0x131: [
        .458,
        0,
        .256
    ],
    0x237: [
        .458,
        .205,
        .286
    ]
}; //# sourceMappingURL=sans-serif-bold-italic.js.map
}}),
"[project]/node_modules/mathjax-full/js/output/common/fonts/tex/sans-serif-bold.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.sansSerifBold = void 0;
exports.sansSerifBold = {
    0x21: [
        .694,
        0,
        .367
    ],
    0x22: [
        .694,
        -0.442,
        .558
    ],
    0x23: [
        .694,
        .193,
        .917
    ],
    0x24: [
        .75,
        .056,
        .55
    ],
    0x25: [
        .75,
        .056,
        1.029
    ],
    0x26: [
        .716,
        .022,
        .831
    ],
    0x27: [
        .694,
        -0.442,
        .306
    ],
    0x28: [
        .75,
        .249,
        .428
    ],
    0x29: [
        .75,
        .25,
        .428
    ],
    0x2A: [
        .75,
        -0.293,
        .55
    ],
    0x2B: [
        .617,
        .116,
        .856
    ],
    0x2C: [
        .146,
        .106,
        .306
    ],
    0x2D: [
        .273,
        -0.186,
        .367
    ],
    0x2E: [
        .146,
        0,
        .306
    ],
    0x2F: [
        .75,
        .249,
        .55
    ],
    0x3A: [
        .458,
        0,
        .306
    ],
    0x3B: [
        .458,
        .106,
        .306
    ],
    0x3D: [
        .407,
        -0.094,
        .856
    ],
    0x3F: [
        .705,
        0,
        .519
    ],
    0x40: [
        .704,
        .011,
        .733
    ],
    0x5B: [
        .75,
        .25,
        .343
    ],
    0x5D: [
        .75,
        .25,
        .343
    ],
    0x5E: [
        .694,
        -0.537,
        .55
    ],
    0x5F: [
        -0.023,
        .11,
        .55
    ],
    0x7E: [
        .344,
        -0.198,
        .55
    ],
    0x131: [
        .458,
        0,
        .256
    ],
    0x237: [
        .458,
        .205,
        .286
    ],
    0x300: [
        .694,
        -0.537,
        0
    ],
    0x301: [
        .694,
        -0.537,
        0
    ],
    0x302: [
        .694,
        -0.537,
        0
    ],
    0x303: [
        .694,
        -0.548,
        0
    ],
    0x304: [
        .66,
        -0.56,
        0
    ],
    0x306: [
        .694,
        -0.552,
        0
    ],
    0x307: [
        .695,
        -0.596,
        0
    ],
    0x308: [
        .695,
        -0.595,
        0
    ],
    0x30A: [
        .694,
        -0.538,
        0
    ],
    0x30B: [
        .694,
        -0.537,
        0
    ],
    0x30C: [
        .657,
        -0.5,
        0
    ],
    0x2013: [
        .327,
        -0.24,
        .55
    ],
    0x2014: [
        .327,
        -0.24,
        1.1
    ],
    0x2015: [
        .327,
        -0.24,
        1.1
    ],
    0x2017: [
        -0.023,
        .11,
        .55
    ],
    0x2018: [
        .694,
        -0.443,
        .306
    ],
    0x2019: [
        .694,
        -0.442,
        .306
    ],
    0x201C: [
        .694,
        -0.443,
        .558
    ],
    0x201D: [
        .694,
        -0.442,
        .558
    ],
    0x2044: [
        .75,
        .249,
        .55
    ],
    0x2206: [
        .694,
        0,
        .917
    ]
}; //# sourceMappingURL=sans-serif-bold.js.map
}}),
"[project]/node_modules/mathjax-full/js/output/common/fonts/tex/sans-serif-italic.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.sansSerifItalic = void 0;
exports.sansSerifItalic = {
    0x21: [
        .694,
        0,
        .319,
        {
            ic: .036
        }
    ],
    0x22: [
        .694,
        -0.471,
        .5
    ],
    0x23: [
        .694,
        .194,
        .833,
        {
            ic: .018
        }
    ],
    0x24: [
        .75,
        .056,
        .5,
        {
            ic: .065
        }
    ],
    0x25: [
        .75,
        .056,
        .833
    ],
    0x26: [
        .716,
        .022,
        .758
    ],
    0x27: [
        .694,
        -0.471,
        .278,
        {
            ic: .057
        }
    ],
    0x28: [
        .75,
        .25,
        .389,
        {
            ic: .102
        }
    ],
    0x29: [
        .75,
        .25,
        .389
    ],
    0x2A: [
        .75,
        -0.306,
        .5,
        {
            ic: .068
        }
    ],
    0x2B: [
        .583,
        .083,
        .778
    ],
    0x2C: [
        .098,
        .125,
        .278
    ],
    0x2D: [
        .259,
        -0.186,
        .333
    ],
    0x2E: [
        .098,
        0,
        .278
    ],
    0x2F: [
        .75,
        .25,
        .5,
        {
            ic: .1
        }
    ],
    0x30: [
        .678,
        .022,
        .5,
        {
            ic: .049
        }
    ],
    0x31: [
        .678,
        0,
        .5
    ],
    0x32: [
        .678,
        0,
        .5,
        {
            ic: .051
        }
    ],
    0x33: [
        .678,
        .022,
        .5,
        {
            ic: .044
        }
    ],
    0x34: [
        .656,
        0,
        .5,
        {
            ic: .021
        }
    ],
    0x35: [
        .656,
        .022,
        .5,
        {
            ic: .055
        }
    ],
    0x36: [
        .678,
        .022,
        .5,
        {
            ic: .048
        }
    ],
    0x37: [
        .656,
        .011,
        .5,
        {
            ic: .096
        }
    ],
    0x38: [
        .678,
        .022,
        .5,
        {
            ic: .054
        }
    ],
    0x39: [
        .677,
        .022,
        .5,
        {
            ic: .045
        }
    ],
    0x3A: [
        .444,
        0,
        .278
    ],
    0x3B: [
        .444,
        .125,
        .278
    ],
    0x3D: [
        .37,
        -0.13,
        .778,
        {
            ic: .018
        }
    ],
    0x3F: [
        .704,
        0,
        .472,
        {
            ic: .064
        }
    ],
    0x40: [
        .705,
        .01,
        .667,
        {
            ic: .04
        }
    ],
    0x5B: [
        .75,
        .25,
        .289,
        {
            ic: .136
        }
    ],
    0x5D: [
        .75,
        .25,
        .289,
        {
            ic: .064
        }
    ],
    0x5E: [
        .694,
        -0.527,
        .5,
        {
            ic: .033
        }
    ],
    0x5F: [
        -0.038,
        .114,
        .5,
        {
            ic: .065
        }
    ],
    0x7E: [
        .327,
        -0.193,
        .5,
        {
            ic: .06
        }
    ],
    0x131: [
        .444,
        0,
        .239,
        {
            ic: .019
        }
    ],
    0x237: [
        .444,
        .204,
        .267,
        {
            ic: .019
        }
    ],
    0x300: [
        .694,
        -0.527,
        0
    ],
    0x301: [
        .694,
        -0.527,
        0,
        {
            ic: .063
        }
    ],
    0x302: [
        .694,
        -0.527,
        0,
        {
            ic: .033
        }
    ],
    0x303: [
        .677,
        -0.543,
        0,
        {
            ic: .06
        }
    ],
    0x304: [
        .631,
        -0.552,
        0,
        {
            ic: .064
        }
    ],
    0x306: [
        .694,
        -0.508,
        0,
        {
            ic: .073
        }
    ],
    0x307: [
        .68,
        -0.576,
        0
    ],
    0x308: [
        .68,
        -0.582,
        0,
        {
            ic: .04
        }
    ],
    0x30A: [
        .693,
        -0.527,
        0
    ],
    0x30B: [
        .694,
        -0.527,
        0,
        {
            ic: .063
        }
    ],
    0x30C: [
        .654,
        -0.487,
        0,
        {
            ic: .06
        }
    ],
    0x391: [
        .694,
        0,
        .667
    ],
    0x392: [
        .694,
        0,
        .667,
        {
            ic: .029
        }
    ],
    0x393: [
        .691,
        0,
        .542,
        {
            ic: .104
        }
    ],
    0x394: [
        .694,
        0,
        .833
    ],
    0x395: [
        .691,
        0,
        .597,
        {
            ic: .091
        }
    ],
    0x396: [
        .694,
        0,
        .611,
        {
            ic: .091
        }
    ],
    0x397: [
        .694,
        0,
        .708,
        {
            ic: .06
        }
    ],
    0x398: [
        .715,
        .022,
        .778,
        {
            ic: .026
        }
    ],
    0x399: [
        .694,
        0,
        .278,
        {
            ic: .06
        }
    ],
    0x39A: [
        .694,
        0,
        .694,
        {
            ic: .091
        }
    ],
    0x39B: [
        .694,
        0,
        .611
    ],
    0x39C: [
        .694,
        0,
        .875,
        {
            ic: .054
        }
    ],
    0x39D: [
        .694,
        0,
        .708,
        {
            ic: .058
        }
    ],
    0x39E: [
        .688,
        0,
        .667,
        {
            ic: .098
        }
    ],
    0x39F: [
        .716,
        .022,
        .736,
        {
            ic: .027
        }
    ],
    0x3A0: [
        .691,
        0,
        .708,
        {
            ic: .06
        }
    ],
    0x3A1: [
        .694,
        0,
        .639,
        {
            ic: .051
        }
    ],
    0x3A3: [
        .694,
        0,
        .722,
        {
            ic: .091
        }
    ],
    0x3A4: [
        .688,
        0,
        .681,
        {
            ic: .109
        }
    ],
    0x3A5: [
        .716,
        0,
        .778,
        {
            ic: .065
        }
    ],
    0x3A6: [
        .694,
        0,
        .722,
        {
            ic: .021
        }
    ],
    0x3A7: [
        .694,
        0,
        .667,
        {
            ic: .091
        }
    ],
    0x3A8: [
        .694,
        0,
        .778,
        {
            ic: .076
        }
    ],
    0x3A9: [
        .716,
        0,
        .722,
        {
            ic: .047
        }
    ],
    0x2013: [
        .312,
        -0.236,
        .5,
        {
            ic: .065
        }
    ],
    0x2014: [
        .312,
        -0.236,
        1,
        {
            ic: .065
        }
    ],
    0x2015: [
        .312,
        -0.236,
        1,
        {
            ic: .065
        }
    ],
    0x2017: [
        -0.038,
        .114,
        .5,
        {
            ic: .065
        }
    ],
    0x2018: [
        .694,
        -0.471,
        .278,
        {
            ic: .058
        }
    ],
    0x2019: [
        .694,
        -0.471,
        .278,
        {
            ic: .057
        }
    ],
    0x201C: [
        .694,
        -0.471,
        .5,
        {
            ic: .114
        }
    ],
    0x201D: [
        .694,
        -0.471,
        .5
    ],
    0x2044: [
        .75,
        .25,
        .5,
        {
            ic: .1
        }
    ],
    0x2206: [
        .694,
        0,
        .833
    ]
}; //# sourceMappingURL=sans-serif-italic.js.map
}}),
"[project]/node_modules/mathjax-full/js/output/common/fonts/tex/sans-serif.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.sansSerif = void 0;
exports.sansSerif = {
    0x21: [
        .694,
        0,
        .319
    ],
    0x22: [
        .694,
        -0.471,
        .5
    ],
    0x23: [
        .694,
        .194,
        .833
    ],
    0x24: [
        .75,
        .056,
        .5
    ],
    0x25: [
        .75,
        .056,
        .833
    ],
    0x26: [
        .716,
        .022,
        .758
    ],
    0x27: [
        .694,
        -0.471,
        .278
    ],
    0x28: [
        .75,
        .25,
        .389
    ],
    0x29: [
        .75,
        .25,
        .389
    ],
    0x2A: [
        .75,
        -0.306,
        .5
    ],
    0x2B: [
        .583,
        .082,
        .778
    ],
    0x2C: [
        .098,
        .125,
        .278
    ],
    0x2D: [
        .259,
        -0.186,
        .333
    ],
    0x2E: [
        .098,
        0,
        .278
    ],
    0x2F: [
        .75,
        .25,
        .5
    ],
    0x3A: [
        .444,
        0,
        .278
    ],
    0x3B: [
        .444,
        .125,
        .278
    ],
    0x3D: [
        .37,
        -0.13,
        .778
    ],
    0x3F: [
        .704,
        0,
        .472
    ],
    0x40: [
        .704,
        .011,
        .667
    ],
    0x5B: [
        .75,
        .25,
        .289
    ],
    0x5D: [
        .75,
        .25,
        .289
    ],
    0x5E: [
        .694,
        -0.527,
        .5
    ],
    0x5F: [
        -0.038,
        .114,
        .5
    ],
    0x7E: [
        .327,
        -0.193,
        .5
    ],
    0x131: [
        .444,
        0,
        .239
    ],
    0x237: [
        .444,
        .205,
        .267
    ],
    0x300: [
        .694,
        -0.527,
        0
    ],
    0x301: [
        .694,
        -0.527,
        0
    ],
    0x302: [
        .694,
        -0.527,
        0
    ],
    0x303: [
        .677,
        -0.543,
        0
    ],
    0x304: [
        .631,
        -0.552,
        0
    ],
    0x306: [
        .694,
        -0.508,
        0
    ],
    0x307: [
        .68,
        -0.576,
        0
    ],
    0x308: [
        .68,
        -0.582,
        0
    ],
    0x30A: [
        .694,
        -0.527,
        0
    ],
    0x30B: [
        .694,
        -0.527,
        0
    ],
    0x30C: [
        .654,
        -0.487,
        0
    ],
    0x391: [
        .694,
        0,
        .667
    ],
    0x392: [
        .694,
        0,
        .667
    ],
    0x393: [
        .691,
        0,
        .542
    ],
    0x394: [
        .694,
        0,
        .833
    ],
    0x395: [
        .691,
        0,
        .597
    ],
    0x396: [
        .694,
        0,
        .611
    ],
    0x397: [
        .694,
        0,
        .708
    ],
    0x398: [
        .716,
        .021,
        .778
    ],
    0x399: [
        .694,
        0,
        .278
    ],
    0x39A: [
        .694,
        0,
        .694
    ],
    0x39B: [
        .694,
        0,
        .611
    ],
    0x39C: [
        .694,
        0,
        .875
    ],
    0x39D: [
        .694,
        0,
        .708
    ],
    0x39E: [
        .688,
        0,
        .667
    ],
    0x39F: [
        .715,
        .022,
        .736
    ],
    0x3A0: [
        .691,
        0,
        .708
    ],
    0x3A1: [
        .694,
        0,
        .639
    ],
    0x3A3: [
        .694,
        0,
        .722
    ],
    0x3A4: [
        .688,
        0,
        .681
    ],
    0x3A5: [
        .716,
        0,
        .778
    ],
    0x3A6: [
        .694,
        0,
        .722
    ],
    0x3A7: [
        .694,
        0,
        .667
    ],
    0x3A8: [
        .694,
        0,
        .778
    ],
    0x3A9: [
        .716,
        0,
        .722
    ],
    0x2013: [
        .312,
        -0.236,
        .5
    ],
    0x2014: [
        .312,
        -0.236,
        1
    ],
    0x2015: [
        .312,
        -0.236,
        1
    ],
    0x2017: [
        -0.038,
        .114,
        .5
    ],
    0x2018: [
        .694,
        -0.471,
        .278
    ],
    0x2019: [
        .694,
        -0.471,
        .278
    ],
    0x201C: [
        .694,
        -0.471,
        .5
    ],
    0x201D: [
        .694,
        -0.471,
        .5
    ],
    0x2044: [
        .75,
        .25,
        .5
    ],
    0x2206: [
        .694,
        0,
        .833
    ]
}; //# sourceMappingURL=sans-serif.js.map
}}),
"[project]/node_modules/mathjax-full/js/output/common/fonts/tex/script-bold.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.scriptBold = void 0;
exports.scriptBold = {}; //# sourceMappingURL=script-bold.js.map
}}),
"[project]/node_modules/mathjax-full/js/output/common/fonts/tex/script.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.script = void 0;
exports.script = {}; //# sourceMappingURL=script.js.map
}}),
"[project]/node_modules/mathjax-full/js/output/common/fonts/tex/smallop.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.smallop = void 0;
exports.smallop = {
    0x28: [
        .85,
        .349,
        .458
    ],
    0x29: [
        .85,
        .349,
        .458
    ],
    0x2F: [
        .85,
        .349,
        .578
    ],
    0x5B: [
        .85,
        .349,
        .417
    ],
    0x5C: [
        .85,
        .349,
        .578
    ],
    0x5D: [
        .85,
        .349,
        .417
    ],
    0x7B: [
        .85,
        .349,
        .583
    ],
    0x7D: [
        .85,
        .349,
        .583
    ],
    0x2C6: [
        .744,
        -0.551,
        .556
    ],
    0x2DC: [
        .722,
        -0.597,
        .556
    ],
    0x302: [
        .744,
        -0.551,
        0
    ],
    0x303: [
        .722,
        -0.597,
        0
    ],
    0x2016: [
        .602,
        0,
        .778
    ],
    0x2044: [
        .85,
        .349,
        .578
    ],
    0x2191: [
        .6,
        0,
        .667
    ],
    0x2193: [
        .6,
        0,
        .667
    ],
    0x21D1: [
        .599,
        0,
        .778
    ],
    0x21D3: [
        .6,
        0,
        .778
    ],
    0x220F: [
        .75,
        .25,
        .944
    ],
    0x2210: [
        .75,
        .25,
        .944
    ],
    0x2211: [
        .75,
        .25,
        1.056
    ],
    0x221A: [
        .85,
        .35,
        1,
        {
            ic: .02
        }
    ],
    0x2223: [
        .627,
        .015,
        .333
    ],
    0x2225: [
        .627,
        .015,
        .556
    ],
    0x222B: [
        .805,
        .306,
        .472,
        {
            ic: .138
        }
    ],
    0x222C: [
        .805,
        .306,
        .819,
        {
            ic: .138
        }
    ],
    0x222D: [
        .805,
        .306,
        1.166,
        {
            ic: .138
        }
    ],
    0x222E: [
        .805,
        .306,
        .472,
        {
            ic: .138
        }
    ],
    0x22C0: [
        .75,
        .249,
        .833
    ],
    0x22C1: [
        .75,
        .249,
        .833
    ],
    0x22C2: [
        .75,
        .249,
        .833
    ],
    0x22C3: [
        .75,
        .249,
        .833
    ],
    0x2308: [
        .85,
        .349,
        .472
    ],
    0x2309: [
        .85,
        .349,
        .472
    ],
    0x230A: [
        .85,
        .349,
        .472
    ],
    0x230B: [
        .85,
        .349,
        .472
    ],
    0x2329: [
        .85,
        .35,
        .472
    ],
    0x232A: [
        .85,
        .35,
        .472
    ],
    0x23D0: [
        .602,
        0,
        .667
    ],
    0x2758: [
        .627,
        .015,
        .333
    ],
    0x27E8: [
        .85,
        .35,
        .472
    ],
    0x27E9: [
        .85,
        .35,
        .472
    ],
    0x2A00: [
        .75,
        .25,
        1.111
    ],
    0x2A01: [
        .75,
        .25,
        1.111
    ],
    0x2A02: [
        .75,
        .25,
        1.111
    ],
    0x2A04: [
        .75,
        .249,
        .833
    ],
    0x2A06: [
        .75,
        .249,
        .833
    ],
    0x2A0C: [
        .805,
        .306,
        1.638,
        {
            ic: .138
        }
    ],
    0x3008: [
        .85,
        .35,
        .472
    ],
    0x3009: [
        .85,
        .35,
        .472
    ]
}; //# sourceMappingURL=smallop.js.map
}}),
"[project]/node_modules/mathjax-full/js/output/common/fonts/tex/tex-calligraphic-bold.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.texCalligraphicBold = void 0;
exports.texCalligraphicBold = {
    0x41: [
        .751,
        .049,
        .921,
        {
            ic: .068,
            sk: .224
        }
    ],
    0x42: [
        .705,
        .017,
        .748,
        {
            sk: .16
        }
    ],
    0x43: [
        .703,
        .02,
        .613,
        {
            sk: .16
        }
    ],
    0x44: [
        .686,
        0,
        .892,
        {
            sk: .0958
        }
    ],
    0x45: [
        .703,
        .016,
        .607,
        {
            ic: .02,
            sk: .128
        }
    ],
    0x46: [
        .686,
        .03,
        .814,
        {
            ic: .116,
            sk: .128
        }
    ],
    0x47: [
        .703,
        .113,
        .682,
        {
            sk: .128
        }
    ],
    0x48: [
        .686,
        .048,
        .987,
        {
            sk: .128
        }
    ],
    0x49: [
        .686,
        0,
        .642,
        {
            ic: .104,
            sk: .0319
        }
    ],
    0x4A: [
        .686,
        .114,
        .779,
        {
            ic: .158,
            sk: .192
        }
    ],
    0x4B: [
        .703,
        .017,
        .871,
        {
            sk: .0639
        }
    ],
    0x4C: [
        .703,
        .017,
        .788,
        {
            sk: .16
        }
    ],
    0x4D: [
        .703,
        .049,
        1.378,
        {
            sk: .16
        }
    ],
    0x4E: [
        .84,
        .049,
        .937,
        {
            ic: .168,
            sk: .0958
        }
    ],
    0x4F: [
        .703,
        .017,
        .906,
        {
            sk: .128
        }
    ],
    0x50: [
        .686,
        .067,
        .81,
        {
            ic: .036,
            sk: .0958
        }
    ],
    0x51: [
        .703,
        .146,
        .939,
        {
            sk: .128
        }
    ],
    0x52: [
        .686,
        .017,
        .99,
        {
            sk: .0958
        }
    ],
    0x53: [
        .703,
        .016,
        .696,
        {
            ic: .025,
            sk: .16
        }
    ],
    0x54: [
        .72,
        .069,
        .644,
        {
            ic: .303,
            sk: .0319
        }
    ],
    0x55: [
        .686,
        .024,
        .715,
        {
            ic: .056,
            sk: .0958
        }
    ],
    0x56: [
        .686,
        .077,
        .737,
        {
            ic: .037,
            sk: .0319
        }
    ],
    0x57: [
        .686,
        .077,
        1.169,
        {
            ic: .037,
            sk: .0958
        }
    ],
    0x58: [
        .686,
        0,
        .817,
        {
            ic: .089,
            sk: .16
        }
    ],
    0x59: [
        .686,
        .164,
        .759,
        {
            ic: .038,
            sk: .0958
        }
    ],
    0x5A: [
        .686,
        0,
        .818,
        {
            ic: .035,
            sk: .16
        }
    ],
    0x131: [
        .452,
        .008,
        .394,
        {
            sk: .0319
        }
    ],
    0x237: [
        .451,
        .201,
        .439,
        {
            sk: .0958
        }
    ]
}; //# sourceMappingURL=tex-calligraphic-bold.js.map
}}),
"[project]/node_modules/mathjax-full/js/output/common/fonts/tex/tex-calligraphic.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.texCalligraphic = void 0;
exports.texCalligraphic = {
    0x41: [
        .728,
        .05,
        .798,
        {
            ic: .021,
            sk: .194
        }
    ],
    0x42: [
        .705,
        .022,
        .657,
        {
            sk: .139
        }
    ],
    0x43: [
        .705,
        .025,
        .527,
        {
            sk: .139
        }
    ],
    0x44: [
        .683,
        0,
        .771,
        {
            sk: .0833
        }
    ],
    0x45: [
        .705,
        .022,
        .528,
        {
            ic: .036,
            sk: .111
        }
    ],
    0x46: [
        .683,
        .032,
        .719,
        {
            ic: .11,
            sk: .111
        }
    ],
    0x47: [
        .704,
        .119,
        .595,
        {
            sk: .111
        }
    ],
    0x48: [
        .683,
        .048,
        .845,
        {
            sk: .111
        }
    ],
    0x49: [
        .683,
        0,
        .545,
        {
            ic: .097,
            sk: .0278
        }
    ],
    0x4A: [
        .683,
        .119,
        .678,
        {
            ic: .161,
            sk: .167
        }
    ],
    0x4B: [
        .705,
        .022,
        .762,
        {
            sk: .0556
        }
    ],
    0x4C: [
        .705,
        .022,
        .69,
        {
            sk: .139
        }
    ],
    0x4D: [
        .705,
        .05,
        1.201,
        {
            sk: .139
        }
    ],
    0x4E: [
        .789,
        .05,
        .82,
        {
            ic: .159,
            sk: .0833
        }
    ],
    0x4F: [
        .705,
        .022,
        .796,
        {
            sk: .111
        }
    ],
    0x50: [
        .683,
        .057,
        .696,
        {
            ic: .037,
            sk: .0833
        }
    ],
    0x51: [
        .705,
        .131,
        .817,
        {
            sk: .111
        }
    ],
    0x52: [
        .682,
        .022,
        .848,
        {
            sk: .0833
        }
    ],
    0x53: [
        .705,
        .022,
        .606,
        {
            ic: .036,
            sk: .139
        }
    ],
    0x54: [
        .717,
        .068,
        .545,
        {
            ic: .288,
            sk: .0278
        }
    ],
    0x55: [
        .683,
        .028,
        .626,
        {
            ic: .061,
            sk: .0833
        }
    ],
    0x56: [
        .683,
        .052,
        .613,
        {
            ic: .045,
            sk: .0278
        }
    ],
    0x57: [
        .683,
        .053,
        .988,
        {
            ic: .046,
            sk: .0833
        }
    ],
    0x58: [
        .683,
        0,
        .713,
        {
            ic: .094,
            sk: .139
        }
    ],
    0x59: [
        .683,
        .143,
        .668,
        {
            ic: .046,
            sk: .0833
        }
    ],
    0x5A: [
        .683,
        0,
        .725,
        {
            ic: .042,
            sk: .139
        }
    ]
}; //# sourceMappingURL=tex-calligraphic.js.map
}}),
"[project]/node_modules/mathjax-full/js/output/common/fonts/tex/tex-mathit.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.texMathit = void 0;
exports.texMathit = {
    0x41: [
        .716,
        0,
        .743
    ],
    0x42: [
        .683,
        0,
        .704
    ],
    0x43: [
        .705,
        .021,
        .716
    ],
    0x44: [
        .683,
        0,
        .755
    ],
    0x45: [
        .68,
        0,
        .678
    ],
    0x46: [
        .68,
        0,
        .653
    ],
    0x47: [
        .705,
        .022,
        .774
    ],
    0x48: [
        .683,
        0,
        .743
    ],
    0x49: [
        .683,
        0,
        .386
    ],
    0x4A: [
        .683,
        .021,
        .525
    ],
    0x4B: [
        .683,
        0,
        .769
    ],
    0x4C: [
        .683,
        0,
        .627
    ],
    0x4D: [
        .683,
        0,
        .897
    ],
    0x4E: [
        .683,
        0,
        .743
    ],
    0x4F: [
        .704,
        .022,
        .767
    ],
    0x50: [
        .683,
        0,
        .678
    ],
    0x51: [
        .704,
        .194,
        .767
    ],
    0x52: [
        .683,
        .022,
        .729
    ],
    0x53: [
        .705,
        .022,
        .562
    ],
    0x54: [
        .677,
        0,
        .716
    ],
    0x55: [
        .683,
        .022,
        .743
    ],
    0x56: [
        .683,
        .022,
        .743
    ],
    0x57: [
        .683,
        .022,
        .999
    ],
    0x58: [
        .683,
        0,
        .743
    ],
    0x59: [
        .683,
        0,
        .743
    ],
    0x5A: [
        .683,
        0,
        .613
    ],
    0x61: [
        .442,
        .011,
        .511
    ],
    0x62: [
        .694,
        .011,
        .46
    ],
    0x63: [
        .441,
        .01,
        .46
    ],
    0x64: [
        .694,
        .011,
        .511
    ],
    0x65: [
        .442,
        .01,
        .46
    ],
    0x66: [
        .705,
        .204,
        .307
    ],
    0x67: [
        .442,
        .205,
        .46
    ],
    0x68: [
        .694,
        .011,
        .511
    ],
    0x69: [
        .656,
        .01,
        .307
    ],
    0x6A: [
        .656,
        .204,
        .307
    ],
    0x6B: [
        .694,
        .011,
        .46
    ],
    0x6C: [
        .694,
        .011,
        .256
    ],
    0x6D: [
        .442,
        .011,
        .818
    ],
    0x6E: [
        .442,
        .011,
        .562
    ],
    0x6F: [
        .442,
        .011,
        .511
    ],
    0x70: [
        .442,
        .194,
        .511
    ],
    0x71: [
        .442,
        .194,
        .46
    ],
    0x72: [
        .442,
        .011,
        .422
    ],
    0x73: [
        .442,
        .011,
        .409
    ],
    0x74: [
        .626,
        .011,
        .332
    ],
    0x75: [
        .441,
        .011,
        .537
    ],
    0x76: [
        .443,
        .01,
        .46
    ],
    0x77: [
        .443,
        .011,
        .664
    ],
    0x78: [
        .442,
        .011,
        .464
    ],
    0x79: [
        .441,
        .205,
        .486
    ],
    0x7A: [
        .442,
        .011,
        .409
    ]
}; //# sourceMappingURL=tex-mathit.js.map
}}),
"[project]/node_modules/mathjax-full/js/output/common/fonts/tex/tex-oldstyle-bold.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.texOldstyleBold = void 0;
exports.texOldstyleBold = {
    0x30: [
        .46,
        .017,
        .575
    ],
    0x31: [
        .461,
        0,
        .575
    ],
    0x32: [
        .46,
        0,
        .575
    ],
    0x33: [
        .461,
        .211,
        .575
    ],
    0x34: [
        .469,
        .194,
        .575
    ],
    0x35: [
        .461,
        .211,
        .575
    ],
    0x36: [
        .66,
        .017,
        .575
    ],
    0x37: [
        .476,
        .211,
        .575
    ],
    0x38: [
        .661,
        .017,
        .575
    ],
    0x39: [
        .461,
        .21,
        .575
    ],
    0x41: [
        .751,
        .049,
        .921,
        {
            ic: .068,
            sk: .224
        }
    ],
    0x42: [
        .705,
        .017,
        .748,
        {
            sk: .16
        }
    ],
    0x43: [
        .703,
        .02,
        .613,
        {
            sk: .16
        }
    ],
    0x44: [
        .686,
        0,
        .892,
        {
            sk: .0958
        }
    ],
    0x45: [
        .703,
        .016,
        .607,
        {
            ic: .02,
            sk: .128
        }
    ],
    0x46: [
        .686,
        .03,
        .814,
        {
            ic: .116,
            sk: .128
        }
    ],
    0x47: [
        .703,
        .113,
        .682,
        {
            sk: .128
        }
    ],
    0x48: [
        .686,
        .048,
        .987,
        {
            sk: .128
        }
    ],
    0x49: [
        .686,
        0,
        .642,
        {
            ic: .104,
            sk: .0319
        }
    ],
    0x4A: [
        .686,
        .114,
        .779,
        {
            ic: .158,
            sk: .192
        }
    ],
    0x4B: [
        .703,
        .017,
        .871,
        {
            sk: .0639
        }
    ],
    0x4C: [
        .703,
        .017,
        .788,
        {
            sk: .16
        }
    ],
    0x4D: [
        .703,
        .049,
        1.378,
        {
            sk: .16
        }
    ],
    0x4E: [
        .84,
        .049,
        .937,
        {
            ic: .168,
            sk: .0958
        }
    ],
    0x4F: [
        .703,
        .017,
        .906,
        {
            sk: .128
        }
    ],
    0x50: [
        .686,
        .067,
        .81,
        {
            ic: .036,
            sk: .0958
        }
    ],
    0x51: [
        .703,
        .146,
        .939,
        {
            sk: .128
        }
    ],
    0x52: [
        .686,
        .017,
        .99,
        {
            sk: .0958
        }
    ],
    0x53: [
        .703,
        .016,
        .696,
        {
            ic: .025,
            sk: .16
        }
    ],
    0x54: [
        .72,
        .069,
        .644,
        {
            ic: .303,
            sk: .0319
        }
    ],
    0x55: [
        .686,
        .024,
        .715,
        {
            ic: .056,
            sk: .0958
        }
    ],
    0x56: [
        .686,
        .077,
        .737,
        {
            ic: .037,
            sk: .0319
        }
    ],
    0x57: [
        .686,
        .077,
        1.169,
        {
            ic: .037,
            sk: .0958
        }
    ],
    0x58: [
        .686,
        0,
        .817,
        {
            ic: .089,
            sk: .16
        }
    ],
    0x59: [
        .686,
        .164,
        .759,
        {
            ic: .038,
            sk: .0958
        }
    ],
    0x5A: [
        .686,
        0,
        .818,
        {
            ic: .035,
            sk: .16
        }
    ]
}; //# sourceMappingURL=tex-oldstyle-bold.js.map
}}),
"[project]/node_modules/mathjax-full/js/output/common/fonts/tex/tex-oldstyle.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.texOldstyle = void 0;
exports.texOldstyle = {
    0x30: [
        .452,
        .022,
        .5
    ],
    0x31: [
        .453,
        0,
        .5
    ],
    0x32: [
        .453,
        0,
        .5
    ],
    0x33: [
        .452,
        .216,
        .5
    ],
    0x34: [
        .464,
        .194,
        .5
    ],
    0x35: [
        .453,
        .216,
        .5
    ],
    0x36: [
        .665,
        .022,
        .5
    ],
    0x37: [
        .463,
        .216,
        .5
    ],
    0x38: [
        .666,
        .021,
        .5
    ],
    0x39: [
        .453,
        .216,
        .5
    ],
    0x41: [
        .728,
        .05,
        .798,
        {
            ic: .021,
            sk: .194
        }
    ],
    0x42: [
        .705,
        .022,
        .657,
        {
            sk: .139
        }
    ],
    0x43: [
        .705,
        .025,
        .527,
        {
            sk: .139
        }
    ],
    0x44: [
        .683,
        0,
        .771,
        {
            sk: .0833
        }
    ],
    0x45: [
        .705,
        .022,
        .528,
        {
            ic: .036,
            sk: .111
        }
    ],
    0x46: [
        .683,
        .032,
        .719,
        {
            ic: .11,
            sk: .111
        }
    ],
    0x47: [
        .704,
        .119,
        .595,
        {
            sk: .111
        }
    ],
    0x48: [
        .683,
        .048,
        .845,
        {
            sk: .111
        }
    ],
    0x49: [
        .683,
        0,
        .545,
        {
            ic: .097,
            sk: .0278
        }
    ],
    0x4A: [
        .683,
        .119,
        .678,
        {
            ic: .161,
            sk: .167
        }
    ],
    0x4B: [
        .705,
        .022,
        .762,
        {
            sk: .0556
        }
    ],
    0x4C: [
        .705,
        .022,
        .69,
        {
            sk: .139
        }
    ],
    0x4D: [
        .705,
        .05,
        1.201,
        {
            sk: .139
        }
    ],
    0x4E: [
        .789,
        .05,
        .82,
        {
            ic: .159,
            sk: .0833
        }
    ],
    0x4F: [
        .705,
        .022,
        .796,
        {
            sk: .111
        }
    ],
    0x50: [
        .683,
        .057,
        .696,
        {
            ic: .037,
            sk: .0833
        }
    ],
    0x51: [
        .705,
        .131,
        .817,
        {
            sk: .111
        }
    ],
    0x52: [
        .682,
        .022,
        .848,
        {
            sk: .0833
        }
    ],
    0x53: [
        .705,
        .022,
        .606,
        {
            ic: .036,
            sk: .139
        }
    ],
    0x54: [
        .717,
        .068,
        .545,
        {
            ic: .288,
            sk: .0278
        }
    ],
    0x55: [
        .683,
        .028,
        .626,
        {
            ic: .061,
            sk: .0833
        }
    ],
    0x56: [
        .683,
        .052,
        .613,
        {
            ic: .045,
            sk: .0278
        }
    ],
    0x57: [
        .683,
        .053,
        .988,
        {
            ic: .046,
            sk: .0833
        }
    ],
    0x58: [
        .683,
        0,
        .713,
        {
            ic: .094,
            sk: .139
        }
    ],
    0x59: [
        .683,
        .143,
        .668,
        {
            ic: .046,
            sk: .0833
        }
    ],
    0x5A: [
        .683,
        0,
        .725,
        {
            ic: .042,
            sk: .139
        }
    ]
}; //# sourceMappingURL=tex-oldstyle.js.map
}}),
"[project]/node_modules/mathjax-full/js/output/common/fonts/tex/tex-size3.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.texSize3 = void 0;
exports.texSize3 = {
    0x28: [
        1.45,
        .949,
        .736
    ],
    0x29: [
        1.45,
        .949,
        .736
    ],
    0x2F: [
        1.45,
        .949,
        1.044
    ],
    0x5B: [
        1.45,
        .949,
        .528
    ],
    0x5C: [
        1.45,
        .949,
        1.044
    ],
    0x5D: [
        1.45,
        .949,
        .528
    ],
    0x7B: [
        1.45,
        .949,
        .75
    ],
    0x7D: [
        1.45,
        .949,
        .75
    ],
    0x2C6: [
        .772,
        -0.564,
        1.444
    ],
    0x2DC: [
        .749,
        -0.61,
        1.444
    ],
    0x302: [
        .772,
        -0.564,
        0
    ],
    0x303: [
        .749,
        -0.61,
        0
    ],
    0x2044: [
        1.45,
        .949,
        1.044
    ],
    0x221A: [
        1.45,
        .95,
        1,
        {
            ic: .02
        }
    ],
    0x2308: [
        1.45,
        .949,
        .583
    ],
    0x2309: [
        1.45,
        .949,
        .583
    ],
    0x230A: [
        1.45,
        .949,
        .583
    ],
    0x230B: [
        1.45,
        .949,
        .583
    ],
    0x2329: [
        1.45,
        .95,
        .75
    ],
    0x232A: [
        1.45,
        .949,
        .75
    ],
    0x27E8: [
        1.45,
        .95,
        .75
    ],
    0x27E9: [
        1.45,
        .949,
        .75
    ],
    0x3008: [
        1.45,
        .95,
        .75
    ],
    0x3009: [
        1.45,
        .949,
        .75
    ]
}; //# sourceMappingURL=tex-size3.js.map
}}),
"[project]/node_modules/mathjax-full/js/output/common/fonts/tex/tex-size4.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.texSize4 = void 0;
exports.texSize4 = {
    0x28: [
        1.75,
        1.249,
        .792
    ],
    0x29: [
        1.75,
        1.249,
        .792
    ],
    0x2F: [
        1.75,
        1.249,
        1.278
    ],
    0x5B: [
        1.75,
        1.249,
        .583
    ],
    0x5C: [
        1.75,
        1.249,
        1.278
    ],
    0x5D: [
        1.75,
        1.249,
        .583
    ],
    0x7B: [
        1.75,
        1.249,
        .806
    ],
    0x7D: [
        1.75,
        1.249,
        .806
    ],
    0x2C6: [
        .845,
        -0.561,
        1.889,
        {
            ic: .013
        }
    ],
    0x2DC: [
        .823,
        -0.583,
        1.889
    ],
    0x302: [
        .845,
        -0.561,
        0,
        {
            ic: .013
        }
    ],
    0x303: [
        .823,
        -0.583,
        0
    ],
    0x2044: [
        1.75,
        1.249,
        1.278
    ],
    0x221A: [
        1.75,
        1.25,
        1,
        {
            ic: .02
        }
    ],
    0x2308: [
        1.75,
        1.249,
        .639
    ],
    0x2309: [
        1.75,
        1.249,
        .639
    ],
    0x230A: [
        1.75,
        1.249,
        .639
    ],
    0x230B: [
        1.75,
        1.249,
        .639
    ],
    0x2329: [
        1.75,
        1.248,
        .806
    ],
    0x232A: [
        1.75,
        1.248,
        .806
    ],
    0x239B: [
        1.154,
        .655,
        .875
    ],
    0x239C: [
        .61,
        .01,
        .875
    ],
    0x239D: [
        1.165,
        .644,
        .875
    ],
    0x239E: [
        1.154,
        .655,
        .875
    ],
    0x239F: [
        .61,
        .01,
        .875
    ],
    0x23A0: [
        1.165,
        .644,
        .875
    ],
    0x23A1: [
        1.154,
        .645,
        .667
    ],
    0x23A2: [
        .602,
        0,
        .667
    ],
    0x23A3: [
        1.155,
        .644,
        .667
    ],
    0x23A4: [
        1.154,
        .645,
        .667
    ],
    0x23A5: [
        .602,
        0,
        .667
    ],
    0x23A6: [
        1.155,
        .644,
        .667
    ],
    0x23A7: [
        .899,
        .01,
        .889
    ],
    0x23A8: [
        1.16,
        .66,
        .889
    ],
    0x23A9: [
        .01,
        .899,
        .889
    ],
    0x23AA: [
        .29,
        .015,
        .889
    ],
    0x23AB: [
        .899,
        .01,
        .889
    ],
    0x23AC: [
        1.16,
        .66,
        .889
    ],
    0x23AD: [
        .01,
        .899,
        .889
    ],
    0x23B7: [
        .935,
        .885,
        1.056
    ],
    0x27E8: [
        1.75,
        1.248,
        .806
    ],
    0x27E9: [
        1.75,
        1.248,
        .806
    ],
    0x3008: [
        1.75,
        1.248,
        .806
    ],
    0x3009: [
        1.75,
        1.248,
        .806
    ],
    0xE000: [
        .625,
        .014,
        1.056
    ],
    0xE001: [
        .605,
        .014,
        1.056,
        {
            ic: .02
        }
    ],
    0xE150: [
        .12,
        .213,
        .45,
        {
            ic: .01
        }
    ],
    0xE151: [
        .12,
        .213,
        .45,
        {
            ic: .024
        }
    ],
    0xE152: [
        .333,
        0,
        .45,
        {
            ic: .01
        }
    ],
    0xE153: [
        .333,
        0,
        .45,
        {
            ic: .024
        }
    ],
    0xE154: [
        .32,
        .2,
        .4,
        {
            ic: .01
        }
    ],
    0xE155: [
        .333,
        0,
        .9,
        {
            ic: .01
        }
    ],
    0xE156: [
        .12,
        .213,
        .9,
        {
            ic: .01
        }
    ]
}; //# sourceMappingURL=tex-size4.js.map
}}),
"[project]/node_modules/mathjax-full/js/output/common/fonts/tex/tex-variant.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.texVariant = void 0;
exports.texVariant = {
    0x2C6: [
        .845,
        -0.561,
        2.333,
        {
            ic: .013
        }
    ],
    0x2DC: [
        .899,
        -0.628,
        2.333
    ],
    0x302: [
        .845,
        -0.561,
        0,
        {
            ic: .013
        }
    ],
    0x303: [
        .899,
        -0.628,
        0
    ],
    0x3F0: [
        .434,
        .006,
        .667,
        {
            ic: .067
        }
    ],
    0x210F: [
        .695,
        .013,
        .54,
        {
            ic: .022
        }
    ],
    0x2190: [
        .437,
        -0.064,
        .5
    ],
    0x2192: [
        .437,
        -0.064,
        .5
    ],
    0x21CC: [
        .514,
        .014,
        1
    ],
    0x2204: [
        .86,
        .166,
        .556
    ],
    0x2205: [
        .587,
        0,
        .778
    ],
    0x2212: [
        .27,
        -0.23,
        .5
    ],
    0x2216: [
        .43,
        .023,
        .778
    ],
    0x221D: [
        .472,
        -0.028,
        .778
    ],
    0x2223: [
        .43,
        .023,
        .222
    ],
    0x2224: [
        .43,
        .023,
        .222,
        {
            ic: .018
        }
    ],
    0x2225: [
        .431,
        .023,
        .389
    ],
    0x2226: [
        .431,
        .024,
        .389,
        {
            ic: .018
        }
    ],
    0x223C: [
        .365,
        -0.132,
        .778
    ],
    0x2248: [
        .481,
        -0.05,
        .778
    ],
    0x2268: [
        .752,
        .284,
        .778
    ],
    0x2269: [
        .752,
        .284,
        .778
    ],
    0x2270: [
        .919,
        .421,
        .778
    ],
    0x2271: [
        .919,
        .421,
        .778
    ],
    0x2288: [
        .828,
        .33,
        .778
    ],
    0x2289: [
        .828,
        .33,
        .778
    ],
    0x228A: [
        .634,
        .255,
        .778
    ],
    0x228B: [
        .634,
        .254,
        .778
    ],
    0x22A8: [
        .694,
        0,
        .611
    ],
    0x22C5: [
        .189,
        0,
        .278
    ],
    0x2322: [
        .378,
        -0.122,
        .778
    ],
    0x2323: [
        .378,
        -0.143,
        .778
    ],
    0x25B3: [
        .575,
        .02,
        .722
    ],
    0x25BD: [
        .576,
        .019,
        .722
    ],
    0x2A87: [
        .801,
        .303,
        .778
    ],
    0x2A88: [
        .801,
        .303,
        .778
    ],
    0x2ACB: [
        .752,
        .332,
        .778
    ],
    0x2ACC: [
        .752,
        .333,
        .778
    ]
}; //# sourceMappingURL=tex-variant.js.map
}}),
"[project]/node_modules/mathjax-full/js/output/common/fonts/tex/delimiters.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.delimiters = exports.VSIZES = exports.HDW3 = exports.HDW2 = exports.HDW1 = void 0;
var FontData_js_1 = __turbopack_context__.r("[project]/node_modules/mathjax-full/js/output/common/FontData.js [app-rsc] (ecmascript)");
exports.HDW1 = [
    .75,
    .25,
    .875
];
exports.HDW2 = [
    .85,
    .349,
    .667
];
exports.HDW3 = [
    .583,
    .082,
    .5
];
exports.VSIZES = [
    1,
    1.2,
    1.8,
    2.4,
    3
];
var DELIM2F = {
    c: 0x2F,
    dir: FontData_js_1.V,
    sizes: exports.VSIZES
};
var DELIMAF = {
    c: 0xAF,
    dir: FontData_js_1.H,
    sizes: [
        .5
    ],
    stretch: [
        0,
        0xAF
    ],
    HDW: [
        .59,
        -0.544,
        .5
    ]
};
var DELIM2C6 = {
    c: 0x2C6,
    dir: FontData_js_1.H,
    sizes: [
        .5,
        .556,
        1,
        1.444,
        1.889
    ]
};
var DELIM2DC = {
    c: 0x2DC,
    dir: FontData_js_1.H,
    sizes: [
        .5,
        .556,
        1,
        1.444,
        1.889
    ]
};
var DELIM2013 = {
    c: 0x2013,
    dir: FontData_js_1.H,
    sizes: [
        .5
    ],
    stretch: [
        0,
        0x2013
    ],
    HDW: [
        .285,
        -0.248,
        .5
    ]
};
var DELIM2190 = {
    c: 0x2190,
    dir: FontData_js_1.H,
    sizes: [
        1
    ],
    stretch: [
        0x2190,
        0x2212
    ],
    HDW: exports.HDW3
};
var DELIM2192 = {
    c: 0x2192,
    dir: FontData_js_1.H,
    sizes: [
        1
    ],
    stretch: [
        0,
        0x2212,
        0x2192
    ],
    HDW: exports.HDW3
};
var DELIM2194 = {
    c: 0x2194,
    dir: FontData_js_1.H,
    sizes: [
        1
    ],
    stretch: [
        0x2190,
        0x2212,
        0x2192
    ],
    HDW: exports.HDW3
};
var DELIM21A4 = {
    c: 0x21A4,
    dir: FontData_js_1.H,
    stretch: [
        0x2190,
        0x2212,
        0x2223
    ],
    HDW: exports.HDW3,
    min: 1.278
};
var DELIM21A6 = {
    c: 0x21A6,
    dir: FontData_js_1.H,
    sizes: [
        1
    ],
    stretch: [
        0x2223,
        0x2212,
        0x2192
    ],
    HDW: exports.HDW3
};
var DELIM21D0 = {
    c: 0x21D0,
    dir: FontData_js_1.H,
    sizes: [
        1
    ],
    stretch: [
        0x21D0,
        0x3D
    ],
    HDW: exports.HDW3
};
var DELIM21D2 = {
    c: 0x21D2,
    dir: FontData_js_1.H,
    sizes: [
        1
    ],
    stretch: [
        0,
        0x3D,
        0x21D2
    ],
    HDW: exports.HDW3
};
var DELIM21D4 = {
    c: 0x21D4,
    dir: FontData_js_1.H,
    sizes: [
        1
    ],
    stretch: [
        0x21D0,
        0x3D,
        0x21D2
    ],
    HDW: exports.HDW3
};
var DELIM2212 = {
    c: 0x2212,
    dir: FontData_js_1.H,
    sizes: [
        .778
    ],
    stretch: [
        0,
        0x2212
    ],
    HDW: exports.HDW3
};
var DELIM2223 = {
    c: 0x2223,
    dir: FontData_js_1.V,
    sizes: [
        1
    ],
    stretch: [
        0,
        0x2223
    ],
    HDW: [
        .627,
        .015,
        .333
    ]
};
var DELIM23DC = {
    c: 0x23DC,
    dir: FontData_js_1.H,
    sizes: [
        .778,
        1
    ],
    schar: [
        0x2322,
        0x2322
    ],
    variants: [
        5,
        0
    ],
    stretch: [
        0xE150,
        0xE154,
        0xE151
    ],
    HDW: [
        .32,
        .2,
        .5
    ]
};
var DELIM23DD = {
    c: 0x23DD,
    dir: FontData_js_1.H,
    sizes: [
        .778,
        1
    ],
    schar: [
        0x2323,
        0x2323
    ],
    variants: [
        5,
        0
    ],
    stretch: [
        0xE152,
        0xE154,
        0xE153
    ],
    HDW: [
        .32,
        .2,
        .5
    ]
};
var DELIM23DE = {
    c: 0x23DE,
    dir: FontData_js_1.H,
    stretch: [
        0xE150,
        0xE154,
        0xE151,
        0xE155
    ],
    HDW: [
        .32,
        .2,
        .5
    ],
    min: 1.8
};
var DELIM23DF = {
    c: 0x23DF,
    dir: FontData_js_1.H,
    stretch: [
        0xE152,
        0xE154,
        0xE153,
        0xE156
    ],
    HDW: [
        .32,
        .2,
        .5
    ],
    min: 1.8
};
var DELIM27E8 = {
    c: 0x27E8,
    dir: FontData_js_1.V,
    sizes: exports.VSIZES
};
var DELIM27E9 = {
    c: 0x27E9,
    dir: FontData_js_1.V,
    sizes: exports.VSIZES
};
var DELIM2906 = {
    c: 0x2906,
    dir: FontData_js_1.H,
    stretch: [
        0x21D0,
        0x3D,
        0x2223
    ],
    HDW: exports.HDW3,
    min: 1.278
};
var DELIM2907 = {
    c: 0x2907,
    dir: FontData_js_1.H,
    stretch: [
        0x22A8,
        0x3D,
        0x21D2
    ],
    HDW: exports.HDW3,
    min: 1.278
};
exports.delimiters = {
    0x28: {
        dir: FontData_js_1.V,
        sizes: exports.VSIZES,
        stretch: [
            0x239B,
            0x239C,
            0x239D
        ],
        HDW: [
            .85,
            .349,
            .875
        ]
    },
    0x29: {
        dir: FontData_js_1.V,
        sizes: exports.VSIZES,
        stretch: [
            0x239E,
            0x239F,
            0x23A0
        ],
        HDW: [
            .85,
            .349,
            .875
        ]
    },
    0x2D: DELIM2212,
    0x2F: DELIM2F,
    0x3D: {
        dir: FontData_js_1.H,
        sizes: [
            .778
        ],
        stretch: [
            0,
            0x3D
        ],
        HDW: exports.HDW3
    },
    0x5B: {
        dir: FontData_js_1.V,
        sizes: exports.VSIZES,
        stretch: [
            0x23A1,
            0x23A2,
            0x23A3
        ],
        HDW: exports.HDW2
    },
    0x5C: {
        dir: FontData_js_1.V,
        sizes: exports.VSIZES
    },
    0x5D: {
        dir: FontData_js_1.V,
        sizes: exports.VSIZES,
        stretch: [
            0x23A4,
            0x23A5,
            0x23A6
        ],
        HDW: exports.HDW2
    },
    0x5E: DELIM2C6,
    0x5F: DELIM2013,
    0x7B: {
        dir: FontData_js_1.V,
        sizes: exports.VSIZES,
        stretch: [
            0x23A7,
            0x23AA,
            0x23A9,
            0x23A8
        ],
        HDW: [
            .85,
            .349,
            .889
        ]
    },
    0x7C: {
        dir: FontData_js_1.V,
        sizes: [
            1
        ],
        stretch: [
            0,
            0x2223
        ],
        HDW: [
            .75,
            .25,
            .333
        ]
    },
    0x7D: {
        dir: FontData_js_1.V,
        sizes: exports.VSIZES,
        stretch: [
            0x23AB,
            0x23AA,
            0x23AD,
            0x23AC
        ],
        HDW: [
            .85,
            .349,
            .889
        ]
    },
    0x7E: DELIM2DC,
    0xAF: DELIMAF,
    0x2C6: DELIM2C6,
    0x2C9: DELIMAF,
    0x2DC: DELIM2DC,
    0x302: DELIM2C6,
    0x303: DELIM2DC,
    0x332: DELIM2013,
    0x2013: DELIM2013,
    0x2014: DELIM2013,
    0x2015: DELIM2013,
    0x2016: {
        dir: FontData_js_1.V,
        sizes: [
            .602,
            1
        ],
        schar: [
            0,
            0x2225
        ],
        variants: [
            1,
            0
        ],
        stretch: [
            0,
            0x2225
        ],
        HDW: [
            .602,
            0,
            .556
        ]
    },
    0x2017: DELIM2013,
    0x203E: DELIMAF,
    0x20D7: DELIM2192,
    0x2190: DELIM2190,
    0x2191: {
        dir: FontData_js_1.V,
        sizes: [
            .888
        ],
        stretch: [
            0x2191,
            0x23D0
        ],
        HDW: [
            .6,
            0,
            .667
        ]
    },
    0x2192: DELIM2192,
    0x2193: {
        dir: FontData_js_1.V,
        sizes: [
            .888
        ],
        stretch: [
            0,
            0x23D0,
            0x2193
        ],
        HDW: [
            .6,
            0,
            .667
        ]
    },
    0x2194: DELIM2194,
    0x2195: {
        dir: FontData_js_1.V,
        sizes: [
            1.044
        ],
        stretch: [
            0x2191,
            0x23D0,
            0x2193
        ],
        HDW: exports.HDW1
    },
    0x219E: {
        dir: FontData_js_1.H,
        sizes: [
            1
        ],
        stretch: [
            0x219E,
            0x2212
        ],
        HDW: exports.HDW3
    },
    0x21A0: {
        dir: FontData_js_1.H,
        sizes: [
            1
        ],
        stretch: [
            0,
            0x2212,
            0x21A0
        ],
        HDW: exports.HDW3
    },
    0x21A4: DELIM21A4,
    0x21A5: {
        dir: FontData_js_1.V,
        stretch: [
            0x2191,
            0x23D0,
            0x22A5
        ],
        HDW: exports.HDW1,
        min: 1.555
    },
    0x21A6: DELIM21A6,
    0x21A7: {
        dir: FontData_js_1.V,
        stretch: [
            0x22A4,
            0x23D0,
            0x2193
        ],
        HDW: exports.HDW1,
        min: 1.555
    },
    0x21B0: {
        dir: FontData_js_1.V,
        sizes: [
            .722
        ],
        stretch: [
            0x21B0,
            0x23D0
        ],
        HDW: exports.HDW1
    },
    0x21B1: {
        dir: FontData_js_1.V,
        sizes: [
            .722
        ],
        stretch: [
            0x21B1,
            0x23D0
        ],
        HDW: exports.HDW1
    },
    0x21BC: {
        dir: FontData_js_1.H,
        sizes: [
            1
        ],
        stretch: [
            0x21BC,
            0x2212
        ],
        HDW: exports.HDW3
    },
    0x21BD: {
        dir: FontData_js_1.H,
        sizes: [
            1
        ],
        stretch: [
            0x21BD,
            0x2212
        ],
        HDW: exports.HDW3
    },
    0x21BE: {
        dir: FontData_js_1.V,
        sizes: [
            .888
        ],
        stretch: [
            0x21BE,
            0x23D0
        ],
        HDW: exports.HDW1
    },
    0x21BF: {
        dir: FontData_js_1.V,
        sizes: [
            .888
        ],
        stretch: [
            0x21BF,
            0x23D0
        ],
        HDW: exports.HDW1
    },
    0x21C0: {
        dir: FontData_js_1.H,
        sizes: [
            1
        ],
        stretch: [
            0,
            0x2212,
            0x21C0
        ],
        HDW: exports.HDW3
    },
    0x21C1: {
        dir: FontData_js_1.H,
        sizes: [
            1
        ],
        stretch: [
            0,
            0x2212,
            0x21C1
        ],
        HDW: exports.HDW3
    },
    0x21C2: {
        dir: FontData_js_1.V,
        sizes: [
            .888
        ],
        stretch: [
            0,
            0x23D0,
            0x21C2
        ],
        HDW: exports.HDW1
    },
    0x21C3: {
        dir: FontData_js_1.V,
        sizes: [
            .888
        ],
        stretch: [
            0,
            0x23D0,
            0x21C3
        ],
        HDW: exports.HDW1
    },
    0x21D0: DELIM21D0,
    0x21D1: {
        dir: FontData_js_1.V,
        sizes: [
            .888
        ],
        stretch: [
            0x21D1,
            0x2016
        ],
        HDW: [
            .599,
            0,
            .778
        ]
    },
    0x21D2: DELIM21D2,
    0x21D3: {
        dir: FontData_js_1.V,
        sizes: [
            .888
        ],
        stretch: [
            0,
            0x2016,
            0x21D3
        ],
        HDW: [
            .6,
            0,
            .778
        ]
    },
    0x21D4: DELIM21D4,
    0x21D5: {
        dir: FontData_js_1.V,
        sizes: [
            1.044
        ],
        stretch: [
            0x21D1,
            0x2016,
            0x21D3
        ],
        HDW: [
            .75,
            .25,
            .778
        ]
    },
    0x21DA: {
        dir: FontData_js_1.H,
        sizes: [
            1
        ],
        stretch: [
            0x21DA,
            0x2261
        ],
        HDW: [
            .464,
            -0.036,
            .5
        ]
    },
    0x21DB: {
        dir: FontData_js_1.H,
        sizes: [
            1
        ],
        stretch: [
            0,
            0x2261,
            0x21DB
        ],
        HDW: [
            .464,
            -0.036,
            .5
        ]
    },
    0x2212: DELIM2212,
    0x2215: DELIM2F,
    0x221A: {
        dir: FontData_js_1.V,
        sizes: exports.VSIZES,
        stretch: [
            0xE001,
            0xE000,
            0x23B7
        ],
        fullExt: [
            .65,
            2.3
        ],
        HDW: [
            .85,
            .35,
            1.056
        ]
    },
    0x2223: DELIM2223,
    0x2225: {
        dir: FontData_js_1.V,
        sizes: [
            1
        ],
        stretch: [
            0,
            0x2225
        ],
        HDW: [
            .627,
            .015,
            .556
        ]
    },
    0x2308: {
        dir: FontData_js_1.V,
        sizes: exports.VSIZES,
        stretch: [
            0x23A1,
            0x23A2
        ],
        HDW: exports.HDW2
    },
    0x2309: {
        dir: FontData_js_1.V,
        sizes: exports.VSIZES,
        stretch: [
            0x23A4,
            0x23A5
        ],
        HDW: exports.HDW2
    },
    0x230A: {
        dir: FontData_js_1.V,
        sizes: exports.VSIZES,
        stretch: [
            0,
            0x23A2,
            0x23A3
        ],
        HDW: exports.HDW2
    },
    0x230B: {
        dir: FontData_js_1.V,
        sizes: exports.VSIZES,
        stretch: [
            0,
            0x23A5,
            0x23A6
        ],
        HDW: exports.HDW2
    },
    0x2312: DELIM23DC,
    0x2322: DELIM23DC,
    0x2323: DELIM23DD,
    0x2329: DELIM27E8,
    0x232A: DELIM27E9,
    0x23AA: {
        dir: FontData_js_1.V,
        sizes: [
            .32
        ],
        stretch: [
            0x23AA,
            0x23AA,
            0x23AA
        ],
        HDW: [
            .29,
            .015,
            .889
        ]
    },
    0x23AF: DELIM2013,
    0x23B0: {
        dir: FontData_js_1.V,
        sizes: [
            .989
        ],
        stretch: [
            0x23A7,
            0x23AA,
            0x23AD
        ],
        HDW: [
            .75,
            .25,
            .889
        ]
    },
    0x23B1: {
        dir: FontData_js_1.V,
        sizes: [
            .989
        ],
        stretch: [
            0x23AB,
            0x23AA,
            0x23A9
        ],
        HDW: [
            .75,
            .25,
            .889
        ]
    },
    0x23B4: {
        dir: FontData_js_1.H,
        stretch: [
            0x250C,
            0x2212,
            0x2510
        ],
        HDW: exports.HDW3,
        min: 1
    },
    0x23B5: {
        dir: FontData_js_1.H,
        stretch: [
            0x2514,
            0x2212,
            0x2518
        ],
        HDW: exports.HDW3,
        min: 1
    },
    0x23D0: {
        dir: FontData_js_1.V,
        sizes: [
            .602,
            1
        ],
        schar: [
            0,
            0x2223
        ],
        variants: [
            1,
            0
        ],
        stretch: [
            0,
            0x2223
        ],
        HDW: [
            .602,
            0,
            .333
        ]
    },
    0x23DC: DELIM23DC,
    0x23DD: DELIM23DD,
    0x23DE: DELIM23DE,
    0x23DF: DELIM23DF,
    0x23E0: {
        dir: FontData_js_1.H,
        stretch: [
            0x2CA,
            0x2C9,
            0x2CB
        ],
        HDW: [
            .59,
            -0.544,
            .5
        ],
        min: 1
    },
    0x23E1: {
        dir: FontData_js_1.H,
        stretch: [
            0x2CB,
            0x2C9,
            0x2CA
        ],
        HDW: [
            .59,
            -0.544,
            .5
        ],
        min: 1
    },
    0x2500: DELIM2013,
    0x2758: DELIM2223,
    0x27E8: DELIM27E8,
    0x27E9: DELIM27E9,
    0x27EE: {
        dir: FontData_js_1.V,
        sizes: [
            .989
        ],
        stretch: [
            0x23A7,
            0x23AA,
            0x23A9
        ],
        HDW: [
            .75,
            .25,
            .889
        ]
    },
    0x27EF: {
        dir: FontData_js_1.V,
        sizes: [
            .989
        ],
        stretch: [
            0x23AB,
            0x23AA,
            0x23AD
        ],
        HDW: [
            .75,
            .25,
            .889
        ]
    },
    0x27F5: DELIM2190,
    0x27F6: DELIM2192,
    0x27F7: DELIM2194,
    0x27F8: DELIM21D0,
    0x27F9: DELIM21D2,
    0x27FA: DELIM21D4,
    0x27FB: DELIM21A4,
    0x27FC: DELIM21A6,
    0x27FD: DELIM2906,
    0x27FE: DELIM2907,
    0x2906: DELIM2906,
    0x2907: DELIM2907,
    0x294E: {
        dir: FontData_js_1.H,
        stretch: [
            0x21BC,
            0x2212,
            0x21C0
        ],
        HDW: exports.HDW3,
        min: 2
    },
    0x294F: {
        dir: FontData_js_1.V,
        stretch: [
            0x21BE,
            0x23D0,
            0x21C2
        ],
        HDW: exports.HDW1,
        min: 1.776
    },
    0x2950: {
        dir: FontData_js_1.H,
        stretch: [
            0x21BD,
            0x2212,
            0x21C1
        ],
        HDW: exports.HDW3,
        min: 2
    },
    0x2951: {
        dir: FontData_js_1.V,
        stretch: [
            0x21BF,
            0x23D0,
            0x21C3
        ],
        HDW: exports.HDW1,
        min: .5
    },
    0x295A: {
        dir: FontData_js_1.H,
        stretch: [
            0x21BC,
            0x2212,
            0x2223
        ],
        HDW: exports.HDW3,
        min: 1.278
    },
    0x295B: {
        dir: FontData_js_1.H,
        stretch: [
            0x2223,
            0x2212,
            0x21C0
        ],
        HDW: exports.HDW3,
        min: 1.278
    },
    0x295C: {
        dir: FontData_js_1.V,
        stretch: [
            0x21BE,
            0x23D0,
            0x22A5
        ],
        HDW: exports.HDW1,
        min: 1.556
    },
    0x295D: {
        dir: FontData_js_1.V,
        stretch: [
            0x22A4,
            0x23D0,
            0x21C2
        ],
        HDW: exports.HDW1,
        min: 1.556
    },
    0x295E: {
        dir: FontData_js_1.H,
        stretch: [
            0x21BD,
            0x2212,
            0x2223
        ],
        HDW: exports.HDW3,
        min: 1.278
    },
    0x295F: {
        dir: FontData_js_1.H,
        stretch: [
            0x2223,
            0x2212,
            0x21C1
        ],
        HDW: exports.HDW3,
        min: 1.278
    },
    0x2960: {
        dir: FontData_js_1.V,
        stretch: [
            0x21BF,
            0x23D0,
            0x22A5
        ],
        HDW: exports.HDW1,
        min: 1.776
    },
    0x2961: {
        dir: FontData_js_1.V,
        stretch: [
            0x22A4,
            0x23D0,
            0x21C3
        ],
        HDW: exports.HDW1,
        min: 1.776
    },
    0x3008: DELIM27E8,
    0x3009: DELIM27E9,
    0xFE37: DELIM23DE,
    0xFE38: DELIM23DF
}; //# sourceMappingURL=delimiters.js.map
}}),

};

//# sourceMappingURL=node_modules_mathjax-full_js_output_common_5167c5a6._.js.map