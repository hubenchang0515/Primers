module.exports = {

"[project]/node_modules/mathjax-full/js/util/Options.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __values = this && this.__values || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function() {
            if (o && i >= o.length) o = void 0;
            return {
                value: o && o[i++],
                done: !o
            };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = this && this.__read || function(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);
    } catch (error) {
        e = {
            error: error
        };
    } finally{
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        } finally{
            if (e) throw e.error;
        }
    }
    return ar;
};
var __spreadArray = this && this.__spreadArray || function(to, from, pack) {
    if (pack || arguments.length === 2) for(var i = 0, l = from.length, ar; i < l; i++){
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.lookup = exports.separateOptions = exports.selectOptionsFromKeys = exports.selectOptions = exports.userOptions = exports.defaultOptions = exports.insert = exports.copy = exports.keys = exports.makeArray = exports.expandable = exports.Expandable = exports.OPTIONS = exports.REMOVE = exports.APPEND = exports.isObject = void 0;
var OBJECT = {}.constructor;
function isObject(obj) {
    return typeof obj === 'object' && obj !== null && (obj.constructor === OBJECT || obj.constructor === Expandable);
}
exports.isObject = isObject;
exports.APPEND = '[+]';
exports.REMOVE = '[-]';
exports.OPTIONS = {
    invalidOption: 'warn',
    optionError: function(message, _key) {
        if (exports.OPTIONS.invalidOption === 'fatal') {
            throw new Error(message);
        }
        console.warn('MathJax: ' + message);
    }
};
var Expandable = function() {
    function Expandable() {}
    return Expandable;
}();
exports.Expandable = Expandable;
function expandable(def) {
    return Object.assign(Object.create(Expandable.prototype), def);
}
exports.expandable = expandable;
function makeArray(x) {
    return Array.isArray(x) ? x : [
        x
    ];
}
exports.makeArray = makeArray;
function keys(def) {
    if (!def) {
        return [];
    }
    return Object.keys(def).concat(Object.getOwnPropertySymbols(def));
}
exports.keys = keys;
function copy(def) {
    var e_1, _a;
    var props = {};
    try {
        for(var _b = __values(keys(def)), _c = _b.next(); !_c.done; _c = _b.next()){
            var key = _c.value;
            var prop = Object.getOwnPropertyDescriptor(def, key);
            var value = prop.value;
            if (Array.isArray(value)) {
                prop.value = insert([], value, false);
            } else if (isObject(value)) {
                prop.value = copy(value);
            }
            if (prop.enumerable) {
                props[key] = prop;
            }
        }
    } catch (e_1_1) {
        e_1 = {
            error: e_1_1
        };
    } finally{
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        } finally{
            if (e_1) throw e_1.error;
        }
    }
    return Object.defineProperties(def.constructor === Expandable ? expandable({}) : {}, props);
}
exports.copy = copy;
function insert(dst, src, warn) {
    var e_2, _a;
    if (warn === void 0) {
        warn = true;
    }
    var _loop_1 = function(key) {
        if (warn && dst[key] === undefined && dst.constructor !== Expandable) {
            if (typeof key === 'symbol') {
                key = key.toString();
            }
            exports.OPTIONS.optionError("Invalid option \"".concat(key, "\" (no default value)."), key);
            return "continue";
        }
        var sval = src[key], dval = dst[key];
        if (isObject(sval) && dval !== null && (typeof dval === 'object' || typeof dval === 'function')) {
            var ids = keys(sval);
            if (Array.isArray(dval) && (ids.length === 1 && (ids[0] === exports.APPEND || ids[0] === exports.REMOVE) && Array.isArray(sval[ids[0]]) || ids.length === 2 && ids.sort().join(',') === exports.APPEND + ',' + exports.REMOVE && Array.isArray(sval[exports.APPEND]) && Array.isArray(sval[exports.REMOVE]))) {
                if (sval[exports.REMOVE]) {
                    dval = dst[key] = dval.filter(function(x) {
                        return sval[exports.REMOVE].indexOf(x) < 0;
                    });
                }
                if (sval[exports.APPEND]) {
                    dst[key] = __spreadArray(__spreadArray([], __read(dval), false), __read(sval[exports.APPEND]), false);
                }
            } else {
                insert(dval, sval, warn);
            }
        } else if (Array.isArray(sval)) {
            dst[key] = [];
            insert(dst[key], sval, false);
        } else if (isObject(sval)) {
            dst[key] = copy(sval);
        } else {
            dst[key] = sval;
        }
    };
    try {
        for(var _b = __values(keys(src)), _c = _b.next(); !_c.done; _c = _b.next()){
            var key = _c.value;
            _loop_1(key);
        }
    } catch (e_2_1) {
        e_2 = {
            error: e_2_1
        };
    } finally{
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        } finally{
            if (e_2) throw e_2.error;
        }
    }
    return dst;
}
exports.insert = insert;
function defaultOptions(options) {
    var defs = [];
    for(var _i = 1; _i < arguments.length; _i++){
        defs[_i - 1] = arguments[_i];
    }
    defs.forEach(function(def) {
        return insert(options, def, false);
    });
    return options;
}
exports.defaultOptions = defaultOptions;
function userOptions(options) {
    var defs = [];
    for(var _i = 1; _i < arguments.length; _i++){
        defs[_i - 1] = arguments[_i];
    }
    defs.forEach(function(def) {
        return insert(options, def, true);
    });
    return options;
}
exports.userOptions = userOptions;
function selectOptions(options) {
    var e_3, _a;
    var keys = [];
    for(var _i = 1; _i < arguments.length; _i++){
        keys[_i - 1] = arguments[_i];
    }
    var subset = {};
    try {
        for(var keys_1 = __values(keys), keys_1_1 = keys_1.next(); !keys_1_1.done; keys_1_1 = keys_1.next()){
            var key = keys_1_1.value;
            if (options.hasOwnProperty(key)) {
                subset[key] = options[key];
            }
        }
    } catch (e_3_1) {
        e_3 = {
            error: e_3_1
        };
    } finally{
        try {
            if (keys_1_1 && !keys_1_1.done && (_a = keys_1.return)) _a.call(keys_1);
        } finally{
            if (e_3) throw e_3.error;
        }
    }
    return subset;
}
exports.selectOptions = selectOptions;
function selectOptionsFromKeys(options, object) {
    return selectOptions.apply(void 0, __spreadArray([
        options
    ], __read(Object.keys(object)), false));
}
exports.selectOptionsFromKeys = selectOptionsFromKeys;
function separateOptions(options) {
    var e_4, _a, e_5, _b;
    var objects = [];
    for(var _i = 1; _i < arguments.length; _i++){
        objects[_i - 1] = arguments[_i];
    }
    var results = [];
    try {
        for(var objects_1 = __values(objects), objects_1_1 = objects_1.next(); !objects_1_1.done; objects_1_1 = objects_1.next()){
            var object = objects_1_1.value;
            var exists = {}, missing = {};
            try {
                for(var _c = (e_5 = void 0, __values(Object.keys(options || {}))), _d = _c.next(); !_d.done; _d = _c.next()){
                    var key = _d.value;
                    (object[key] === undefined ? missing : exists)[key] = options[key];
                }
            } catch (e_5_1) {
                e_5 = {
                    error: e_5_1
                };
            } finally{
                try {
                    if (_d && !_d.done && (_b = _c.return)) _b.call(_c);
                } finally{
                    if (e_5) throw e_5.error;
                }
            }
            results.push(exists);
            options = missing;
        }
    } catch (e_4_1) {
        e_4 = {
            error: e_4_1
        };
    } finally{
        try {
            if (objects_1_1 && !objects_1_1.done && (_a = objects_1.return)) _a.call(objects_1);
        } finally{
            if (e_4) throw e_4.error;
        }
    }
    results.unshift(options);
    return results;
}
exports.separateOptions = separateOptions;
function lookup(name, lookup, def) {
    if (def === void 0) {
        def = null;
    }
    return lookup.hasOwnProperty(name) ? lookup[name] : def;
}
exports.lookup = lookup; //# sourceMappingURL=Options.js.map
}}),
"[project]/node_modules/mathjax-full/js/util/PrioritizedList.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.PrioritizedList = void 0;
var PrioritizedList = function() {
    function PrioritizedList() {
        this.items = [];
        this.items = [];
    }
    PrioritizedList.prototype[Symbol.iterator] = function() {
        var i = 0;
        var items = this.items;
        return {
            next: function() {
                return {
                    value: items[i++],
                    done: i > items.length
                };
            }
        };
    };
    PrioritizedList.prototype.add = function(item, priority) {
        if (priority === void 0) {
            priority = PrioritizedList.DEFAULTPRIORITY;
        }
        var i = this.items.length;
        do {
            i--;
        }while (i >= 0 && priority < this.items[i].priority)
        this.items.splice(i + 1, 0, {
            item: item,
            priority: priority
        });
        return item;
    };
    PrioritizedList.prototype.remove = function(item) {
        var i = this.items.length;
        do {
            i--;
        }while (i >= 0 && this.items[i].item !== item)
        if (i >= 0) {
            this.items.splice(i, 1);
        }
    };
    PrioritizedList.DEFAULTPRIORITY = 5;
    return PrioritizedList;
}();
exports.PrioritizedList = PrioritizedList; //# sourceMappingURL=PrioritizedList.js.map
}}),
"[project]/node_modules/mathjax-full/js/util/FunctionList.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __extends = this && this.__extends || function() {
    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || ({
            __proto__: []
        }) instanceof Array && function(d, b) {
            d.__proto__ = b;
        } || function(d, b) {
            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
        };
        return extendStatics(d, b);
    };
    return function(d, b) {
        if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
}();
var __values = this && this.__values || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function() {
            if (o && i >= o.length) o = void 0;
            return {
                value: o && o[i++],
                done: !o
            };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = this && this.__read || function(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);
    } catch (error) {
        e = {
            error: error
        };
    } finally{
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        } finally{
            if (e) throw e.error;
        }
    }
    return ar;
};
var __spreadArray = this && this.__spreadArray || function(to, from, pack) {
    if (pack || arguments.length === 2) for(var i = 0, l = from.length, ar; i < l; i++){
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.FunctionList = void 0;
var PrioritizedList_js_1 = __turbopack_context__.r("[project]/node_modules/mathjax-full/js/util/PrioritizedList.js [app-rsc] (ecmascript)");
var FunctionList = function(_super) {
    __extends(FunctionList, _super);
    function FunctionList() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FunctionList.prototype.execute = function() {
        var e_1, _a;
        var data = [];
        for(var _i = 0; _i < arguments.length; _i++){
            data[_i] = arguments[_i];
        }
        try {
            for(var _b = __values(this), _c = _b.next(); !_c.done; _c = _b.next()){
                var item = _c.value;
                var result = item.item.apply(item, __spreadArray([], __read(data), false));
                if (result === false) {
                    return false;
                }
            }
        } catch (e_1_1) {
            e_1 = {
                error: e_1_1
            };
        } finally{
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            } finally{
                if (e_1) throw e_1.error;
            }
        }
        return true;
    };
    FunctionList.prototype.asyncExecute = function() {
        var data = [];
        for(var _i = 0; _i < arguments.length; _i++){
            data[_i] = arguments[_i];
        }
        var i = -1;
        var items = this.items;
        return new Promise(function(ok, fail) {
            (function execute() {
                var _a;
                while(++i < items.length){
                    var result = (_a = items[i]).item.apply(_a, __spreadArray([], __read(data), false));
                    if (result instanceof Promise) {
                        result.then(execute).catch(function(err) {
                            return fail(err);
                        });
                        return;
                    }
                    if (result === false) {
                        ok(false);
                        return;
                    }
                }
                ok(true);
            })();
        });
    };
    return FunctionList;
}(PrioritizedList_js_1.PrioritizedList);
exports.FunctionList = FunctionList; //# sourceMappingURL=FunctionList.js.map
}}),
"[project]/node_modules/mathjax-full/js/util/lengths.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.px = exports.emRounded = exports.em = exports.percent = exports.length2em = exports.MATHSPACE = exports.RELUNITS = exports.UNITS = exports.BIGDIMEN = void 0;
exports.BIGDIMEN = 1000000;
exports.UNITS = {
    px: 1,
    'in': 96,
    cm: 96 / 2.54,
    mm: 96 / 25.4
};
exports.RELUNITS = {
    em: 1,
    ex: .431,
    pt: 1 / 10,
    pc: 12 / 10,
    mu: 1 / 18
};
exports.MATHSPACE = {
    veryverythinmathspace: 1 / 18,
    verythinmathspace: 2 / 18,
    thinmathspace: 3 / 18,
    mediummathspace: 4 / 18,
    thickmathspace: 5 / 18,
    verythickmathspace: 6 / 18,
    veryverythickmathspace: 7 / 18,
    negativeveryverythinmathspace: -1 / 18,
    negativeverythinmathspace: -2 / 18,
    negativethinmathspace: -3 / 18,
    negativemediummathspace: -4 / 18,
    negativethickmathspace: -5 / 18,
    negativeverythickmathspace: -6 / 18,
    negativeveryverythickmathspace: -7 / 18,
    thin: .04,
    medium: .06,
    thick: .1,
    normal: 1,
    big: 2,
    small: 1 / Math.sqrt(2),
    infinity: exports.BIGDIMEN
};
function length2em(length, size, scale, em) {
    if (size === void 0) {
        size = 0;
    }
    if (scale === void 0) {
        scale = 1;
    }
    if (em === void 0) {
        em = 16;
    }
    if (typeof length !== 'string') {
        length = String(length);
    }
    if (length === '' || length == null) {
        return size;
    }
    if (exports.MATHSPACE[length]) {
        return exports.MATHSPACE[length];
    }
    var match = length.match(/^\s*([-+]?(?:\.\d+|\d+(?:\.\d*)?))?(pt|em|ex|mu|px|pc|in|mm|cm|%)?/);
    if (!match) {
        return size;
    }
    var m = parseFloat(match[1] || '1'), unit = match[2];
    if (exports.UNITS.hasOwnProperty(unit)) {
        return m * exports.UNITS[unit] / em / scale;
    }
    if (exports.RELUNITS.hasOwnProperty(unit)) {
        return m * exports.RELUNITS[unit];
    }
    if (unit === '%') {
        return m / 100 * size;
    }
    return m * size;
}
exports.length2em = length2em;
function percent(m) {
    return (100 * m).toFixed(1).replace(/\.?0+$/, '') + '%';
}
exports.percent = percent;
function em(m) {
    if (Math.abs(m) < .001) return '0';
    return m.toFixed(3).replace(/\.?0+$/, '') + 'em';
}
exports.em = em;
function emRounded(m, em) {
    if (em === void 0) {
        em = 16;
    }
    m = (Math.round(m * em) + .05) / em;
    if (Math.abs(m) < .001) return '0em';
    return m.toFixed(3).replace(/\.?0+$/, '') + 'em';
}
exports.emRounded = emRounded;
function px(m, M, em) {
    if (M === void 0) {
        M = -exports.BIGDIMEN;
    }
    if (em === void 0) {
        em = 16;
    }
    m *= em;
    if (M && m < M) m = M;
    if (Math.abs(m) < .1) return '0';
    return m.toFixed(1).replace(/\.0$/, '') + 'px';
}
exports.px = px; //# sourceMappingURL=lengths.js.map
}}),
"[project]/node_modules/mathjax-full/js/util/Styles.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __values = this && this.__values || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function() {
            if (o && i >= o.length) o = void 0;
            return {
                value: o && o[i++],
                done: !o
            };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = this && this.__read || function(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);
    } catch (error) {
        e = {
            error: error
        };
    } finally{
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        } finally{
            if (e) throw e.error;
        }
    }
    return ar;
};
var __spreadArray = this && this.__spreadArray || function(to, from, pack) {
    if (pack || arguments.length === 2) for(var i = 0, l = from.length, ar; i < l; i++){
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Styles = void 0;
var TRBL = [
    'top',
    'right',
    'bottom',
    'left'
];
var WSC = [
    'width',
    'style',
    'color'
];
function splitSpaces(text) {
    var parts = text.split(/((?:'[^']*'|"[^"]*"|,[\s\n]|[^\s\n])*)/g);
    var split = [];
    while(parts.length > 1){
        parts.shift();
        split.push(parts.shift());
    }
    return split;
}
function splitTRBL(name) {
    var e_1, _a;
    var parts = splitSpaces(this.styles[name]);
    if (parts.length === 0) {
        parts.push('');
    }
    if (parts.length === 1) {
        parts.push(parts[0]);
    }
    if (parts.length === 2) {
        parts.push(parts[0]);
    }
    if (parts.length === 3) {
        parts.push(parts[1]);
    }
    try {
        for(var _b = __values(Styles.connect[name].children), _c = _b.next(); !_c.done; _c = _b.next()){
            var child = _c.value;
            this.setStyle(this.childName(name, child), parts.shift());
        }
    } catch (e_1_1) {
        e_1 = {
            error: e_1_1
        };
    } finally{
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        } finally{
            if (e_1) throw e_1.error;
        }
    }
}
function combineTRBL(name) {
    var e_2, _a;
    var children = Styles.connect[name].children;
    var parts = [];
    try {
        for(var children_1 = __values(children), children_1_1 = children_1.next(); !children_1_1.done; children_1_1 = children_1.next()){
            var child = children_1_1.value;
            var part = this.styles[name + '-' + child];
            if (!part) {
                delete this.styles[name];
                return;
            }
            parts.push(part);
        }
    } catch (e_2_1) {
        e_2 = {
            error: e_2_1
        };
    } finally{
        try {
            if (children_1_1 && !children_1_1.done && (_a = children_1.return)) _a.call(children_1);
        } finally{
            if (e_2) throw e_2.error;
        }
    }
    if (parts[3] === parts[1]) {
        parts.pop();
        if (parts[2] === parts[0]) {
            parts.pop();
            if (parts[1] === parts[0]) {
                parts.pop();
            }
        }
    }
    this.styles[name] = parts.join(' ');
}
function splitSame(name) {
    var e_3, _a;
    try {
        for(var _b = __values(Styles.connect[name].children), _c = _b.next(); !_c.done; _c = _b.next()){
            var child = _c.value;
            this.setStyle(this.childName(name, child), this.styles[name]);
        }
    } catch (e_3_1) {
        e_3 = {
            error: e_3_1
        };
    } finally{
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        } finally{
            if (e_3) throw e_3.error;
        }
    }
}
function combineSame(name) {
    var e_4, _a;
    var children = __spreadArray([], __read(Styles.connect[name].children), false);
    var value = this.styles[this.childName(name, children.shift())];
    try {
        for(var children_2 = __values(children), children_2_1 = children_2.next(); !children_2_1.done; children_2_1 = children_2.next()){
            var child = children_2_1.value;
            if (this.styles[this.childName(name, child)] !== value) {
                delete this.styles[name];
                return;
            }
        }
    } catch (e_4_1) {
        e_4 = {
            error: e_4_1
        };
    } finally{
        try {
            if (children_2_1 && !children_2_1.done && (_a = children_2.return)) _a.call(children_2);
        } finally{
            if (e_4) throw e_4.error;
        }
    }
    this.styles[name] = value;
}
var BORDER = {
    width: /^(?:[\d.]+(?:[a-z]+)|thin|medium|thick|inherit|initial|unset)$/,
    style: /^(?:none|hidden|dotted|dashed|solid|double|groove|ridge|inset|outset|inherit|initial|unset)$/
};
function splitWSC(name) {
    var e_5, _a, e_6, _b;
    var parts = {
        width: '',
        style: '',
        color: ''
    };
    try {
        for(var _c = __values(splitSpaces(this.styles[name])), _d = _c.next(); !_d.done; _d = _c.next()){
            var part = _d.value;
            if (part.match(BORDER.width) && parts.width === '') {
                parts.width = part;
            } else if (part.match(BORDER.style) && parts.style === '') {
                parts.style = part;
            } else {
                parts.color = part;
            }
        }
    } catch (e_5_1) {
        e_5 = {
            error: e_5_1
        };
    } finally{
        try {
            if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
        } finally{
            if (e_5) throw e_5.error;
        }
    }
    try {
        for(var _e = __values(Styles.connect[name].children), _f = _e.next(); !_f.done; _f = _e.next()){
            var child = _f.value;
            this.setStyle(this.childName(name, child), parts[child]);
        }
    } catch (e_6_1) {
        e_6 = {
            error: e_6_1
        };
    } finally{
        try {
            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
        } finally{
            if (e_6) throw e_6.error;
        }
    }
}
function combineWSC(name) {
    var e_7, _a;
    var parts = [];
    try {
        for(var _b = __values(Styles.connect[name].children), _c = _b.next(); !_c.done; _c = _b.next()){
            var child = _c.value;
            var value = this.styles[this.childName(name, child)];
            if (value) {
                parts.push(value);
            }
        }
    } catch (e_7_1) {
        e_7 = {
            error: e_7_1
        };
    } finally{
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        } finally{
            if (e_7) throw e_7.error;
        }
    }
    if (parts.length) {
        this.styles[name] = parts.join(' ');
    } else {
        delete this.styles[name];
    }
}
var FONT = {
    style: /^(?:normal|italic|oblique|inherit|initial|unset)$/,
    variant: new RegExp('^(?:' + [
        'normal|none',
        'inherit|initial|unset',
        'common-ligatures|no-common-ligatures',
        'discretionary-ligatures|no-discretionary-ligatures',
        'historical-ligatures|no-historical-ligatures',
        'contextual|no-contextual',
        '(?:stylistic|character-variant|swash|ornaments|annotation)\\([^)]*\\)',
        'small-caps|all-small-caps|petite-caps|all-petite-caps|unicase|titling-caps',
        'lining-nums|oldstyle-nums|proportional-nums|tabular-nums',
        'diagonal-fractions|stacked-fractions',
        'ordinal|slashed-zero',
        'jis78|jis83|jis90|jis04|simplified|traditional',
        'full-width|proportional-width',
        'ruby'
    ].join('|') + ')$'),
    weight: /^(?:normal|bold|bolder|lighter|[1-9]00|inherit|initial|unset)$/,
    stretch: new RegExp('^(?:' + [
        'normal',
        '(?:(?:ultra|extra|semi)-)?condensed',
        '(?:(?:semi|extra|ulta)-)?expanded',
        'inherit|initial|unset'
    ].join('|') + ')$'),
    size: new RegExp('^(?:' + [
        'xx-small|x-small|small|medium|large|x-large|xx-large|larger|smaller',
        '[\d.]+%|[\d.]+[a-z]+',
        'inherit|initial|unset'
    ].join('|') + ')' + '(?:\/(?:normal|[\d.\+](?:%|[a-z]+)?))?$')
};
function splitFont(name) {
    var e_8, _a, e_9, _b;
    var parts = splitSpaces(this.styles[name]);
    var value = {
        style: '',
        variant: [],
        weight: '',
        stretch: '',
        size: '',
        family: '',
        'line-height': ''
    };
    try {
        for(var parts_1 = __values(parts), parts_1_1 = parts_1.next(); !parts_1_1.done; parts_1_1 = parts_1.next()){
            var part = parts_1_1.value;
            value.family = part;
            try {
                for(var _c = (e_9 = void 0, __values(Object.keys(FONT))), _d = _c.next(); !_d.done; _d = _c.next()){
                    var name_1 = _d.value;
                    if ((Array.isArray(value[name_1]) || value[name_1] === '') && part.match(FONT[name_1])) {
                        if (name_1 === 'size') {
                            var _e = __read(part.split(/\//), 2), size = _e[0], height = _e[1];
                            value[name_1] = size;
                            if (height) {
                                value['line-height'] = height;
                            }
                        } else if (value.size === '') {
                            if (Array.isArray(value[name_1])) {
                                value[name_1].push(part);
                            } else {
                                value[name_1] = part;
                            }
                        }
                    }
                }
            } catch (e_9_1) {
                e_9 = {
                    error: e_9_1
                };
            } finally{
                try {
                    if (_d && !_d.done && (_b = _c.return)) _b.call(_c);
                } finally{
                    if (e_9) throw e_9.error;
                }
            }
        }
    } catch (e_8_1) {
        e_8 = {
            error: e_8_1
        };
    } finally{
        try {
            if (parts_1_1 && !parts_1_1.done && (_a = parts_1.return)) _a.call(parts_1);
        } finally{
            if (e_8) throw e_8.error;
        }
    }
    saveFontParts(name, value);
    delete this.styles[name];
}
function saveFontParts(name, value) {
    var e_10, _a;
    try {
        for(var _b = __values(Styles.connect[name].children), _c = _b.next(); !_c.done; _c = _b.next()){
            var child = _c.value;
            var cname = this.childName(name, child);
            if (Array.isArray(value[child])) {
                var values = value[child];
                if (values.length) {
                    this.styles[cname] = values.join(' ');
                }
            } else if (value[child] !== '') {
                this.styles[cname] = value[child];
            }
        }
    } catch (e_10_1) {
        e_10 = {
            error: e_10_1
        };
    } finally{
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        } finally{
            if (e_10) throw e_10.error;
        }
    }
}
function combineFont(_name) {}
var Styles = function() {
    function Styles(cssText) {
        if (cssText === void 0) {
            cssText = '';
        }
        this.parse(cssText);
    }
    Object.defineProperty(Styles.prototype, "cssText", {
        get: function() {
            var e_11, _a;
            var styles = [];
            try {
                for(var _b = __values(Object.keys(this.styles)), _c = _b.next(); !_c.done; _c = _b.next()){
                    var name_2 = _c.value;
                    var parent_1 = this.parentName(name_2);
                    if (!this.styles[parent_1]) {
                        styles.push(name_2 + ': ' + this.styles[name_2] + ';');
                    }
                }
            } catch (e_11_1) {
                e_11 = {
                    error: e_11_1
                };
            } finally{
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                } finally{
                    if (e_11) throw e_11.error;
                }
            }
            return styles.join(' ');
        },
        enumerable: false,
        configurable: true
    });
    Styles.prototype.set = function(name, value) {
        name = this.normalizeName(name);
        this.setStyle(name, value);
        if (Styles.connect[name] && !Styles.connect[name].combine) {
            this.combineChildren(name);
            delete this.styles[name];
        }
        while(name.match(/-/)){
            name = this.parentName(name);
            if (!Styles.connect[name]) break;
            Styles.connect[name].combine.call(this, name);
        }
    };
    Styles.prototype.get = function(name) {
        name = this.normalizeName(name);
        return this.styles.hasOwnProperty(name) ? this.styles[name] : '';
    };
    Styles.prototype.setStyle = function(name, value) {
        this.styles[name] = value;
        if (Styles.connect[name] && Styles.connect[name].children) {
            Styles.connect[name].split.call(this, name);
        }
        if (value === '') {
            delete this.styles[name];
        }
    };
    Styles.prototype.combineChildren = function(name) {
        var e_12, _a;
        var parent = this.parentName(name);
        try {
            for(var _b = __values(Styles.connect[name].children), _c = _b.next(); !_c.done; _c = _b.next()){
                var child = _c.value;
                var cname = this.childName(parent, child);
                Styles.connect[cname].combine.call(this, cname);
            }
        } catch (e_12_1) {
            e_12 = {
                error: e_12_1
            };
        } finally{
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            } finally{
                if (e_12) throw e_12.error;
            }
        }
    };
    Styles.prototype.parentName = function(name) {
        var parent = name.replace(/-[^-]*$/, '');
        return name === parent ? '' : parent;
    };
    Styles.prototype.childName = function(name, child) {
        if (child.match(/-/)) {
            return child;
        }
        if (Styles.connect[name] && !Styles.connect[name].combine) {
            child += name.replace(/.*-/, '-');
            name = this.parentName(name);
        }
        return name + '-' + child;
    };
    Styles.prototype.normalizeName = function(name) {
        return name.replace(/[A-Z]/g, function(c) {
            return '-' + c.toLowerCase();
        });
    };
    Styles.prototype.parse = function(cssText) {
        if (cssText === void 0) {
            cssText = '';
        }
        var PATTERN = this.constructor.pattern;
        this.styles = {};
        var parts = cssText.replace(PATTERN.comment, '').split(PATTERN.style);
        while(parts.length > 1){
            var _a = __read(parts.splice(0, 3), 3), space = _a[0], name_3 = _a[1], value = _a[2];
            if (space.match(/[^\s\n]/)) return;
            this.set(name_3, value);
        }
    };
    Styles.pattern = {
        style: /([-a-z]+)[\s\n]*:[\s\n]*((?:'[^']*'|"[^"]*"|\n|.)*?)[\s\n]*(?:;|$)/g,
        comment: /\/\*[^]*?\*\//g
    };
    Styles.connect = {
        padding: {
            children: TRBL,
            split: splitTRBL,
            combine: combineTRBL
        },
        border: {
            children: TRBL,
            split: splitSame,
            combine: combineSame
        },
        'border-top': {
            children: WSC,
            split: splitWSC,
            combine: combineWSC
        },
        'border-right': {
            children: WSC,
            split: splitWSC,
            combine: combineWSC
        },
        'border-bottom': {
            children: WSC,
            split: splitWSC,
            combine: combineWSC
        },
        'border-left': {
            children: WSC,
            split: splitWSC,
            combine: combineWSC
        },
        'border-width': {
            children: TRBL,
            split: splitTRBL,
            combine: null
        },
        'border-style': {
            children: TRBL,
            split: splitTRBL,
            combine: null
        },
        'border-color': {
            children: TRBL,
            split: splitTRBL,
            combine: null
        },
        font: {
            children: [
                'style',
                'variant',
                'weight',
                'stretch',
                'line-height',
                'size',
                'family'
            ],
            split: splitFont,
            combine: combineFont
        }
    };
    return Styles;
}();
exports.Styles = Styles; //# sourceMappingURL=Styles.js.map
}}),
"[project]/node_modules/mathjax-full/js/util/StyleList.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __values = this && this.__values || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function() {
            if (o && i >= o.length) o = void 0;
            return {
                value: o && o[i++],
                done: !o
            };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CssStyles = void 0;
var CssStyles = function() {
    function CssStyles(styles) {
        if (styles === void 0) {
            styles = null;
        }
        this.styles = {};
        this.addStyles(styles);
    }
    Object.defineProperty(CssStyles.prototype, "cssText", {
        get: function() {
            return this.getStyleString();
        },
        enumerable: false,
        configurable: true
    });
    CssStyles.prototype.addStyles = function(styles) {
        var e_1, _a;
        if (!styles) return;
        try {
            for(var _b = __values(Object.keys(styles)), _c = _b.next(); !_c.done; _c = _b.next()){
                var style = _c.value;
                if (!this.styles[style]) {
                    this.styles[style] = {};
                }
                Object.assign(this.styles[style], styles[style]);
            }
        } catch (e_1_1) {
            e_1 = {
                error: e_1_1
            };
        } finally{
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            } finally{
                if (e_1) throw e_1.error;
            }
        }
    };
    CssStyles.prototype.removeStyles = function() {
        var e_2, _a;
        var selectors = [];
        for(var _i = 0; _i < arguments.length; _i++){
            selectors[_i] = arguments[_i];
        }
        try {
            for(var selectors_1 = __values(selectors), selectors_1_1 = selectors_1.next(); !selectors_1_1.done; selectors_1_1 = selectors_1.next()){
                var selector = selectors_1_1.value;
                delete this.styles[selector];
            }
        } catch (e_2_1) {
            e_2 = {
                error: e_2_1
            };
        } finally{
            try {
                if (selectors_1_1 && !selectors_1_1.done && (_a = selectors_1.return)) _a.call(selectors_1);
            } finally{
                if (e_2) throw e_2.error;
            }
        }
    };
    CssStyles.prototype.clear = function() {
        this.styles = {};
    };
    CssStyles.prototype.getStyleString = function() {
        return this.getStyleRules().join('\n\n');
    };
    CssStyles.prototype.getStyleRules = function() {
        var e_3, _a;
        var selectors = Object.keys(this.styles);
        var defs = new Array(selectors.length);
        var i = 0;
        try {
            for(var selectors_2 = __values(selectors), selectors_2_1 = selectors_2.next(); !selectors_2_1.done; selectors_2_1 = selectors_2.next()){
                var selector = selectors_2_1.value;
                defs[i++] = selector + ' {\n' + this.getStyleDefString(this.styles[selector]) + '\n}';
            }
        } catch (e_3_1) {
            e_3 = {
                error: e_3_1
            };
        } finally{
            try {
                if (selectors_2_1 && !selectors_2_1.done && (_a = selectors_2.return)) _a.call(selectors_2);
            } finally{
                if (e_3) throw e_3.error;
            }
        }
        return defs;
    };
    CssStyles.prototype.getStyleDefString = function(styles) {
        var e_4, _a;
        var properties = Object.keys(styles);
        var values = new Array(properties.length);
        var i = 0;
        try {
            for(var properties_1 = __values(properties), properties_1_1 = properties_1.next(); !properties_1_1.done; properties_1_1 = properties_1.next()){
                var property = properties_1_1.value;
                values[i++] = '  ' + property + ': ' + styles[property] + ';';
            }
        } catch (e_4_1) {
            e_4 = {
                error: e_4_1
            };
        } finally{
            try {
                if (properties_1_1 && !properties_1_1.done && (_a = properties_1.return)) _a.call(properties_1);
            } finally{
                if (e_4) throw e_4.error;
            }
        }
        return values.join('\n');
    };
    return CssStyles;
}();
exports.CssStyles = CssStyles; //# sourceMappingURL=StyleList.js.map
}}),
"[project]/node_modules/mathjax-full/js/util/BBox.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.BBox = void 0;
var lengths_js_1 = __turbopack_context__.r("[project]/node_modules/mathjax-full/js/util/lengths.js [app-rsc] (ecmascript)");
var BBox = function() {
    function BBox(def) {
        if (def === void 0) {
            def = {
                w: 0,
                h: -lengths_js_1.BIGDIMEN,
                d: -lengths_js_1.BIGDIMEN
            };
        }
        this.w = def.w || 0;
        this.h = 'h' in def ? def.h : -lengths_js_1.BIGDIMEN;
        this.d = 'd' in def ? def.d : -lengths_js_1.BIGDIMEN;
        this.L = this.R = this.ic = this.sk = this.dx = 0;
        this.scale = this.rscale = 1;
        this.pwidth = '';
    }
    BBox.zero = function() {
        return new BBox({
            h: 0,
            d: 0,
            w: 0
        });
    };
    BBox.empty = function() {
        return new BBox();
    };
    BBox.prototype.empty = function() {
        this.w = 0;
        this.h = this.d = -lengths_js_1.BIGDIMEN;
        return this;
    };
    BBox.prototype.clean = function() {
        if (this.w === -lengths_js_1.BIGDIMEN) this.w = 0;
        if (this.h === -lengths_js_1.BIGDIMEN) this.h = 0;
        if (this.d === -lengths_js_1.BIGDIMEN) this.d = 0;
    };
    BBox.prototype.rescale = function(scale) {
        this.w *= scale;
        this.h *= scale;
        this.d *= scale;
    };
    BBox.prototype.combine = function(cbox, x, y) {
        if (x === void 0) {
            x = 0;
        }
        if (y === void 0) {
            y = 0;
        }
        var rscale = cbox.rscale;
        var w = x + rscale * (cbox.w + cbox.L + cbox.R);
        var h = y + rscale * cbox.h;
        var d = rscale * cbox.d - y;
        if (w > this.w) this.w = w;
        if (h > this.h) this.h = h;
        if (d > this.d) this.d = d;
    };
    BBox.prototype.append = function(cbox) {
        var scale = cbox.rscale;
        this.w += scale * (cbox.w + cbox.L + cbox.R);
        if (scale * cbox.h > this.h) {
            this.h = scale * cbox.h;
        }
        if (scale * cbox.d > this.d) {
            this.d = scale * cbox.d;
        }
    };
    BBox.prototype.updateFrom = function(cbox) {
        this.h = cbox.h;
        this.d = cbox.d;
        this.w = cbox.w;
        if (cbox.pwidth) {
            this.pwidth = cbox.pwidth;
        }
    };
    BBox.fullWidth = '100%';
    BBox.StyleAdjust = [
        [
            'borderTopWidth',
            'h'
        ],
        [
            'borderRightWidth',
            'w'
        ],
        [
            'borderBottomWidth',
            'd'
        ],
        [
            'borderLeftWidth',
            'w',
            0
        ],
        [
            'paddingTop',
            'h'
        ],
        [
            'paddingRight',
            'w'
        ],
        [
            'paddingBottom',
            'd'
        ],
        [
            'paddingLeft',
            'w',
            0
        ]
    ];
    return BBox;
}();
exports.BBox = BBox; //# sourceMappingURL=BBox.js.map
}}),
"[project]/node_modules/mathjax-full/js/util/string.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __read = this && this.__read || function(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);
    } catch (error) {
        e = {
            error: error
        };
    } finally{
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        } finally{
            if (e) throw e.error;
        }
    }
    return ar;
};
var __spreadArray = this && this.__spreadArray || function(to, from, pack) {
    if (pack || arguments.length === 2) for(var i = 0, l = from.length, ar; i < l; i++){
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.split = exports.isPercent = exports.unicodeString = exports.unicodeChars = exports.quotePattern = exports.sortLength = void 0;
function sortLength(a, b) {
    return a.length !== b.length ? b.length - a.length : a === b ? 0 : a < b ? -1 : 1;
}
exports.sortLength = sortLength;
function quotePattern(text) {
    return text.replace(/([\^$(){}+*?\-|\[\]\:\\])/g, '\\$1');
}
exports.quotePattern = quotePattern;
function unicodeChars(text) {
    return Array.from(text).map(function(c) {
        return c.codePointAt(0);
    });
}
exports.unicodeChars = unicodeChars;
function unicodeString(data) {
    return String.fromCodePoint.apply(String, __spreadArray([], __read(data), false));
}
exports.unicodeString = unicodeString;
function isPercent(x) {
    return !!x.match(/%\s*$/);
}
exports.isPercent = isPercent;
function split(x) {
    return x.trim().split(/\s+/);
}
exports.split = split; //# sourceMappingURL=string.js.map
}}),
"[project]/node_modules/mathjax-full/js/util/numeric.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.max = exports.sum = void 0;
function sum(A) {
    return A.reduce(function(a, b) {
        return a + b;
    }, 0);
}
exports.sum = sum;
function max(A) {
    return A.reduce(function(a, b) {
        return Math.max(a, b);
    }, 0);
}
exports.max = max; //# sourceMappingURL=numeric.js.map
}}),
"[project]/node_modules/mathjax-full/js/util/Retries.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.retryAfter = exports.handleRetriesFor = void 0;
function handleRetriesFor(code) {
    return new Promise(function run(ok, fail) {
        try {
            ok(code());
        } catch (err) {
            if (err.retry && err.retry instanceof Promise) {
                err.retry.then(function() {
                    return run(ok, fail);
                }).catch(function(perr) {
                    return fail(perr);
                });
            } else if (err.restart && err.restart.isCallback) {
                MathJax.Callback.After(function() {
                    return run(ok, fail);
                }, err.restart);
            } else {
                fail(err);
            }
        }
    });
}
exports.handleRetriesFor = handleRetriesFor;
function retryAfter(promise) {
    var err = new Error('MathJax retry');
    err.retry = promise;
    throw err;
}
exports.retryAfter = retryAfter; //# sourceMappingURL=Retries.js.map
}}),
"[project]/node_modules/mathjax-full/js/util/AsyncLoad.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.asyncLoad = void 0;
var mathjax_js_1 = __turbopack_context__.r("[project]/node_modules/mathjax-full/js/mathjax.js [app-rsc] (ecmascript)");
function asyncLoad(name) {
    if (!mathjax_js_1.mathjax.asyncLoad) {
        return Promise.reject("Can't load '".concat(name, "': No asyncLoad method specified"));
    }
    return new Promise(function(ok, fail) {
        var result = mathjax_js_1.mathjax.asyncLoad(name);
        if (result instanceof Promise) {
            result.then(function(value) {
                return ok(value);
            }).catch(function(err) {
                return fail(err);
            });
        } else {
            ok(result);
        }
    });
}
exports.asyncLoad = asyncLoad; //# sourceMappingURL=AsyncLoad.js.map
}}),
"[project]/node_modules/mathjax-full/js/util/Entities.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.numeric = exports.translate = exports.remove = exports.add = exports.entities = exports.options = void 0;
var Retries_js_1 = __turbopack_context__.r("[project]/node_modules/mathjax-full/js/util/Retries.js [app-rsc] (ecmascript)");
var AsyncLoad_js_1 = __turbopack_context__.r("[project]/node_modules/mathjax-full/js/util/AsyncLoad.js [app-rsc] (ecmascript)");
exports.options = {
    loadMissingEntities: true
};
exports.entities = {
    ApplyFunction: '\u2061',
    Backslash: '\u2216',
    Because: '\u2235',
    Breve: '\u02D8',
    Cap: '\u22D2',
    CenterDot: '\u00B7',
    CircleDot: '\u2299',
    CircleMinus: '\u2296',
    CirclePlus: '\u2295',
    CircleTimes: '\u2297',
    Congruent: '\u2261',
    ContourIntegral: '\u222E',
    Coproduct: '\u2210',
    Cross: '\u2A2F',
    Cup: '\u22D3',
    CupCap: '\u224D',
    Dagger: '\u2021',
    Del: '\u2207',
    Delta: '\u0394',
    Diamond: '\u22C4',
    DifferentialD: '\u2146',
    DotEqual: '\u2250',
    DoubleDot: '\u00A8',
    DoubleRightTee: '\u22A8',
    DoubleVerticalBar: '\u2225',
    DownArrow: '\u2193',
    DownLeftVector: '\u21BD',
    DownRightVector: '\u21C1',
    DownTee: '\u22A4',
    Downarrow: '\u21D3',
    Element: '\u2208',
    EqualTilde: '\u2242',
    Equilibrium: '\u21CC',
    Exists: '\u2203',
    ExponentialE: '\u2147',
    FilledVerySmallSquare: '\u25AA',
    ForAll: '\u2200',
    Gamma: '\u0393',
    Gg: '\u22D9',
    GreaterEqual: '\u2265',
    GreaterEqualLess: '\u22DB',
    GreaterFullEqual: '\u2267',
    GreaterLess: '\u2277',
    GreaterSlantEqual: '\u2A7E',
    GreaterTilde: '\u2273',
    Hacek: '\u02C7',
    Hat: '\u005E',
    HumpDownHump: '\u224E',
    HumpEqual: '\u224F',
    Im: '\u2111',
    ImaginaryI: '\u2148',
    Integral: '\u222B',
    Intersection: '\u22C2',
    InvisibleComma: '\u2063',
    InvisibleTimes: '\u2062',
    Lambda: '\u039B',
    Larr: '\u219E',
    LeftAngleBracket: '\u27E8',
    LeftArrow: '\u2190',
    LeftArrowRightArrow: '\u21C6',
    LeftCeiling: '\u2308',
    LeftDownVector: '\u21C3',
    LeftFloor: '\u230A',
    LeftRightArrow: '\u2194',
    LeftTee: '\u22A3',
    LeftTriangle: '\u22B2',
    LeftTriangleEqual: '\u22B4',
    LeftUpVector: '\u21BF',
    LeftVector: '\u21BC',
    Leftarrow: '\u21D0',
    Leftrightarrow: '\u21D4',
    LessEqualGreater: '\u22DA',
    LessFullEqual: '\u2266',
    LessGreater: '\u2276',
    LessSlantEqual: '\u2A7D',
    LessTilde: '\u2272',
    Ll: '\u22D8',
    Lleftarrow: '\u21DA',
    LongLeftArrow: '\u27F5',
    LongLeftRightArrow: '\u27F7',
    LongRightArrow: '\u27F6',
    Longleftarrow: '\u27F8',
    Longleftrightarrow: '\u27FA',
    Longrightarrow: '\u27F9',
    Lsh: '\u21B0',
    MinusPlus: '\u2213',
    NestedGreaterGreater: '\u226B',
    NestedLessLess: '\u226A',
    NotDoubleVerticalBar: '\u2226',
    NotElement: '\u2209',
    NotEqual: '\u2260',
    NotExists: '\u2204',
    NotGreater: '\u226F',
    NotGreaterEqual: '\u2271',
    NotLeftTriangle: '\u22EA',
    NotLeftTriangleEqual: '\u22EC',
    NotLess: '\u226E',
    NotLessEqual: '\u2270',
    NotPrecedes: '\u2280',
    NotPrecedesSlantEqual: '\u22E0',
    NotRightTriangle: '\u22EB',
    NotRightTriangleEqual: '\u22ED',
    NotSubsetEqual: '\u2288',
    NotSucceeds: '\u2281',
    NotSucceedsSlantEqual: '\u22E1',
    NotSupersetEqual: '\u2289',
    NotTilde: '\u2241',
    NotVerticalBar: '\u2224',
    Omega: '\u03A9',
    OverBar: '\u203E',
    OverBrace: '\u23DE',
    PartialD: '\u2202',
    Phi: '\u03A6',
    Pi: '\u03A0',
    PlusMinus: '\u00B1',
    Precedes: '\u227A',
    PrecedesEqual: '\u2AAF',
    PrecedesSlantEqual: '\u227C',
    PrecedesTilde: '\u227E',
    Product: '\u220F',
    Proportional: '\u221D',
    Psi: '\u03A8',
    Rarr: '\u21A0',
    Re: '\u211C',
    ReverseEquilibrium: '\u21CB',
    RightAngleBracket: '\u27E9',
    RightArrow: '\u2192',
    RightArrowLeftArrow: '\u21C4',
    RightCeiling: '\u2309',
    RightDownVector: '\u21C2',
    RightFloor: '\u230B',
    RightTee: '\u22A2',
    RightTeeArrow: '\u21A6',
    RightTriangle: '\u22B3',
    RightTriangleEqual: '\u22B5',
    RightUpVector: '\u21BE',
    RightVector: '\u21C0',
    Rightarrow: '\u21D2',
    Rrightarrow: '\u21DB',
    Rsh: '\u21B1',
    Sigma: '\u03A3',
    SmallCircle: '\u2218',
    Sqrt: '\u221A',
    Square: '\u25A1',
    SquareIntersection: '\u2293',
    SquareSubset: '\u228F',
    SquareSubsetEqual: '\u2291',
    SquareSuperset: '\u2290',
    SquareSupersetEqual: '\u2292',
    SquareUnion: '\u2294',
    Star: '\u22C6',
    Subset: '\u22D0',
    SubsetEqual: '\u2286',
    Succeeds: '\u227B',
    SucceedsEqual: '\u2AB0',
    SucceedsSlantEqual: '\u227D',
    SucceedsTilde: '\u227F',
    SuchThat: '\u220B',
    Sum: '\u2211',
    Superset: '\u2283',
    SupersetEqual: '\u2287',
    Supset: '\u22D1',
    Therefore: '\u2234',
    Theta: '\u0398',
    Tilde: '\u223C',
    TildeEqual: '\u2243',
    TildeFullEqual: '\u2245',
    TildeTilde: '\u2248',
    UnderBar: '\u005F',
    UnderBrace: '\u23DF',
    Union: '\u22C3',
    UnionPlus: '\u228E',
    UpArrow: '\u2191',
    UpDownArrow: '\u2195',
    UpTee: '\u22A5',
    Uparrow: '\u21D1',
    Updownarrow: '\u21D5',
    Upsilon: '\u03A5',
    Vdash: '\u22A9',
    Vee: '\u22C1',
    VerticalBar: '\u2223',
    VerticalTilde: '\u2240',
    Vvdash: '\u22AA',
    Wedge: '\u22C0',
    Xi: '\u039E',
    amp: '\u0026',
    acute: '\u00B4',
    aleph: '\u2135',
    alpha: '\u03B1',
    amalg: '\u2A3F',
    and: '\u2227',
    ang: '\u2220',
    angmsd: '\u2221',
    angsph: '\u2222',
    ape: '\u224A',
    backprime: '\u2035',
    backsim: '\u223D',
    backsimeq: '\u22CD',
    beta: '\u03B2',
    beth: '\u2136',
    between: '\u226C',
    bigcirc: '\u25EF',
    bigodot: '\u2A00',
    bigoplus: '\u2A01',
    bigotimes: '\u2A02',
    bigsqcup: '\u2A06',
    bigstar: '\u2605',
    bigtriangledown: '\u25BD',
    bigtriangleup: '\u25B3',
    biguplus: '\u2A04',
    blacklozenge: '\u29EB',
    blacktriangle: '\u25B4',
    blacktriangledown: '\u25BE',
    blacktriangleleft: '\u25C2',
    bowtie: '\u22C8',
    boxdl: '\u2510',
    boxdr: '\u250C',
    boxminus: '\u229F',
    boxplus: '\u229E',
    boxtimes: '\u22A0',
    boxul: '\u2518',
    boxur: '\u2514',
    bsol: '\u005C',
    bull: '\u2022',
    cap: '\u2229',
    check: '\u2713',
    chi: '\u03C7',
    circ: '\u02C6',
    circeq: '\u2257',
    circlearrowleft: '\u21BA',
    circlearrowright: '\u21BB',
    circledR: '\u00AE',
    circledS: '\u24C8',
    circledast: '\u229B',
    circledcirc: '\u229A',
    circleddash: '\u229D',
    clubs: '\u2663',
    colon: '\u003A',
    comp: '\u2201',
    ctdot: '\u22EF',
    cuepr: '\u22DE',
    cuesc: '\u22DF',
    cularr: '\u21B6',
    cup: '\u222A',
    curarr: '\u21B7',
    curlyvee: '\u22CE',
    curlywedge: '\u22CF',
    dagger: '\u2020',
    daleth: '\u2138',
    ddarr: '\u21CA',
    deg: '\u00B0',
    delta: '\u03B4',
    digamma: '\u03DD',
    div: '\u00F7',
    divideontimes: '\u22C7',
    dot: '\u02D9',
    doteqdot: '\u2251',
    dotplus: '\u2214',
    dotsquare: '\u22A1',
    dtdot: '\u22F1',
    ecir: '\u2256',
    efDot: '\u2252',
    egs: '\u2A96',
    ell: '\u2113',
    els: '\u2A95',
    empty: '\u2205',
    epsi: '\u03B5',
    epsiv: '\u03F5',
    erDot: '\u2253',
    eta: '\u03B7',
    eth: '\u00F0',
    flat: '\u266D',
    fork: '\u22D4',
    frown: '\u2322',
    gEl: '\u2A8C',
    gamma: '\u03B3',
    gap: '\u2A86',
    gimel: '\u2137',
    gnE: '\u2269',
    gnap: '\u2A8A',
    gne: '\u2A88',
    gnsim: '\u22E7',
    gt: '\u003E',
    gtdot: '\u22D7',
    harrw: '\u21AD',
    hbar: '\u210F',
    hellip: '\u2026',
    hookleftarrow: '\u21A9',
    hookrightarrow: '\u21AA',
    imath: '\u0131',
    infin: '\u221E',
    intcal: '\u22BA',
    iota: '\u03B9',
    jmath: '\u0237',
    kappa: '\u03BA',
    kappav: '\u03F0',
    lEg: '\u2A8B',
    lambda: '\u03BB',
    lap: '\u2A85',
    larrlp: '\u21AB',
    larrtl: '\u21A2',
    lbrace: '\u007B',
    lbrack: '\u005B',
    le: '\u2264',
    leftleftarrows: '\u21C7',
    leftthreetimes: '\u22CB',
    lessdot: '\u22D6',
    lmoust: '\u23B0',
    lnE: '\u2268',
    lnap: '\u2A89',
    lne: '\u2A87',
    lnsim: '\u22E6',
    longmapsto: '\u27FC',
    looparrowright: '\u21AC',
    lowast: '\u2217',
    loz: '\u25CA',
    lt: '\u003C',
    ltimes: '\u22C9',
    ltri: '\u25C3',
    macr: '\u00AF',
    malt: '\u2720',
    mho: '\u2127',
    mu: '\u03BC',
    multimap: '\u22B8',
    nLeftarrow: '\u21CD',
    nLeftrightarrow: '\u21CE',
    nRightarrow: '\u21CF',
    nVDash: '\u22AF',
    nVdash: '\u22AE',
    natur: '\u266E',
    nearr: '\u2197',
    nharr: '\u21AE',
    nlarr: '\u219A',
    not: '\u00AC',
    nrarr: '\u219B',
    nu: '\u03BD',
    nvDash: '\u22AD',
    nvdash: '\u22AC',
    nwarr: '\u2196',
    omega: '\u03C9',
    omicron: '\u03BF',
    or: '\u2228',
    osol: '\u2298',
    period: '\u002E',
    phi: '\u03C6',
    phiv: '\u03D5',
    pi: '\u03C0',
    piv: '\u03D6',
    prap: '\u2AB7',
    precnapprox: '\u2AB9',
    precneqq: '\u2AB5',
    precnsim: '\u22E8',
    prime: '\u2032',
    psi: '\u03C8',
    quot: '\u0022',
    rarrtl: '\u21A3',
    rbrace: '\u007D',
    rbrack: '\u005D',
    rho: '\u03C1',
    rhov: '\u03F1',
    rightrightarrows: '\u21C9',
    rightthreetimes: '\u22CC',
    ring: '\u02DA',
    rmoust: '\u23B1',
    rtimes: '\u22CA',
    rtri: '\u25B9',
    scap: '\u2AB8',
    scnE: '\u2AB6',
    scnap: '\u2ABA',
    scnsim: '\u22E9',
    sdot: '\u22C5',
    searr: '\u2198',
    sect: '\u00A7',
    sharp: '\u266F',
    sigma: '\u03C3',
    sigmav: '\u03C2',
    simne: '\u2246',
    smile: '\u2323',
    spades: '\u2660',
    sub: '\u2282',
    subE: '\u2AC5',
    subnE: '\u2ACB',
    subne: '\u228A',
    supE: '\u2AC6',
    supnE: '\u2ACC',
    supne: '\u228B',
    swarr: '\u2199',
    tau: '\u03C4',
    theta: '\u03B8',
    thetav: '\u03D1',
    tilde: '\u02DC',
    times: '\u00D7',
    triangle: '\u25B5',
    triangleq: '\u225C',
    upsi: '\u03C5',
    upuparrows: '\u21C8',
    veebar: '\u22BB',
    vellip: '\u22EE',
    weierp: '\u2118',
    xi: '\u03BE',
    yen: '\u00A5',
    zeta: '\u03B6',
    zigrarr: '\u21DD',
    nbsp: '\u00A0',
    rsquo: '\u2019',
    lsquo: '\u2018'
};
var loaded = {};
function add(additions, file) {
    Object.assign(exports.entities, additions);
    loaded[file] = true;
}
exports.add = add;
function remove(entity) {
    delete exports.entities[entity];
}
exports.remove = remove;
function translate(text) {
    return text.replace(/&([a-z][a-z0-9]*|#(?:[0-9]+|x[0-9a-f]+));/ig, replace);
}
exports.translate = translate;
function replace(match, entity) {
    if (entity.charAt(0) === '#') {
        return numeric(entity.slice(1));
    }
    if (exports.entities[entity]) {
        return exports.entities[entity];
    }
    if (exports.options['loadMissingEntities']) {
        var file = entity.match(/^[a-zA-Z](fr|scr|opf)$/) ? RegExp.$1 : entity.charAt(0).toLowerCase();
        if (!loaded[file]) {
            loaded[file] = true;
            (0, Retries_js_1.retryAfter)((0, AsyncLoad_js_1.asyncLoad)('./util/entities/' + file + '.js'));
        }
    }
    return match;
}
function numeric(entity) {
    var n = entity.charAt(0) === 'x' ? parseInt(entity.slice(1), 16) : parseInt(entity);
    return String.fromCodePoint(n);
}
exports.numeric = numeric; //# sourceMappingURL=Entities.js.map
}}),
"[project]/node_modules/mathjax-full/js/util/LinkedList.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __generator = this && this.__generator || function(thisArg, body) {
    var _ = {
        label: 0,
        sent: function() {
            if (t[0] & 1) throw t[1];
            return t[1];
        },
        trys: [],
        ops: []
    }, f, y, t, g;
    return g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
    }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
    }), g;
    "TURBOPACK unreachable";
    function verb(n) {
        return function(v) {
            return step([
                n,
                v
            ]);
        };
    }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while(_)try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [
                op[0] & 2,
                t.value
            ];
            switch(op[0]){
                case 0:
                case 1:
                    t = op;
                    break;
                case 4:
                    _.label++;
                    return {
                        value: op[1],
                        done: false
                    };
                case 5:
                    _.label++;
                    y = op[1];
                    op = [
                        0
                    ];
                    continue;
                case 7:
                    op = _.ops.pop();
                    _.trys.pop();
                    continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                        _ = 0;
                        continue;
                    }
                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                        _.label = op[1];
                        break;
                    }
                    if (op[0] === 6 && _.label < t[1]) {
                        _.label = t[1];
                        t = op;
                        break;
                    }
                    if (t && _.label < t[2]) {
                        _.label = t[2];
                        _.ops.push(op);
                        break;
                    }
                    if (t[2]) _.ops.pop();
                    _.trys.pop();
                    continue;
            }
            op = body.call(thisArg, _);
        } catch (e) {
            op = [
                6,
                e
            ];
            y = 0;
        } finally{
            f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return {
            value: op[0] ? op[1] : void 0,
            done: true
        };
    }
};
var __read = this && this.__read || function(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);
    } catch (error) {
        e = {
            error: error
        };
    } finally{
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        } finally{
            if (e) throw e.error;
        }
    }
    return ar;
};
var __spreadArray = this && this.__spreadArray || function(to, from, pack) {
    if (pack || arguments.length === 2) for(var i = 0, l = from.length, ar; i < l; i++){
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var __values = this && this.__values || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function() {
            if (o && i >= o.length) o = void 0;
            return {
                value: o && o[i++],
                done: !o
            };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.LinkedList = exports.ListItem = exports.END = void 0;
exports.END = Symbol();
var ListItem = function() {
    function ListItem(data) {
        if (data === void 0) {
            data = null;
        }
        this.next = null;
        this.prev = null;
        this.data = data;
    }
    return ListItem;
}();
exports.ListItem = ListItem;
var LinkedList = function() {
    function LinkedList() {
        var args = [];
        for(var _i = 0; _i < arguments.length; _i++){
            args[_i] = arguments[_i];
        }
        this.list = new ListItem(exports.END);
        this.list.next = this.list.prev = this.list;
        this.push.apply(this, __spreadArray([], __read(args), false));
    }
    LinkedList.prototype.isBefore = function(a, b) {
        return a < b;
    };
    LinkedList.prototype.push = function() {
        var e_1, _a;
        var args = [];
        for(var _i = 0; _i < arguments.length; _i++){
            args[_i] = arguments[_i];
        }
        try {
            for(var args_1 = __values(args), args_1_1 = args_1.next(); !args_1_1.done; args_1_1 = args_1.next()){
                var data = args_1_1.value;
                var item = new ListItem(data);
                item.next = this.list;
                item.prev = this.list.prev;
                this.list.prev = item;
                item.prev.next = item;
            }
        } catch (e_1_1) {
            e_1 = {
                error: e_1_1
            };
        } finally{
            try {
                if (args_1_1 && !args_1_1.done && (_a = args_1.return)) _a.call(args_1);
            } finally{
                if (e_1) throw e_1.error;
            }
        }
        return this;
    };
    LinkedList.prototype.pop = function() {
        var item = this.list.prev;
        if (item.data === exports.END) {
            return null;
        }
        this.list.prev = item.prev;
        item.prev.next = this.list;
        item.next = item.prev = null;
        return item.data;
    };
    LinkedList.prototype.unshift = function() {
        var e_2, _a;
        var args = [];
        for(var _i = 0; _i < arguments.length; _i++){
            args[_i] = arguments[_i];
        }
        try {
            for(var _b = __values(args.slice(0).reverse()), _c = _b.next(); !_c.done; _c = _b.next()){
                var data = _c.value;
                var item = new ListItem(data);
                item.next = this.list.next;
                item.prev = this.list;
                this.list.next = item;
                item.next.prev = item;
            }
        } catch (e_2_1) {
            e_2 = {
                error: e_2_1
            };
        } finally{
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            } finally{
                if (e_2) throw e_2.error;
            }
        }
        return this;
    };
    LinkedList.prototype.shift = function() {
        var item = this.list.next;
        if (item.data === exports.END) {
            return null;
        }
        this.list.next = item.next;
        item.next.prev = this.list;
        item.next = item.prev = null;
        return item.data;
    };
    LinkedList.prototype.remove = function() {
        var e_3, _a;
        var items = [];
        for(var _i = 0; _i < arguments.length; _i++){
            items[_i] = arguments[_i];
        }
        var map = new Map();
        try {
            for(var items_1 = __values(items), items_1_1 = items_1.next(); !items_1_1.done; items_1_1 = items_1.next()){
                var item_1 = items_1_1.value;
                map.set(item_1, true);
            }
        } catch (e_3_1) {
            e_3 = {
                error: e_3_1
            };
        } finally{
            try {
                if (items_1_1 && !items_1_1.done && (_a = items_1.return)) _a.call(items_1);
            } finally{
                if (e_3) throw e_3.error;
            }
        }
        var item = this.list.next;
        while(item.data !== exports.END){
            var next = item.next;
            if (map.has(item.data)) {
                item.prev.next = item.next;
                item.next.prev = item.prev;
                item.next = item.prev = null;
            }
            item = next;
        }
    };
    LinkedList.prototype.clear = function() {
        this.list.next.prev = this.list.prev.next = null;
        this.list.next = this.list.prev = this.list;
        return this;
    };
    LinkedList.prototype[Symbol.iterator] = function() {
        var current;
        return __generator(this, function(_a) {
            switch(_a.label){
                case 0:
                    current = this.list.next;
                    _a.label = 1;
                case 1:
                    if (!(current.data !== exports.END)) return [
                        3,
                        3
                    ];
                    return [
                        4,
                        current.data
                    ];
                case 2:
                    _a.sent();
                    current = current.next;
                    return [
                        3,
                        1
                    ];
                case 3:
                    return [
                        2
                    ];
            }
        });
    };
    LinkedList.prototype.reversed = function() {
        var current;
        return __generator(this, function(_a) {
            switch(_a.label){
                case 0:
                    current = this.list.prev;
                    _a.label = 1;
                case 1:
                    if (!(current.data !== exports.END)) return [
                        3,
                        3
                    ];
                    return [
                        4,
                        current.data
                    ];
                case 2:
                    _a.sent();
                    current = current.prev;
                    return [
                        3,
                        1
                    ];
                case 3:
                    return [
                        2
                    ];
            }
        });
    };
    LinkedList.prototype.insert = function(data, isBefore) {
        if (isBefore === void 0) {
            isBefore = null;
        }
        if (isBefore === null) {
            isBefore = this.isBefore.bind(this);
        }
        var item = new ListItem(data);
        var cur = this.list.next;
        while(cur.data !== exports.END && isBefore(cur.data, item.data)){
            cur = cur.next;
        }
        item.prev = cur.prev;
        item.next = cur;
        cur.prev.next = cur.prev = item;
        return this;
    };
    LinkedList.prototype.sort = function(isBefore) {
        var e_4, _a;
        if (isBefore === void 0) {
            isBefore = null;
        }
        if (isBefore === null) {
            isBefore = this.isBefore.bind(this);
        }
        var lists = [];
        try {
            for(var _b = __values(this), _c = _b.next(); !_c.done; _c = _b.next()){
                var item = _c.value;
                lists.push(new LinkedList(item));
            }
        } catch (e_4_1) {
            e_4 = {
                error: e_4_1
            };
        } finally{
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            } finally{
                if (e_4) throw e_4.error;
            }
        }
        this.list.next = this.list.prev = this.list;
        while(lists.length > 1){
            var l1 = lists.shift();
            var l2 = lists.shift();
            l1.merge(l2, isBefore);
            lists.push(l1);
        }
        if (lists.length) {
            this.list = lists[0].list;
        }
        return this;
    };
    LinkedList.prototype.merge = function(list, isBefore) {
        var _a, _b, _c, _d, _e;
        if (isBefore === void 0) {
            isBefore = null;
        }
        if (isBefore === null) {
            isBefore = this.isBefore.bind(this);
        }
        var lcur = this.list.next;
        var mcur = list.list.next;
        while(lcur.data !== exports.END && mcur.data !== exports.END){
            if (isBefore(mcur.data, lcur.data)) {
                _a = __read([
                    lcur,
                    mcur
                ], 2), mcur.prev.next = _a[0], lcur.prev.next = _a[1];
                _b = __read([
                    lcur.prev,
                    mcur.prev
                ], 2), mcur.prev = _b[0], lcur.prev = _b[1];
                _c = __read([
                    list.list,
                    this.list
                ], 2), this.list.prev.next = _c[0], list.list.prev.next = _c[1];
                _d = __read([
                    list.list.prev,
                    this.list.prev
                ], 2), this.list.prev = _d[0], list.list.prev = _d[1];
                _e = __read([
                    mcur.next,
                    lcur
                ], 2), lcur = _e[0], mcur = _e[1];
            } else {
                lcur = lcur.next;
            }
        }
        if (mcur.data !== exports.END) {
            this.list.prev.next = list.list.next;
            list.list.next.prev = this.list.prev;
            list.list.prev.next = this.list;
            this.list.prev = list.list.prev;
            list.list.next = list.list.prev = list.list;
        }
        return this;
    };
    return LinkedList;
}();
exports.LinkedList = LinkedList; //# sourceMappingURL=LinkedList.js.map
}}),
"[project]/node_modules/mathjax-full/js/util/BitField.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __extends = this && this.__extends || function() {
    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || ({
            __proto__: []
        }) instanceof Array && function(d, b) {
            d.__proto__ = b;
        } || function(d, b) {
            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
        };
        return extendStatics(d, b);
    };
    return function(d, b) {
        if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
}();
var __values = this && this.__values || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function() {
            if (o && i >= o.length) o = void 0;
            return {
                value: o && o[i++],
                done: !o
            };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = this && this.__read || function(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);
    } catch (error) {
        e = {
            error: error
        };
    } finally{
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        } finally{
            if (e) throw e.error;
        }
    }
    return ar;
};
var __spreadArray = this && this.__spreadArray || function(to, from, pack) {
    if (pack || arguments.length === 2) for(var i = 0, l = from.length, ar; i < l; i++){
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.BitFieldClass = exports.BitField = void 0;
var BitField = function() {
    function BitField() {
        this.bits = 0;
    }
    BitField.allocate = function() {
        var e_1, _a;
        var names = [];
        for(var _i = 0; _i < arguments.length; _i++){
            names[_i] = arguments[_i];
        }
        try {
            for(var names_1 = __values(names), names_1_1 = names_1.next(); !names_1_1.done; names_1_1 = names_1.next()){
                var name_1 = names_1_1.value;
                if (this.has(name_1)) {
                    throw new Error('Bit already allocated for ' + name_1);
                }
                if (this.next === BitField.MAXBIT) {
                    throw new Error('Maximum number of bits already allocated');
                }
                this.names.set(name_1, this.next);
                this.next <<= 1;
            }
        } catch (e_1_1) {
            e_1 = {
                error: e_1_1
            };
        } finally{
            try {
                if (names_1_1 && !names_1_1.done && (_a = names_1.return)) _a.call(names_1);
            } finally{
                if (e_1) throw e_1.error;
            }
        }
    };
    BitField.has = function(name) {
        return this.names.has(name);
    };
    BitField.prototype.set = function(name) {
        this.bits |= this.getBit(name);
    };
    BitField.prototype.clear = function(name) {
        this.bits &= ~this.getBit(name);
    };
    BitField.prototype.isSet = function(name) {
        return !!(this.bits & this.getBit(name));
    };
    BitField.prototype.reset = function() {
        this.bits = 0;
    };
    BitField.prototype.getBit = function(name) {
        var bit = this.constructor.names.get(name);
        if (!bit) {
            throw new Error('Unknown bit-field name: ' + name);
        }
        return bit;
    };
    BitField.MAXBIT = 1 << 31;
    BitField.next = 1;
    BitField.names = new Map();
    return BitField;
}();
exports.BitField = BitField;
function BitFieldClass() {
    var names = [];
    for(var _i = 0; _i < arguments.length; _i++){
        names[_i] = arguments[_i];
    }
    var Bits = function(_super) {
        __extends(Bits, _super);
        function Bits() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return Bits;
    }(BitField);
    Bits.allocate.apply(Bits, __spreadArray([], __read(names), false));
    return Bits;
}
exports.BitFieldClass = BitFieldClass; //# sourceMappingURL=BitField.js.map
}}),
"[project]/node_modules/mathjax-full/js/adaptors/NodeMixin.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __extends = this && this.__extends || function() {
    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || ({
            __proto__: []
        }) instanceof Array && function(d, b) {
            d.__proto__ = b;
        } || function(d, b) {
            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
        };
        return extendStatics(d, b);
    };
    return function(d, b) {
        if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
}();
var __assign = this && this.__assign || function() {
    __assign = Object.assign || function(t) {
        for(var s, i = 1, n = arguments.length; i < n; i++){
            s = arguments[i];
            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.NodeMixin = exports.NodeMixinOptions = void 0;
var Options_js_1 = __turbopack_context__.r("[project]/node_modules/mathjax-full/js/util/Options.js [app-rsc] (ecmascript)");
exports.NodeMixinOptions = {
    badCSS: true,
    badSizes: true
};
function NodeMixin(Base, options) {
    var _a;
    if (options === void 0) {
        options = {};
    }
    options = (0, Options_js_1.userOptions)((0, Options_js_1.defaultOptions)({}, exports.NodeMixinOptions), options);
    return _a = function(_super) {
        __extends(NodeAdaptor, _super);
        function NodeAdaptor() {
            var args = [];
            for(var _i = 0; _i < arguments.length; _i++){
                args[_i] = arguments[_i];
            }
            var _this = _super.call(this, args[0]) || this;
            var CLASS = _this.constructor;
            _this.options = (0, Options_js_1.userOptions)((0, Options_js_1.defaultOptions)({}, CLASS.OPTIONS), args[1]);
            return _this;
        }
        NodeAdaptor.prototype.fontSize = function(node) {
            return options.badCSS ? this.options.fontSize : _super.prototype.fontSize.call(this, node);
        };
        NodeAdaptor.prototype.fontFamily = function(node) {
            return options.badCSS ? this.options.fontFamily : _super.prototype.fontFamily.call(this, node);
        };
        NodeAdaptor.prototype.nodeSize = function(node, em, local) {
            if (em === void 0) {
                em = 1;
            }
            if (local === void 0) {
                local = null;
            }
            if (!options.badSizes) {
                return _super.prototype.nodeSize.call(this, node, em, local);
            }
            var text = this.textContent(node);
            var non = Array.from(text.replace(NodeAdaptor.cjkPattern, '')).length;
            var CJK = Array.from(text).length - non;
            return [
                CJK * this.options.cjkCharWidth + non * this.options.unknownCharWidth,
                this.options.unknownCharHeight
            ];
        };
        NodeAdaptor.prototype.nodeBBox = function(node) {
            return options.badSizes ? {
                left: 0,
                right: 0,
                top: 0,
                bottom: 0
            } : _super.prototype.nodeBBox.call(this, node);
        };
        return NodeAdaptor;
    }(Base), _a.OPTIONS = __assign(__assign({}, options.badCSS ? {
        fontSize: 16,
        fontFamily: 'Times'
    } : {}), options.badSizes ? {
        cjkCharWidth: 1,
        unknownCharWidth: .6,
        unknownCharHeight: .8
    } : {}), _a.cjkPattern = new RegExp([
        '[',
        '\u1100-\u115F',
        '\u2329\u232A',
        '\u2E80-\u303E',
        '\u3040-\u3247',
        '\u3250-\u4DBF',
        '\u4E00-\uA4C6',
        '\uA960-\uA97C',
        '\uAC00-\uD7A3',
        '\uF900-\uFAFF',
        '\uFE10-\uFE19',
        '\uFE30-\uFE6B',
        '\uFF01-\uFF60\uFFE0-\uFFE6',
        "\uD82C\uDC00-\uD82C\uDC01",
        "\uD83C\uDE00-\uD83C\uDE51",
        "\uD840\uDC00-\uD8BF\uDFFD",
        ']'
    ].join(''), 'gu'), _a;
}
exports.NodeMixin = NodeMixin; //# sourceMappingURL=NodeMixin.js.map
}}),
"[project]/node_modules/mathjax-full/js/adaptors/lite/Element.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __assign = this && this.__assign || function() {
    __assign = Object.assign || function(t) {
        for(var s, i = 1, n = arguments.length; i < n; i++){
            s = arguments[i];
            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __read = this && this.__read || function(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);
    } catch (error) {
        e = {
            error: error
        };
    } finally{
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        } finally{
            if (e) throw e.error;
        }
    }
    return ar;
};
var __spreadArray = this && this.__spreadArray || function(to, from, pack) {
    if (pack || arguments.length === 2) for(var i = 0, l = from.length, ar; i < l; i++){
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var __values = this && this.__values || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function() {
            if (o && i >= o.length) o = void 0;
            return {
                value: o && o[i++],
                done: !o
            };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.LiteElement = void 0;
var LiteElement = function() {
    function LiteElement(kind, attributes, children) {
        var e_1, _a;
        if (attributes === void 0) {
            attributes = {};
        }
        if (children === void 0) {
            children = [];
        }
        this.kind = kind;
        this.attributes = __assign({}, attributes);
        this.children = __spreadArray([], __read(children), false);
        try {
            for(var _b = __values(this.children), _c = _b.next(); !_c.done; _c = _b.next()){
                var child = _c.value;
                child.parent = this;
            }
        } catch (e_1_1) {
            e_1 = {
                error: e_1_1
            };
        } finally{
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            } finally{
                if (e_1) throw e_1.error;
            }
        }
        this.styles = null;
    }
    return LiteElement;
}();
exports.LiteElement = LiteElement; //# sourceMappingURL=Element.js.map
}}),
"[project]/node_modules/mathjax-full/js/adaptors/lite/Document.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.LiteDocument = void 0;
var Element_js_1 = __turbopack_context__.r("[project]/node_modules/mathjax-full/js/adaptors/lite/Element.js [app-rsc] (ecmascript)");
var LiteDocument = function() {
    function LiteDocument() {
        this.root = new Element_js_1.LiteElement('html', {}, [
            this.head = new Element_js_1.LiteElement('head'),
            this.body = new Element_js_1.LiteElement('body')
        ]);
        this.type = '';
    }
    Object.defineProperty(LiteDocument.prototype, "kind", {
        get: function() {
            return '#document';
        },
        enumerable: false,
        configurable: true
    });
    return LiteDocument;
}();
exports.LiteDocument = LiteDocument; //# sourceMappingURL=Document.js.map
}}),
"[project]/node_modules/mathjax-full/js/adaptors/lite/Text.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __extends = this && this.__extends || function() {
    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || ({
            __proto__: []
        }) instanceof Array && function(d, b) {
            d.__proto__ = b;
        } || function(d, b) {
            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
        };
        return extendStatics(d, b);
    };
    return function(d, b) {
        if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
}();
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.LiteComment = exports.LiteText = void 0;
var LiteText = function() {
    function LiteText(text) {
        if (text === void 0) {
            text = '';
        }
        this.value = text;
    }
    Object.defineProperty(LiteText.prototype, "kind", {
        get: function() {
            return '#text';
        },
        enumerable: false,
        configurable: true
    });
    return LiteText;
}();
exports.LiteText = LiteText;
var LiteComment = function(_super) {
    __extends(LiteComment, _super);
    function LiteComment() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(LiteComment.prototype, "kind", {
        get: function() {
            return '#comment';
        },
        enumerable: false,
        configurable: true
    });
    return LiteComment;
}(LiteText);
exports.LiteComment = LiteComment; //# sourceMappingURL=Text.js.map
}}),
"[project]/node_modules/mathjax-full/js/adaptors/lite/List.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __read = this && this.__read || function(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);
    } catch (error) {
        e = {
            error: error
        };
    } finally{
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        } finally{
            if (e) throw e.error;
        }
    }
    return ar;
};
var __spreadArray = this && this.__spreadArray || function(to, from, pack) {
    if (pack || arguments.length === 2) for(var i = 0, l = from.length, ar; i < l; i++){
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.LiteList = void 0;
var LiteList = function() {
    function LiteList(children) {
        this.nodes = [];
        this.nodes = __spreadArray([], __read(children), false);
    }
    LiteList.prototype.append = function(node) {
        this.nodes.push(node);
    };
    LiteList.prototype[Symbol.iterator] = function() {
        var i = 0;
        return {
            next: function() {
                return i === this.nodes.length ? {
                    value: null,
                    done: true
                } : {
                    value: this.nodes[i++],
                    done: false
                };
            }
        };
    };
    return LiteList;
}();
exports.LiteList = LiteList; //# sourceMappingURL=List.js.map
}}),
"[project]/node_modules/mathjax-full/js/adaptors/lite/Parser.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    }
    __setModuleDefault(result, mod);
    return result;
};
var __read = this && this.__read || function(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);
    } catch (error) {
        e = {
            error: error
        };
    } finally{
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        } finally{
            if (e) throw e.error;
        }
    }
    return ar;
};
var __values = this && this.__values || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function() {
            if (o && i >= o.length) o = void 0;
            return {
                value: o && o[i++],
                done: !o
            };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.LiteParser = exports.PATTERNS = void 0;
var Entities = __importStar(__turbopack_context__.r("[project]/node_modules/mathjax-full/js/util/Entities.js [app-rsc] (ecmascript)"));
var Element_js_1 = __turbopack_context__.r("[project]/node_modules/mathjax-full/js/adaptors/lite/Element.js [app-rsc] (ecmascript)");
var Text_js_1 = __turbopack_context__.r("[project]/node_modules/mathjax-full/js/adaptors/lite/Text.js [app-rsc] (ecmascript)");
var PATTERNS;
(function(PATTERNS) {
    PATTERNS.TAGNAME = '[a-z][^\\s\\n>]*';
    PATTERNS.ATTNAME = '[a-z][^\\s\\n>=]*';
    PATTERNS.VALUE = "(?:'[^']*'|\"[^\"]*\"|[^\\s\\n]+)";
    PATTERNS.VALUESPLIT = "(?:'([^']*)'|\"([^\"]*)\"|([^\\s\\n]+))";
    PATTERNS.SPACE = '(?:\\s|\\n)+';
    PATTERNS.OPTIONALSPACE = '(?:\\s|\\n)*';
    PATTERNS.ATTRIBUTE = PATTERNS.ATTNAME + '(?:' + PATTERNS.OPTIONALSPACE + '=' + PATTERNS.OPTIONALSPACE + PATTERNS.VALUE + ')?';
    PATTERNS.ATTRIBUTESPLIT = '(' + PATTERNS.ATTNAME + ')(?:' + PATTERNS.OPTIONALSPACE + '=' + PATTERNS.OPTIONALSPACE + PATTERNS.VALUESPLIT + ')?';
    PATTERNS.TAG = '(<(?:' + PATTERNS.TAGNAME + '(?:' + PATTERNS.SPACE + PATTERNS.ATTRIBUTE + ')*' + PATTERNS.OPTIONALSPACE + '/?|/' + PATTERNS.TAGNAME + '|!--[^]*?--|![^]*?)(?:>|$))';
    PATTERNS.tag = new RegExp(PATTERNS.TAG, 'i');
    PATTERNS.attr = new RegExp(PATTERNS.ATTRIBUTE, 'i');
    PATTERNS.attrsplit = new RegExp(PATTERNS.ATTRIBUTESPLIT, 'i');
})(PATTERNS = exports.PATTERNS || (exports.PATTERNS = {}));
var LiteParser = function() {
    function LiteParser() {}
    LiteParser.prototype.parseFromString = function(text, _format, adaptor) {
        if (_format === void 0) {
            _format = 'text/html';
        }
        if (adaptor === void 0) {
            adaptor = null;
        }
        var root = adaptor.createDocument();
        var node = adaptor.body(root);
        var parts = text.replace(/<\?.*?\?>/g, '').split(PATTERNS.tag);
        while(parts.length){
            var text_1 = parts.shift();
            var tag = parts.shift();
            if (text_1) {
                this.addText(adaptor, node, text_1);
            }
            if (tag && tag.charAt(tag.length - 1) === '>') {
                if (tag.charAt(1) === '!') {
                    this.addComment(adaptor, node, tag);
                } else if (tag.charAt(1) === '/') {
                    node = this.closeTag(adaptor, node, tag);
                } else {
                    node = this.openTag(adaptor, node, tag, parts);
                }
            }
        }
        this.checkDocument(adaptor, root);
        return root;
    };
    LiteParser.prototype.addText = function(adaptor, node, text) {
        text = Entities.translate(text);
        return adaptor.append(node, adaptor.text(text));
    };
    LiteParser.prototype.addComment = function(adaptor, node, comment) {
        return adaptor.append(node, new Text_js_1.LiteComment(comment));
    };
    LiteParser.prototype.closeTag = function(adaptor, node, tag) {
        var kind = tag.slice(2, tag.length - 1).toLowerCase();
        while(adaptor.parent(node) && adaptor.kind(node) !== kind){
            node = adaptor.parent(node);
        }
        return adaptor.parent(node);
    };
    LiteParser.prototype.openTag = function(adaptor, node, tag, parts) {
        var PCDATA = this.constructor.PCDATA;
        var SELF_CLOSING = this.constructor.SELF_CLOSING;
        var kind = tag.match(/<(.*?)[\s\n>\/]/)[1].toLowerCase();
        var child = adaptor.node(kind);
        var attributes = tag.replace(/^<.*?[\s\n>]/, '').split(PATTERNS.attrsplit);
        if (attributes.pop().match(/>$/) || attributes.length < 5) {
            this.addAttributes(adaptor, child, attributes);
            adaptor.append(node, child);
            if (!SELF_CLOSING[kind] && !tag.match(/\/>$/)) {
                if (PCDATA[kind]) {
                    this.handlePCDATA(adaptor, child, kind, parts);
                } else {
                    node = child;
                }
            }
        }
        return node;
    };
    LiteParser.prototype.addAttributes = function(adaptor, node, attributes) {
        var CDATA_ATTR = this.constructor.CDATA_ATTR;
        while(attributes.length){
            var _a = __read(attributes.splice(0, 5), 5), name_1 = _a[1], v1 = _a[2], v2 = _a[3], v3 = _a[4];
            var value = v1 || v2 || v3 || '';
            if (!CDATA_ATTR[name_1]) {
                value = Entities.translate(value);
            }
            adaptor.setAttribute(node, name_1, value);
        }
    };
    LiteParser.prototype.handlePCDATA = function(adaptor, node, kind, parts) {
        var pcdata = [];
        var etag = '</' + kind + '>';
        var ptag = '';
        while(parts.length && ptag !== etag){
            pcdata.push(ptag);
            pcdata.push(parts.shift());
            ptag = parts.shift();
        }
        adaptor.append(node, adaptor.text(pcdata.join('')));
    };
    LiteParser.prototype.checkDocument = function(adaptor, root) {
        var e_1, _a, e_2, _b;
        var node = this.getOnlyChild(adaptor, adaptor.body(root));
        if (!node) return;
        try {
            for(var _c = __values(adaptor.childNodes(adaptor.body(root))), _d = _c.next(); !_d.done; _d = _c.next()){
                var child = _d.value;
                if (child === node) {
                    break;
                }
                if (child instanceof Text_js_1.LiteComment && child.value.match(/^<!DOCTYPE/)) {
                    root.type = child.value;
                }
            }
        } catch (e_1_1) {
            e_1 = {
                error: e_1_1
            };
        } finally{
            try {
                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
            } finally{
                if (e_1) throw e_1.error;
            }
        }
        switch(adaptor.kind(node)){
            case 'html':
                try {
                    for(var _e = __values(node.children), _f = _e.next(); !_f.done; _f = _e.next()){
                        var child = _f.value;
                        switch(adaptor.kind(child)){
                            case 'head':
                                root.head = child;
                                break;
                            case 'body':
                                root.body = child;
                                break;
                        }
                    }
                } catch (e_2_1) {
                    e_2 = {
                        error: e_2_1
                    };
                } finally{
                    try {
                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
                    } finally{
                        if (e_2) throw e_2.error;
                    }
                }
                root.root = node;
                adaptor.remove(node);
                if (adaptor.parent(root.body) !== node) {
                    adaptor.append(node, root.body);
                }
                if (adaptor.parent(root.head) !== node) {
                    adaptor.insert(root.head, root.body);
                }
                break;
            case 'head':
                root.head = adaptor.replace(node, root.head);
                break;
            case 'body':
                root.body = adaptor.replace(node, root.body);
                break;
        }
    };
    LiteParser.prototype.getOnlyChild = function(adaptor, body) {
        var e_3, _a;
        var node = null;
        try {
            for(var _b = __values(adaptor.childNodes(body)), _c = _b.next(); !_c.done; _c = _b.next()){
                var child = _c.value;
                if (child instanceof Element_js_1.LiteElement) {
                    if (node) return null;
                    node = child;
                }
            }
        } catch (e_3_1) {
            e_3 = {
                error: e_3_1
            };
        } finally{
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            } finally{
                if (e_3) throw e_3.error;
            }
        }
        return node;
    };
    LiteParser.prototype.serialize = function(adaptor, node, xml) {
        var _this = this;
        if (xml === void 0) {
            xml = false;
        }
        var SELF_CLOSING = this.constructor.SELF_CLOSING;
        var CDATA = this.constructor.CDATA_ATTR;
        var tag = adaptor.kind(node);
        var attributes = adaptor.allAttributes(node).map(function(x) {
            return x.name + '="' + (CDATA[x.name] ? x.value : _this.protectAttribute(x.value)) + '"';
        }).join(' ');
        var content = this.serializeInner(adaptor, node, xml);
        var html = '<' + tag + (attributes ? ' ' + attributes : '') + ((!xml || content) && !SELF_CLOSING[tag] ? ">".concat(content, "</").concat(tag, ">") : xml ? '/>' : '>');
        return html;
    };
    LiteParser.prototype.serializeInner = function(adaptor, node, xml) {
        var _this = this;
        if (xml === void 0) {
            xml = false;
        }
        var PCDATA = this.constructor.PCDATA;
        if (PCDATA.hasOwnProperty(node.kind)) {
            return adaptor.childNodes(node).map(function(x) {
                return adaptor.value(x);
            }).join('');
        }
        return adaptor.childNodes(node).map(function(x) {
            var kind = adaptor.kind(x);
            return kind === '#text' ? _this.protectHTML(adaptor.value(x)) : kind === '#comment' ? x.value : _this.serialize(adaptor, x, xml);
        }).join('');
    };
    LiteParser.prototype.protectAttribute = function(text) {
        if (typeof text !== 'string') {
            text = String(text);
        }
        return text.replace(/"/g, '&quot;');
    };
    LiteParser.prototype.protectHTML = function(text) {
        return text.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');
    };
    LiteParser.SELF_CLOSING = {
        area: true,
        base: true,
        br: true,
        col: true,
        command: true,
        embed: true,
        hr: true,
        img: true,
        input: true,
        keygen: true,
        link: true,
        menuitem: true,
        meta: true,
        param: true,
        source: true,
        track: true,
        wbr: true
    };
    LiteParser.PCDATA = {
        option: true,
        textarea: true,
        fieldset: true,
        title: true,
        style: true,
        script: true
    };
    LiteParser.CDATA_ATTR = {
        style: true,
        datafld: true,
        datasrc: true,
        href: true,
        src: true,
        longdesc: true,
        usemap: true,
        cite: true,
        datetime: true,
        action: true,
        axis: true,
        profile: true,
        content: true,
        scheme: true
    };
    return LiteParser;
}();
exports.LiteParser = LiteParser; //# sourceMappingURL=Parser.js.map
}}),
"[project]/node_modules/mathjax-full/js/adaptors/lite/Window.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.LiteWindow = void 0;
var Element_js_1 = __turbopack_context__.r("[project]/node_modules/mathjax-full/js/adaptors/lite/Element.js [app-rsc] (ecmascript)");
var Document_js_1 = __turbopack_context__.r("[project]/node_modules/mathjax-full/js/adaptors/lite/Document.js [app-rsc] (ecmascript)");
var List_js_1 = __turbopack_context__.r("[project]/node_modules/mathjax-full/js/adaptors/lite/List.js [app-rsc] (ecmascript)");
var Parser_js_1 = __turbopack_context__.r("[project]/node_modules/mathjax-full/js/adaptors/lite/Parser.js [app-rsc] (ecmascript)");
var LiteWindow = function() {
    function LiteWindow() {
        this.DOMParser = Parser_js_1.LiteParser;
        this.NodeList = List_js_1.LiteList;
        this.HTMLCollection = List_js_1.LiteList;
        this.HTMLElement = Element_js_1.LiteElement;
        this.DocumentFragment = List_js_1.LiteList;
        this.Document = Document_js_1.LiteDocument;
        this.document = new Document_js_1.LiteDocument();
    }
    return LiteWindow;
}();
exports.LiteWindow = LiteWindow; //# sourceMappingURL=Window.js.map
}}),
"[project]/node_modules/mathjax-full/js/adaptors/liteAdaptor.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __extends = this && this.__extends || function() {
    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || ({
            __proto__: []
        }) instanceof Array && function(d, b) {
            d.__proto__ = b;
        } || function(d, b) {
            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
        };
        return extendStatics(d, b);
    };
    return function(d, b) {
        if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
}();
var __assign = this && this.__assign || function() {
    __assign = Object.assign || function(t) {
        for(var s, i = 1, n = arguments.length; i < n; i++){
            s = arguments[i];
            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __values = this && this.__values || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function() {
            if (o && i >= o.length) o = void 0;
            return {
                value: o && o[i++],
                done: !o
            };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = this && this.__read || function(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);
    } catch (error) {
        e = {
            error: error
        };
    } finally{
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        } finally{
            if (e) throw e.error;
        }
    }
    return ar;
};
var __spreadArray = this && this.__spreadArray || function(to, from, pack) {
    if (pack || arguments.length === 2) for(var i = 0, l = from.length, ar; i < l; i++){
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.liteAdaptor = exports.LiteAdaptor = exports.LiteBase = void 0;
var DOMAdaptor_js_1 = __turbopack_context__.r("[project]/node_modules/mathjax-full/js/core/DOMAdaptor.js [app-rsc] (ecmascript)");
var NodeMixin_js_1 = __turbopack_context__.r("[project]/node_modules/mathjax-full/js/adaptors/NodeMixin.js [app-rsc] (ecmascript)");
var Document_js_1 = __turbopack_context__.r("[project]/node_modules/mathjax-full/js/adaptors/lite/Document.js [app-rsc] (ecmascript)");
var Element_js_1 = __turbopack_context__.r("[project]/node_modules/mathjax-full/js/adaptors/lite/Element.js [app-rsc] (ecmascript)");
var Text_js_1 = __turbopack_context__.r("[project]/node_modules/mathjax-full/js/adaptors/lite/Text.js [app-rsc] (ecmascript)");
var Window_js_1 = __turbopack_context__.r("[project]/node_modules/mathjax-full/js/adaptors/lite/Window.js [app-rsc] (ecmascript)");
var Parser_js_1 = __turbopack_context__.r("[project]/node_modules/mathjax-full/js/adaptors/lite/Parser.js [app-rsc] (ecmascript)");
var Styles_js_1 = __turbopack_context__.r("[project]/node_modules/mathjax-full/js/util/Styles.js [app-rsc] (ecmascript)");
var LiteBase = function(_super) {
    __extends(LiteBase, _super);
    function LiteBase() {
        var _this = _super.call(this) || this;
        _this.parser = new Parser_js_1.LiteParser();
        _this.window = new Window_js_1.LiteWindow();
        return _this;
    }
    LiteBase.prototype.parse = function(text, format) {
        return this.parser.parseFromString(text, format, this);
    };
    LiteBase.prototype.create = function(kind, _ns) {
        if (_ns === void 0) {
            _ns = null;
        }
        return new Element_js_1.LiteElement(kind);
    };
    LiteBase.prototype.text = function(text) {
        return new Text_js_1.LiteText(text);
    };
    LiteBase.prototype.comment = function(text) {
        return new Text_js_1.LiteComment(text);
    };
    LiteBase.prototype.createDocument = function() {
        return new Document_js_1.LiteDocument();
    };
    LiteBase.prototype.head = function(doc) {
        return doc.head;
    };
    LiteBase.prototype.body = function(doc) {
        return doc.body;
    };
    LiteBase.prototype.root = function(doc) {
        return doc.root;
    };
    LiteBase.prototype.doctype = function(doc) {
        return doc.type;
    };
    LiteBase.prototype.tags = function(node, name, ns) {
        if (ns === void 0) {
            ns = null;
        }
        var stack = [];
        var tags = [];
        if (ns) {
            return tags;
        }
        var n = node;
        while(n){
            var kind = n.kind;
            if (kind !== '#text' && kind !== '#comment') {
                n = n;
                if (kind === name) {
                    tags.push(n);
                }
                if (n.children.length) {
                    stack = n.children.concat(stack);
                }
            }
            n = stack.shift();
        }
        return tags;
    };
    LiteBase.prototype.elementById = function(node, id) {
        var stack = [];
        var n = node;
        while(n){
            if (n.kind !== '#text' && n.kind !== '#comment') {
                n = n;
                if (n.attributes['id'] === id) {
                    return n;
                }
                if (n.children.length) {
                    stack = n.children.concat(stack);
                }
            }
            n = stack.shift();
        }
        return null;
    };
    LiteBase.prototype.elementsByClass = function(node, name) {
        var stack = [];
        var tags = [];
        var n = node;
        while(n){
            if (n.kind !== '#text' && n.kind !== '#comment') {
                n = n;
                var classes = (n.attributes['class'] || '').trim().split(/ +/);
                if (classes.includes(name)) {
                    tags.push(n);
                }
                if (n.children.length) {
                    stack = n.children.concat(stack);
                }
            }
            n = stack.shift();
        }
        return tags;
    };
    LiteBase.prototype.getElements = function(nodes, document) {
        var e_1, _a;
        var containers = [];
        var body = this.body(document);
        try {
            for(var nodes_1 = __values(nodes), nodes_1_1 = nodes_1.next(); !nodes_1_1.done; nodes_1_1 = nodes_1.next()){
                var node = nodes_1_1.value;
                if (typeof node === 'string') {
                    if (node.charAt(0) === '#') {
                        var n = this.elementById(body, node.slice(1));
                        if (n) {
                            containers.push(n);
                        }
                    } else if (node.charAt(0) === '.') {
                        containers = containers.concat(this.elementsByClass(body, node.slice(1)));
                    } else if (node.match(/^[-a-z][-a-z0-9]*$/i)) {
                        containers = containers.concat(this.tags(body, node));
                    }
                } else if (Array.isArray(node)) {
                    containers = containers.concat(node);
                } else if (node instanceof this.window.NodeList || node instanceof this.window.HTMLCollection) {
                    containers = containers.concat(node.nodes);
                } else {
                    containers.push(node);
                }
            }
        } catch (e_1_1) {
            e_1 = {
                error: e_1_1
            };
        } finally{
            try {
                if (nodes_1_1 && !nodes_1_1.done && (_a = nodes_1.return)) _a.call(nodes_1);
            } finally{
                if (e_1) throw e_1.error;
            }
        }
        return containers;
    };
    LiteBase.prototype.contains = function(container, node) {
        while(node && node !== container){
            node = this.parent(node);
        }
        return !!node;
    };
    LiteBase.prototype.parent = function(node) {
        return node.parent;
    };
    LiteBase.prototype.childIndex = function(node) {
        return node.parent ? node.parent.children.findIndex(function(n) {
            return n === node;
        }) : -1;
    };
    LiteBase.prototype.append = function(node, child) {
        if (child.parent) {
            this.remove(child);
        }
        node.children.push(child);
        child.parent = node;
        return child;
    };
    LiteBase.prototype.insert = function(nchild, ochild) {
        if (nchild.parent) {
            this.remove(nchild);
        }
        if (ochild && ochild.parent) {
            var i = this.childIndex(ochild);
            ochild.parent.children.splice(i, 0, nchild);
            nchild.parent = ochild.parent;
        }
    };
    LiteBase.prototype.remove = function(child) {
        var i = this.childIndex(child);
        if (i >= 0) {
            child.parent.children.splice(i, 1);
        }
        child.parent = null;
        return child;
    };
    LiteBase.prototype.replace = function(nnode, onode) {
        var i = this.childIndex(onode);
        if (i >= 0) {
            onode.parent.children[i] = nnode;
            nnode.parent = onode.parent;
            onode.parent = null;
        }
        return onode;
    };
    LiteBase.prototype.clone = function(node) {
        var _this = this;
        var nnode = new Element_js_1.LiteElement(node.kind);
        nnode.attributes = __assign({}, node.attributes);
        nnode.children = node.children.map(function(n) {
            if (n.kind === '#text') {
                return new Text_js_1.LiteText(n.value);
            } else if (n.kind === '#comment') {
                return new Text_js_1.LiteComment(n.value);
            } else {
                var m = _this.clone(n);
                m.parent = nnode;
                return m;
            }
        });
        return nnode;
    };
    LiteBase.prototype.split = function(node, n) {
        var text = new Text_js_1.LiteText(node.value.slice(n));
        node.value = node.value.slice(0, n);
        node.parent.children.splice(this.childIndex(node) + 1, 0, text);
        text.parent = node.parent;
        return text;
    };
    LiteBase.prototype.next = function(node) {
        var parent = node.parent;
        if (!parent) return null;
        var i = this.childIndex(node) + 1;
        return i >= 0 && i < parent.children.length ? parent.children[i] : null;
    };
    LiteBase.prototype.previous = function(node) {
        var parent = node.parent;
        if (!parent) return null;
        var i = this.childIndex(node) - 1;
        return i >= 0 ? parent.children[i] : null;
    };
    LiteBase.prototype.firstChild = function(node) {
        return node.children[0];
    };
    LiteBase.prototype.lastChild = function(node) {
        return node.children[node.children.length - 1];
    };
    LiteBase.prototype.childNodes = function(node) {
        return __spreadArray([], __read(node.children), false);
    };
    LiteBase.prototype.childNode = function(node, i) {
        return node.children[i];
    };
    LiteBase.prototype.kind = function(node) {
        return node.kind;
    };
    LiteBase.prototype.value = function(node) {
        return node.kind === '#text' ? node.value : node.kind === '#comment' ? node.value.replace(/^<!(--)?((?:.|\n)*)\1>$/, '$2') : '';
    };
    LiteBase.prototype.textContent = function(node) {
        var _this = this;
        return node.children.reduce(function(s, n) {
            return s + (n.kind === '#text' ? n.value : n.kind === '#comment' ? '' : _this.textContent(n));
        }, '');
    };
    LiteBase.prototype.innerHTML = function(node) {
        return this.parser.serializeInner(this, node);
    };
    LiteBase.prototype.outerHTML = function(node) {
        return this.parser.serialize(this, node);
    };
    LiteBase.prototype.serializeXML = function(node) {
        return this.parser.serialize(this, node, true);
    };
    LiteBase.prototype.setAttribute = function(node, name, value, ns) {
        if (ns === void 0) {
            ns = null;
        }
        if (typeof value !== 'string') {
            value = String(value);
        }
        if (ns) {
            name = ns.replace(/.*\//, '') + ':' + name.replace(/^.*:/, '');
        }
        node.attributes[name] = value;
        if (name === 'style') {
            node.styles = null;
        }
    };
    LiteBase.prototype.getAttribute = function(node, name) {
        return node.attributes[name];
    };
    LiteBase.prototype.removeAttribute = function(node, name) {
        delete node.attributes[name];
    };
    LiteBase.prototype.hasAttribute = function(node, name) {
        return node.attributes.hasOwnProperty(name);
    };
    LiteBase.prototype.allAttributes = function(node) {
        var e_2, _a;
        var attributes = node.attributes;
        var list = [];
        try {
            for(var _b = __values(Object.keys(attributes)), _c = _b.next(); !_c.done; _c = _b.next()){
                var name_1 = _c.value;
                list.push({
                    name: name_1,
                    value: attributes[name_1]
                });
            }
        } catch (e_2_1) {
            e_2 = {
                error: e_2_1
            };
        } finally{
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            } finally{
                if (e_2) throw e_2.error;
            }
        }
        return list;
    };
    LiteBase.prototype.addClass = function(node, name) {
        var classes = (node.attributes['class'] || '').split(/ /);
        if (!classes.find(function(n) {
            return n === name;
        })) {
            classes.push(name);
            node.attributes['class'] = classes.join(' ');
        }
    };
    LiteBase.prototype.removeClass = function(node, name) {
        var classes = (node.attributes['class'] || '').split(/ /);
        var i = classes.findIndex(function(n) {
            return n === name;
        });
        if (i >= 0) {
            classes.splice(i, 1);
            node.attributes['class'] = classes.join(' ');
        }
    };
    LiteBase.prototype.hasClass = function(node, name) {
        var classes = (node.attributes['class'] || '').split(/ /);
        return !!classes.find(function(n) {
            return n === name;
        });
    };
    LiteBase.prototype.setStyle = function(node, name, value) {
        if (!node.styles) {
            node.styles = new Styles_js_1.Styles(this.getAttribute(node, 'style'));
        }
        node.styles.set(name, value);
        node.attributes['style'] = node.styles.cssText;
    };
    LiteBase.prototype.getStyle = function(node, name) {
        if (!node.styles) {
            var style = this.getAttribute(node, 'style');
            if (!style) {
                return '';
            }
            node.styles = new Styles_js_1.Styles(style);
        }
        return node.styles.get(name);
    };
    LiteBase.prototype.allStyles = function(node) {
        return this.getAttribute(node, 'style');
    };
    LiteBase.prototype.insertRules = function(node, rules) {
        node.children = [
            this.text(rules.join('\n\n') + '\n\n' + this.textContent(node))
        ];
    };
    LiteBase.prototype.fontSize = function(_node) {
        return 0;
    };
    LiteBase.prototype.fontFamily = function(_node) {
        return '';
    };
    LiteBase.prototype.nodeSize = function(_node, _em, _local) {
        if (_em === void 0) {
            _em = 1;
        }
        if (_local === void 0) {
            _local = null;
        }
        return [
            0,
            0
        ];
    };
    LiteBase.prototype.nodeBBox = function(_node) {
        return {
            left: 0,
            right: 0,
            top: 0,
            bottom: 0
        };
    };
    return LiteBase;
}(DOMAdaptor_js_1.AbstractDOMAdaptor);
exports.LiteBase = LiteBase;
var LiteAdaptor = function(_super) {
    __extends(LiteAdaptor, _super);
    function LiteAdaptor() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return LiteAdaptor;
}((0, NodeMixin_js_1.NodeMixin)(LiteBase));
exports.LiteAdaptor = LiteAdaptor;
function liteAdaptor(options) {
    if (options === void 0) {
        options = null;
    }
    return new LiteAdaptor(null, options);
}
exports.liteAdaptor = liteAdaptor; //# sourceMappingURL=liteAdaptor.js.map
}}),
"[project]/node_modules/mathjax-full/js/components/version.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.VERSION = void 0;
exports.VERSION = '3.2.2'; //# sourceMappingURL=version.js.map
}}),
"[project]/node_modules/mathjax-full/js/mathjax.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.mathjax = void 0;
var version_js_1 = __turbopack_context__.r("[project]/node_modules/mathjax-full/js/components/version.js [app-rsc] (ecmascript)");
var HandlerList_js_1 = __turbopack_context__.r("[project]/node_modules/mathjax-full/js/core/HandlerList.js [app-rsc] (ecmascript)");
var Retries_js_1 = __turbopack_context__.r("[project]/node_modules/mathjax-full/js/util/Retries.js [app-rsc] (ecmascript)");
exports.mathjax = {
    version: version_js_1.VERSION,
    handlers: new HandlerList_js_1.HandlerList(),
    document: function(document, options) {
        return exports.mathjax.handlers.document(document, options);
    },
    handleRetriesFor: Retries_js_1.handleRetriesFor,
    retryAfter: Retries_js_1.retryAfter,
    asyncLoad: null
}; //# sourceMappingURL=mathjax.js.map
}}),
"[project]/node_modules/mathjax-full/js/handlers/html/HTMLMathItem.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __extends = this && this.__extends || function() {
    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || ({
            __proto__: []
        }) instanceof Array && function(d, b) {
            d.__proto__ = b;
        } || function(d, b) {
            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
        };
        return extendStatics(d, b);
    };
    return function(d, b) {
        if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
}();
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.HTMLMathItem = void 0;
var MathItem_js_1 = __turbopack_context__.r("[project]/node_modules/mathjax-full/js/core/MathItem.js [app-rsc] (ecmascript)");
var HTMLMathItem = function(_super) {
    __extends(HTMLMathItem, _super);
    function HTMLMathItem(math, jax, display, start, end) {
        if (display === void 0) {
            display = true;
        }
        if (start === void 0) {
            start = {
                node: null,
                n: 0,
                delim: ''
            };
        }
        if (end === void 0) {
            end = {
                node: null,
                n: 0,
                delim: ''
            };
        }
        return _super.call(this, math, jax, display, start, end) || this;
    }
    Object.defineProperty(HTMLMathItem.prototype, "adaptor", {
        get: function() {
            return this.inputJax.adaptor;
        },
        enumerable: false,
        configurable: true
    });
    HTMLMathItem.prototype.updateDocument = function(_html) {
        if (this.state() < MathItem_js_1.STATE.INSERTED) {
            if (this.inputJax.processStrings) {
                var node = this.start.node;
                if (node === this.end.node) {
                    if (this.end.n && this.end.n < this.adaptor.value(this.end.node).length) {
                        this.adaptor.split(this.end.node, this.end.n);
                    }
                    if (this.start.n) {
                        node = this.adaptor.split(this.start.node, this.start.n);
                    }
                    this.adaptor.replace(this.typesetRoot, node);
                } else {
                    if (this.start.n) {
                        node = this.adaptor.split(node, this.start.n);
                    }
                    while(node !== this.end.node){
                        var next = this.adaptor.next(node);
                        this.adaptor.remove(node);
                        node = next;
                    }
                    this.adaptor.insert(this.typesetRoot, node);
                    if (this.end.n < this.adaptor.value(node).length) {
                        this.adaptor.split(node, this.end.n);
                    }
                    this.adaptor.remove(node);
                }
            } else {
                this.adaptor.replace(this.typesetRoot, this.start.node);
            }
            this.start.node = this.end.node = this.typesetRoot;
            this.start.n = this.end.n = 0;
            this.state(MathItem_js_1.STATE.INSERTED);
        }
    };
    HTMLMathItem.prototype.updateStyleSheet = function(document) {
        document.addStyleSheet();
    };
    HTMLMathItem.prototype.removeFromDocument = function(restore) {
        if (restore === void 0) {
            restore = false;
        }
        if (this.state() >= MathItem_js_1.STATE.TYPESET) {
            var adaptor = this.adaptor;
            var node = this.start.node;
            var math = adaptor.text('');
            if (restore) {
                var text = this.start.delim + this.math + this.end.delim;
                if (this.inputJax.processStrings) {
                    math = adaptor.text(text);
                } else {
                    var doc = adaptor.parse(text, 'text/html');
                    math = adaptor.firstChild(adaptor.body(doc));
                }
            }
            if (adaptor.parent(node)) {
                adaptor.replace(math, node);
            }
            this.start.node = this.end.node = math;
            this.start.n = this.end.n = 0;
        }
    };
    return HTMLMathItem;
}(MathItem_js_1.AbstractMathItem);
exports.HTMLMathItem = HTMLMathItem; //# sourceMappingURL=HTMLMathItem.js.map
}}),
"[project]/node_modules/mathjax-full/js/handlers/html/HTMLMathList.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __extends = this && this.__extends || function() {
    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || ({
            __proto__: []
        }) instanceof Array && function(d, b) {
            d.__proto__ = b;
        } || function(d, b) {
            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
        };
        return extendStatics(d, b);
    };
    return function(d, b) {
        if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
}();
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.HTMLMathList = void 0;
var MathList_js_1 = __turbopack_context__.r("[project]/node_modules/mathjax-full/js/core/MathList.js [app-rsc] (ecmascript)");
var HTMLMathList = function(_super) {
    __extends(HTMLMathList, _super);
    function HTMLMathList() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return HTMLMathList;
}(MathList_js_1.AbstractMathList);
exports.HTMLMathList = HTMLMathList; //# sourceMappingURL=HTMLMathList.js.map
}}),
"[project]/node_modules/mathjax-full/js/handlers/html/HTMLDomStrings.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __read = this && this.__read || function(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);
    } catch (error) {
        e = {
            error: error
        };
    } finally{
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        } finally{
            if (e) throw e.error;
        }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.HTMLDomStrings = void 0;
var Options_js_1 = __turbopack_context__.r("[project]/node_modules/mathjax-full/js/util/Options.js [app-rsc] (ecmascript)");
var HTMLDomStrings = function() {
    function HTMLDomStrings(options) {
        if (options === void 0) {
            options = null;
        }
        var CLASS = this.constructor;
        this.options = (0, Options_js_1.userOptions)((0, Options_js_1.defaultOptions)({}, CLASS.OPTIONS), options);
        this.init();
        this.getPatterns();
    }
    HTMLDomStrings.prototype.init = function() {
        this.strings = [];
        this.string = '';
        this.snodes = [];
        this.nodes = [];
        this.stack = [];
    };
    HTMLDomStrings.prototype.getPatterns = function() {
        var skip = (0, Options_js_1.makeArray)(this.options['skipHtmlTags']);
        var ignore = (0, Options_js_1.makeArray)(this.options['ignoreHtmlClass']);
        var process = (0, Options_js_1.makeArray)(this.options['processHtmlClass']);
        this.skipHtmlTags = new RegExp('^(?:' + skip.join('|') + ')$', 'i');
        this.ignoreHtmlClass = new RegExp('(?:^| )(?:' + ignore.join('|') + ')(?: |$)');
        this.processHtmlClass = new RegExp('(?:^| )(?:' + process + ')(?: |$)');
    };
    HTMLDomStrings.prototype.pushString = function() {
        if (this.string.match(/\S/)) {
            this.strings.push(this.string);
            this.nodes.push(this.snodes);
        }
        this.string = '';
        this.snodes = [];
    };
    HTMLDomStrings.prototype.extendString = function(node, text) {
        this.snodes.push([
            node,
            text.length
        ]);
        this.string += text;
    };
    HTMLDomStrings.prototype.handleText = function(node, ignore) {
        if (!ignore) {
            this.extendString(node, this.adaptor.value(node));
        }
        return this.adaptor.next(node);
    };
    HTMLDomStrings.prototype.handleTag = function(node, ignore) {
        if (!ignore) {
            var text = this.options['includeHtmlTags'][this.adaptor.kind(node)];
            this.extendString(node, text);
        }
        return this.adaptor.next(node);
    };
    HTMLDomStrings.prototype.handleContainer = function(node, ignore) {
        this.pushString();
        var cname = this.adaptor.getAttribute(node, 'class') || '';
        var tname = this.adaptor.kind(node) || '';
        var process = this.processHtmlClass.exec(cname);
        var next = node;
        if (this.adaptor.firstChild(node) && !this.adaptor.getAttribute(node, 'data-MJX') && (process || !this.skipHtmlTags.exec(tname))) {
            if (this.adaptor.next(node)) {
                this.stack.push([
                    this.adaptor.next(node),
                    ignore
                ]);
            }
            next = this.adaptor.firstChild(node);
            ignore = (ignore || this.ignoreHtmlClass.exec(cname)) && !process;
        } else {
            next = this.adaptor.next(node);
        }
        return [
            next,
            ignore
        ];
    };
    HTMLDomStrings.prototype.handleOther = function(node, _ignore) {
        this.pushString();
        return this.adaptor.next(node);
    };
    HTMLDomStrings.prototype.find = function(node) {
        var _a, _b;
        this.init();
        var stop = this.adaptor.next(node);
        var ignore = false;
        var include = this.options['includeHtmlTags'];
        while(node && node !== stop){
            var kind = this.adaptor.kind(node);
            if (kind === '#text') {
                node = this.handleText(node, ignore);
            } else if (include.hasOwnProperty(kind)) {
                node = this.handleTag(node, ignore);
            } else if (kind) {
                _a = __read(this.handleContainer(node, ignore), 2), node = _a[0], ignore = _a[1];
            } else {
                node = this.handleOther(node, ignore);
            }
            if (!node && this.stack.length) {
                this.pushString();
                _b = __read(this.stack.pop(), 2), node = _b[0], ignore = _b[1];
            }
        }
        this.pushString();
        var result = [
            this.strings,
            this.nodes
        ];
        this.init();
        return result;
    };
    HTMLDomStrings.OPTIONS = {
        skipHtmlTags: [
            'script',
            'noscript',
            'style',
            'textarea',
            'pre',
            'code',
            'annotation',
            'annotation-xml'
        ],
        includeHtmlTags: {
            br: '\n',
            wbr: '',
            '#comment': ''
        },
        ignoreHtmlClass: 'mathjax_ignore',
        processHtmlClass: 'mathjax_process'
    };
    return HTMLDomStrings;
}();
exports.HTMLDomStrings = HTMLDomStrings; //# sourceMappingURL=HTMLDomStrings.js.map
}}),
"[project]/node_modules/mathjax-full/js/handlers/html/HTMLDocument.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __extends = this && this.__extends || function() {
    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || ({
            __proto__: []
        }) instanceof Array && function(d, b) {
            d.__proto__ = b;
        } || function(d, b) {
            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
        };
        return extendStatics(d, b);
    };
    return function(d, b) {
        if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
}();
var __assign = this && this.__assign || function() {
    __assign = Object.assign || function(t) {
        for(var s, i = 1, n = arguments.length; i < n; i++){
            s = arguments[i];
            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __read = this && this.__read || function(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);
    } catch (error) {
        e = {
            error: error
        };
    } finally{
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        } finally{
            if (e) throw e.error;
        }
    }
    return ar;
};
var __values = this && this.__values || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function() {
            if (o && i >= o.length) o = void 0;
            return {
                value: o && o[i++],
                done: !o
            };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.HTMLDocument = void 0;
var MathDocument_js_1 = __turbopack_context__.r("[project]/node_modules/mathjax-full/js/core/MathDocument.js [app-rsc] (ecmascript)");
var Options_js_1 = __turbopack_context__.r("[project]/node_modules/mathjax-full/js/util/Options.js [app-rsc] (ecmascript)");
var HTMLMathItem_js_1 = __turbopack_context__.r("[project]/node_modules/mathjax-full/js/handlers/html/HTMLMathItem.js [app-rsc] (ecmascript)");
var HTMLMathList_js_1 = __turbopack_context__.r("[project]/node_modules/mathjax-full/js/handlers/html/HTMLMathList.js [app-rsc] (ecmascript)");
var HTMLDomStrings_js_1 = __turbopack_context__.r("[project]/node_modules/mathjax-full/js/handlers/html/HTMLDomStrings.js [app-rsc] (ecmascript)");
var MathItem_js_1 = __turbopack_context__.r("[project]/node_modules/mathjax-full/js/core/MathItem.js [app-rsc] (ecmascript)");
var HTMLDocument = function(_super) {
    __extends(HTMLDocument, _super);
    function HTMLDocument(document, adaptor, options) {
        var _this = this;
        var _a = __read((0, Options_js_1.separateOptions)(options, HTMLDomStrings_js_1.HTMLDomStrings.OPTIONS), 2), html = _a[0], dom = _a[1];
        _this = _super.call(this, document, adaptor, html) || this;
        _this.domStrings = _this.options['DomStrings'] || new HTMLDomStrings_js_1.HTMLDomStrings(dom);
        _this.domStrings.adaptor = adaptor;
        _this.styles = [];
        return _this;
    }
    HTMLDocument.prototype.findPosition = function(N, index, delim, nodes) {
        var e_1, _a;
        var adaptor = this.adaptor;
        try {
            for(var _b = __values(nodes[N]), _c = _b.next(); !_c.done; _c = _b.next()){
                var list = _c.value;
                var _d = __read(list, 2), node = _d[0], n = _d[1];
                if (index <= n && adaptor.kind(node) === '#text') {
                    return {
                        node: node,
                        n: Math.max(index, 0),
                        delim: delim
                    };
                }
                index -= n;
            }
        } catch (e_1_1) {
            e_1 = {
                error: e_1_1
            };
        } finally{
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            } finally{
                if (e_1) throw e_1.error;
            }
        }
        return {
            node: null,
            n: 0,
            delim: delim
        };
    };
    HTMLDocument.prototype.mathItem = function(item, jax, nodes) {
        var math = item.math;
        var start = this.findPosition(item.n, item.start.n, item.open, nodes);
        var end = this.findPosition(item.n, item.end.n, item.close, nodes);
        return new this.options.MathItem(math, jax, item.display, start, end);
    };
    HTMLDocument.prototype.findMath = function(options) {
        var e_2, _a, e_3, _b, _c, e_4, _d, e_5, _e;
        if (!this.processed.isSet('findMath')) {
            this.adaptor.document = this.document;
            options = (0, Options_js_1.userOptions)({
                elements: this.options.elements || [
                    this.adaptor.body(this.document)
                ]
            }, options);
            try {
                for(var _f = __values(this.adaptor.getElements(options['elements'], this.document)), _g = _f.next(); !_g.done; _g = _f.next()){
                    var container = _g.value;
                    var _h = __read([
                        null,
                        null
                    ], 2), strings = _h[0], nodes = _h[1];
                    try {
                        for(var _j = (e_3 = void 0, __values(this.inputJax)), _k = _j.next(); !_k.done; _k = _j.next()){
                            var jax = _k.value;
                            var list = new this.options['MathList']();
                            if (jax.processStrings) {
                                if (strings === null) {
                                    _c = __read(this.domStrings.find(container), 2), strings = _c[0], nodes = _c[1];
                                }
                                try {
                                    for(var _l = (e_4 = void 0, __values(jax.findMath(strings))), _m = _l.next(); !_m.done; _m = _l.next()){
                                        var math = _m.value;
                                        list.push(this.mathItem(math, jax, nodes));
                                    }
                                } catch (e_4_1) {
                                    e_4 = {
                                        error: e_4_1
                                    };
                                } finally{
                                    try {
                                        if (_m && !_m.done && (_d = _l.return)) _d.call(_l);
                                    } finally{
                                        if (e_4) throw e_4.error;
                                    }
                                }
                            } else {
                                try {
                                    for(var _o = (e_5 = void 0, __values(jax.findMath(container))), _p = _o.next(); !_p.done; _p = _o.next()){
                                        var math = _p.value;
                                        var item = new this.options.MathItem(math.math, jax, math.display, math.start, math.end);
                                        list.push(item);
                                    }
                                } catch (e_5_1) {
                                    e_5 = {
                                        error: e_5_1
                                    };
                                } finally{
                                    try {
                                        if (_p && !_p.done && (_e = _o.return)) _e.call(_o);
                                    } finally{
                                        if (e_5) throw e_5.error;
                                    }
                                }
                            }
                            this.math.merge(list);
                        }
                    } catch (e_3_1) {
                        e_3 = {
                            error: e_3_1
                        };
                    } finally{
                        try {
                            if (_k && !_k.done && (_b = _j.return)) _b.call(_j);
                        } finally{
                            if (e_3) throw e_3.error;
                        }
                    }
                }
            } catch (e_2_1) {
                e_2 = {
                    error: e_2_1
                };
            } finally{
                try {
                    if (_g && !_g.done && (_a = _f.return)) _a.call(_f);
                } finally{
                    if (e_2) throw e_2.error;
                }
            }
            this.processed.set('findMath');
        }
        return this;
    };
    HTMLDocument.prototype.updateDocument = function() {
        if (!this.processed.isSet('updateDocument')) {
            this.addPageElements();
            this.addStyleSheet();
            _super.prototype.updateDocument.call(this);
            this.processed.set('updateDocument');
        }
        return this;
    };
    HTMLDocument.prototype.addPageElements = function() {
        var body = this.adaptor.body(this.document);
        var node = this.documentPageElements();
        if (node) {
            this.adaptor.append(body, node);
        }
    };
    HTMLDocument.prototype.addStyleSheet = function() {
        var sheet = this.documentStyleSheet();
        var adaptor = this.adaptor;
        if (sheet && !adaptor.parent(sheet)) {
            var head = adaptor.head(this.document);
            var styles = this.findSheet(head, adaptor.getAttribute(sheet, 'id'));
            if (styles) {
                adaptor.replace(sheet, styles);
            } else {
                adaptor.append(head, sheet);
            }
        }
    };
    HTMLDocument.prototype.findSheet = function(head, id) {
        var e_6, _a;
        if (id) {
            try {
                for(var _b = __values(this.adaptor.tags(head, 'style')), _c = _b.next(); !_c.done; _c = _b.next()){
                    var sheet = _c.value;
                    if (this.adaptor.getAttribute(sheet, 'id') === id) {
                        return sheet;
                    }
                }
            } catch (e_6_1) {
                e_6 = {
                    error: e_6_1
                };
            } finally{
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                } finally{
                    if (e_6) throw e_6.error;
                }
            }
        }
        return null;
    };
    HTMLDocument.prototype.removeFromDocument = function(restore) {
        var e_7, _a;
        if (restore === void 0) {
            restore = false;
        }
        if (this.processed.isSet('updateDocument')) {
            try {
                for(var _b = __values(this.math), _c = _b.next(); !_c.done; _c = _b.next()){
                    var math = _c.value;
                    if (math.state() >= MathItem_js_1.STATE.INSERTED) {
                        math.state(MathItem_js_1.STATE.TYPESET, restore);
                    }
                }
            } catch (e_7_1) {
                e_7 = {
                    error: e_7_1
                };
            } finally{
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                } finally{
                    if (e_7) throw e_7.error;
                }
            }
        }
        this.processed.clear('updateDocument');
        return this;
    };
    HTMLDocument.prototype.documentStyleSheet = function() {
        return this.outputJax.styleSheet(this);
    };
    HTMLDocument.prototype.documentPageElements = function() {
        return this.outputJax.pageElements(this);
    };
    HTMLDocument.prototype.addStyles = function(styles) {
        this.styles.push(styles);
    };
    HTMLDocument.prototype.getStyles = function() {
        return this.styles;
    };
    HTMLDocument.KIND = 'HTML';
    HTMLDocument.OPTIONS = __assign(__assign({}, MathDocument_js_1.AbstractMathDocument.OPTIONS), {
        renderActions: (0, Options_js_1.expandable)(__assign(__assign({}, MathDocument_js_1.AbstractMathDocument.OPTIONS.renderActions), {
            styles: [
                MathItem_js_1.STATE.INSERTED + 1,
                '',
                'updateStyleSheet',
                false
            ]
        })),
        MathList: HTMLMathList_js_1.HTMLMathList,
        MathItem: HTMLMathItem_js_1.HTMLMathItem,
        DomStrings: null
    });
    return HTMLDocument;
}(MathDocument_js_1.AbstractMathDocument);
exports.HTMLDocument = HTMLDocument; //# sourceMappingURL=HTMLDocument.js.map
}}),
"[project]/node_modules/mathjax-full/js/handlers/html/HTMLHandler.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __extends = this && this.__extends || function() {
    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || ({
            __proto__: []
        }) instanceof Array && function(d, b) {
            d.__proto__ = b;
        } || function(d, b) {
            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
        };
        return extendStatics(d, b);
    };
    return function(d, b) {
        if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
}();
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.HTMLHandler = void 0;
var Handler_js_1 = __turbopack_context__.r("[project]/node_modules/mathjax-full/js/core/Handler.js [app-rsc] (ecmascript)");
var HTMLDocument_js_1 = __turbopack_context__.r("[project]/node_modules/mathjax-full/js/handlers/html/HTMLDocument.js [app-rsc] (ecmascript)");
var HTMLHandler = function(_super) {
    __extends(HTMLHandler, _super);
    function HTMLHandler() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.documentClass = HTMLDocument_js_1.HTMLDocument;
        return _this;
    }
    HTMLHandler.prototype.handlesDocument = function(document) {
        var adaptor = this.adaptor;
        if (typeof document === 'string') {
            try {
                document = adaptor.parse(document, 'text/html');
            } catch (err) {}
        }
        if (document instanceof adaptor.window.Document || document instanceof adaptor.window.HTMLElement || document instanceof adaptor.window.DocumentFragment) {
            return true;
        }
        return false;
    };
    HTMLHandler.prototype.create = function(document, options) {
        var adaptor = this.adaptor;
        if (typeof document === 'string') {
            document = adaptor.parse(document, 'text/html');
        } else if (document instanceof adaptor.window.HTMLElement || document instanceof adaptor.window.DocumentFragment) {
            var child = document;
            document = adaptor.parse('', 'text/html');
            adaptor.append(adaptor.body(document), child);
        }
        return _super.prototype.create.call(this, document, options);
    };
    return HTMLHandler;
}(Handler_js_1.AbstractHandler);
exports.HTMLHandler = HTMLHandler; //# sourceMappingURL=HTMLHandler.js.map
}}),
"[project]/node_modules/mathjax-full/js/handlers/html.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.RegisterHTMLHandler = void 0;
var mathjax_js_1 = __turbopack_context__.r("[project]/node_modules/mathjax-full/js/mathjax.js [app-rsc] (ecmascript)");
var HTMLHandler_js_1 = __turbopack_context__.r("[project]/node_modules/mathjax-full/js/handlers/html/HTMLHandler.js [app-rsc] (ecmascript)");
function RegisterHTMLHandler(adaptor) {
    var handler = new HTMLHandler_js_1.HTMLHandler(adaptor);
    mathjax_js_1.mathjax.handlers.register(handler);
    return handler;
}
exports.RegisterHTMLHandler = RegisterHTMLHandler; //# sourceMappingURL=html.js.map
}}),

};

//# sourceMappingURL=node_modules_mathjax-full_js_180579a3._.js.map