1:"$Sreact.fragment"
2:I[7555,[],""]
3:I[1295,[],""]
5:I[9665,[],"MetadataBoundary"]
7:I[9665,[],"OutletBoundary"]
a:I[4911,[],"AsyncMetadataOutlet"]
c:I[9665,[],"ViewportBoundary"]
e:I[6614,[],""]
:HL["/primers/_next/static/css/2b127b79118b60e8.css","style"]
0:{"P":null,"b":"zugPV5U-kNOPmVVSg1gFy","p":"/primers","c":["","document","zh","02.Python","03.%E5%AE%B9%E5%99%A8%E7%B1%BB%E5%9E%8B","04.%E5%AD%97%E5%85%B8%20dict.md"],"i":false,"f":[[["",{"children":["document",{"children":[["lang","zh","d"],{"children":[["category","02.Python","d"],{"children":[["chapter","03.%E5%AE%B9%E5%99%A8%E7%B1%BB%E5%9E%8B","d"],{"children":[["doc","04.%E5%AD%97%E5%85%B8%20dict.md","d"],{"children":["__PAGE__",{}]}]}]}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/primers/_next/static/css/2b127b79118b60e8.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":["$","body",null,{"children":["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]}]]}],{"children":["document",["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":[["lang","zh","d"],["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":[["category","02.Python","d"],["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":[["chapter","03.%E5%AE%B9%E5%99%A8%E7%B1%BB%E5%9E%8B","d"],["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":[["doc","04.%E5%AD%97%E5%85%B8%20dict.md","d"],["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L4",["$","$L5",null,{"children":"$L6"}],null,["$","$L7",null,{"children":["$L8","$L9",["$","$La",null,{"promise":"$@b"}]]}]]}],{},null,false]},null,false]},null,false]},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","Evhke5AH-QH2Yhrfgct-L",{"children":[["$","$Lc",null,{"children":"$Ld"}],null]}],null]}],false]],"m":"$undefined","G":["$e","$undefined"],"s":false,"S":true}
f:"$Sreact.suspense"
10:I[4911,[],"AsyncMetadata"]
6:["$","$f",null,{"fallback":null,"children":["$","$L10",null,{"promise":"$@11"}]}]
9:null
d:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
8:null
11:{"metadata":[["$","title","0",{"children":"Primers - 编程伙伴"}],["$","meta","1",{"name":"description","content":"欢迎来到 Primers ———— 你的编程学习伙伴。Primers 致力于为各类编程学习者提供全面、系统的编程教程和实践资源。无论你是编程新手，还是有一定基础的开发者，Primers 都提供了适合的学习路径和丰富的实战项目，帮助你从零开始，逐步掌握编程技能，成为一名优秀的开发者。"}],["$","link","2",{"rel":"icon","href":"/primers/favicon.ico","type":"image/x-icon","sizes":"16x16"}]],"error":null,"digest":"$undefined"}
b:{"metadata":"$11:metadata","error":null,"digest":"$undefined"}
12:I[5890,["466","static/chunks/466-a16b1133b29f1fb7.js","295","static/chunks/295-61cf23778fd95768.js","197","static/chunks/app/document/%5Blang%5D/%5Bcategory%5D/%5Bchapter%5D/%5Bdoc%5D/page-5f015db9707dbded.js"],"default"]
13:I[785,["466","static/chunks/466-a16b1133b29f1fb7.js","295","static/chunks/295-61cf23778fd95768.js","197","static/chunks/app/document/%5Blang%5D/%5Bcategory%5D/%5Bchapter%5D/%5Bdoc%5D/page-5f015db9707dbded.js"],"default"]
14:T1186,# 字典（dict）

字典通过哈希表（Hash Table）实现，是一种高效的数据结构，查找元素、插入元素、删除元素都具有较快的速度。

字典的字面量使用花括号（`{}`）包裹一组 **键（key）-值（value）对** 表示，例如：

```python
score_list:dict[str,int] = {
    'Tom': 88,
    'Jerry': 99,
    'Spike': 66
}
```

```graphviz
digraph HashTable {
  node [shape=record, fontname="Helvetica"];

  score_list [label="score_list", shape=ellipse];

  // 桶的结构
  bucket1 [label="Bucket 1 | {key: Tom | value: 88}"];
  bucket2 [label="Bucket 2 | {key: Jerry | value: 99}"];
  bucket3 [label="Bucket 3 | {key: Spike | value: 66}"];

  // 指向桶
  score_list -> bucket1 [label="Tom"];
  score_list -> bucket2 [label="Jerry"];
  score_list -> bucket3 [label="Spike"];
}
```

类型标注 `dict[str,int]`，表示类型是 **键（key）类型为 `str` ，值（value）类型为 `int` 的字典**。

!class: view-message-warning
参考 [PEP 585](https://peps.python.org/pep-0585/)，此类型标注需要 Python 版本 $\geq$ 3.9，之前的版本需要引用 `typing` 模块。

> 字面量中的 `Tom`、`Jerry`、`Spike` 是键（Key），`88`、`99`、`66` 是值（Value）。

通过字典后跟方括号（`[]`）键（key）访问元素，例如:  

```python shift
score_list:dict[str,int] = {
    'Tom': 88,
    'Jerry': 99,
    'Spike': 66
}

print(score_list)
print('Jerry 的成绩是', score_list['Jerry'])
```

在数据量较大时，相较于列表，查找时不仅简单，而且速度也要更快。

```python shift
# 通过列表与元组的嵌套保存成绩单
score_list:list[tuple[str, int]] = [('Tom', 88), ('Jerry', 99), ("Spike", 66)]

# 通过循环查找 Jerry 的成绩
index:int = 0
while index < len(score_list):
    if score_list[index][0] == 'Jerry':
        print('Jerry 的成绩是', score_list[index][1])
        break
    index += 1
else:
    print("没有找到 Jerry 的成绩")
```

## 通过 in 判断 key 是否存在

如果尝试读取一个不存在的 key，会产生错误:  

```python shift
score_list:dict[str,int] = {
    'Tom': 88,
    'Jerry': 99,
    'Spike': 66
}

print(score_list['Tuffy'])
```

可以通过 `in` 来判断 key 是否在字典中:  

```python shift
score_list:dict[str,int] = {
    'Tom': 88,
    'Jerry': 99,
    'Spike': 66
}

print('Tuffy' in score_list)
print('Tuffy' not in score_list)
```

## 增加或修改元素

字典后跟方括号（`[]`）键（key）可以增加或修改元素：  

```python shift
score_list:dict[str,int] = {
    'Tom': 88,
    'Jerry': 99,
    'Spike': 66
}

score_list['Spike'] = 77    # Spike 已经存在，因此修改元素的值
score_list['Tuffy'] = 33    # Tuffy 不存在，因此增加元素
print(score_list)
```

## 删除元素

通过 `pop` 方法可以删除字典元素：  

```python shift
score_list:dict[str,int] = {
    'Tom': 88,
    'Jerry': 99,
    'Spike': 66
}

score_list.pop('Jerry')
print(score_list)
```

## 清空字典

通过 `clear` 方法可以清空列表：

```python shift
score_list:dict[str,int] = {
    'Tom': 88,
    'Jerry': 99,
    'Spike': 66
}

score_list.clear()             # 清空列表
print(score_list)
```

## 合并字典

通过 `update` 方法，可以合并另一个字典的元素：  

```python shift
schoole_score_list:dict[str,int] = {
    'Tom': 88,
    'Jerry': 99,
    'Spike': 66
}

class1_score_list:dict[str,int] = {
    'Tom': 77,
    'Tuffy': 33,
}

schoole_score_list.update(class1_score_list) # 将 class1_score_list 合并入 schoole_score_list，class1_score_list 同名键的值将覆盖 schoole_score_list
print(schoole_score_list)
```

## 复制字典

和列表一样，直接将字典赋值给另一个变量，将会互相影响，如果不希望这样，就需要复制字典：  

```python shift
score_list:dict[str,int] = {
    'Tom': 88,
    'Jerry': 99,
    'Spike': 66
}

shadow:dict[str,int] = score_list           # 引用源字典
shadow['Spike'] = 77                        # 通过 shadow 修改，score_list 也受到影响

shadow2:dict[str,int] = dict(score_list)    # 创建新字典
shadow2['Spike'] = 55                       # 通过 shadow2 修改，score_list 不受到影响

print(score_list)
print(shadow)
print(shadow2)
```4:["$","$L12",null,{"titleItems":[{"label":"Python","url":"/document/zh/02.Python/00.index.md"},{"label":"通识基础","url":"/document/zh/99.通识基础/00.index.md"}],"currentTitle":0,"sideItems":[{"label":"预备","items":[{"label":"Python 的简介与安装","url":"/document/zh/02.Python/01.预备/00.Python 的简介与安装.md"},{"label":"第一行代码","url":"/document/zh/02.Python/01.预备/01.第一行代码.md"}]},{"label":"基础语法","items":[{"label":"变量与基本类型","url":"/document/zh/02.Python/02.基础语法/00.变量与基本类型.md"},{"label":"基本运算","url":"/document/zh/02.Python/02.基础语法/01.基本运算.md"},{"label":"标准输入与类型转换","url":"/document/zh/02.Python/02.基础语法/02.标准输入与类型转换.md"},{"label":"条件控制","url":"/document/zh/02.Python/02.基础语法/03.条件控制.md"},{"label":"循环控制","url":"/document/zh/02.Python/02.基础语法/04.循环控制.md"},{"label":"模式匹配","url":"/document/zh/02.Python/02.基础语法/05.模式匹配.md"},{"label":"课后练习","url":"/document/zh/02.Python/02.基础语法/99.课后练习.md"}]},{"label":"容器类型","items":[{"label":"说明","url":"/document/zh/02.Python/03.容器类型/00.说明.md"},{"label":"元组 tuple","url":"/document/zh/02.Python/03.容器类型/01.元组 tuple.md"},{"label":"列表 list","url":"/document/zh/02.Python/03.容器类型/02.列表 list.md"},{"label":"切片操作","url":"/document/zh/02.Python/03.容器类型/03.切片操作.md"},{"label":"字典 dict","url":"/document/zh/02.Python/03.容器类型/04.字典 dict.md"},{"label":"集合 set","url":"/document/zh/02.Python/03.容器类型/05.集合 set.md"},{"label":"容器迭代","url":"/document/zh/02.Python/03.容器类型/06.容器迭代.md"},{"label":"解包操作","url":"/document/zh/02.Python/03.容器类型/07.解包操作.md"},{"label":"模式匹配","url":"/document/zh/02.Python/03.容器类型/08.模式匹配.md"}]}],"currentSide":2,"children":["$","$L13",null,{"maxWidth":"lg","children":"$14"}]}]
