1:"$Sreact.fragment"
2:I[4116,["364","static/chunks/364-ff5ef27fa9e98017.js","972","static/chunks/972-6237aa9dadbd6a6c.js","177","static/chunks/app/layout-68ff378394d423c9.js"],"default"]
3:I[8309,["364","static/chunks/364-ff5ef27fa9e98017.js","972","static/chunks/972-6237aa9dadbd6a6c.js","177","static/chunks/app/layout-68ff378394d423c9.js"],"default"]
4:I[5908,["364","static/chunks/364-ff5ef27fa9e98017.js","972","static/chunks/972-6237aa9dadbd6a6c.js","177","static/chunks/app/layout-68ff378394d423c9.js"],"default"]
5:I[6476,["364","static/chunks/364-ff5ef27fa9e98017.js","972","static/chunks/972-6237aa9dadbd6a6c.js","177","static/chunks/app/layout-68ff378394d423c9.js"],"GlobalStateProvider"]
6:I[7555,[],""]
7:I[1295,[],""]
8:I[6259,["364","static/chunks/364-ff5ef27fa9e98017.js","972","static/chunks/972-6237aa9dadbd6a6c.js","177","static/chunks/app/layout-68ff378394d423c9.js"],"GoogleAnalytics"]
a:I[9665,[],"MetadataBoundary"]
c:I[9665,[],"OutletBoundary"]
f:I[4911,[],"AsyncMetadataOutlet"]
11:I[9665,[],"ViewportBoundary"]
13:I[6614,[],""]
:HL["/primers/_next/static/css/f1209e3eec1749df.css","style"]
:HL["/primers/_next/static/css/f233458f058e8d15.css","style"]
0:{"P":null,"b":"bLvziezeCEpLiXEWXA0xQ","p":"/primers","c":["","document","en","02.Python","07.Process","01.Interprocess%20communication.md"],"i":false,"f":[[["",{"children":["document",{"children":[["lang","en","d"],{"children":[["category","02.Python","d"],{"children":[["chapter","07.Process","d"],{"children":[["doc","01.Interprocess%20communication.md","d"],{"children":["__PAGE__",{}]}]}]}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/primers/_next/static/css/f1209e3eec1749df.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"suppressHydrationWarning":true,"children":[["$","body",null,{"children":["$","$L2",null,{"children":["$","$L3",null,{"theme":"$4","children":[[["$","script","mui-color-scheme-init",{"suppressHydrationWarning":true,"nonce":"$undefined","dangerouslySetInnerHTML":{"__html":"(function() {\ntry {\n  let colorScheme = '';\n  const mode = localStorage.getItem('mui-mode') || 'system';\n  const dark = localStorage.getItem('mui-color-scheme-dark') || 'dark';\n  const light = localStorage.getItem('mui-color-scheme-light') || 'light';\n  if (mode === 'system') {\n    // handle system mode\n    const mql = window.matchMedia('(prefers-color-scheme: dark)');\n    if (mql.matches) {\n      colorScheme = dark\n    } else {\n      colorScheme = light\n    }\n  }\n  if (mode === 'light') {\n    colorScheme = light;\n  }\n  if (mode === 'dark') {\n    colorScheme = dark;\n  }\n  if (colorScheme) {\n    document.documentElement.classList.remove('%s'.replace('%s', light), '%s'.replace('%s', dark));\n      document.documentElement.classList.add('%s'.replace('%s', colorScheme));document.documentElement.setAttribute('.%s', colorScheme);\n  }\n} catch(e){}})();"}}]],["$","$L5",null,{"children":["$","$L6",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]]}]}]}],["$","$L8",null,{"gaId":"G-HEWPX7E6EV"}]]}]]}],{"children":["document",["$","$1","c",{"children":[null,["$","$L6",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":[["lang","en","d"],["$","$1","c",{"children":[null,["$","$L6",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":[["category","02.Python","d"],["$","$1","c",{"children":[null,["$","$L6",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":[["chapter","07.Process","d"],["$","$1","c",{"children":[null,["$","$L6",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":[["doc","01.Interprocess%20communication.md","d"],["$","$1","c",{"children":[null,["$","$L6",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L9",["$","$La",null,{"children":"$Lb"}],[["$","link","0",{"rel":"stylesheet","href":"/primers/_next/static/css/f233458f058e8d15.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","$Lc",null,{"children":["$Ld","$Le",["$","$Lf",null,{"promise":"$@10"}]]}]]}],{},null,false]},null,false]},null,false]},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","ihwXH97xsyhx2ssNVsqXs",{"children":[["$","$L11",null,{"children":"$L12"}],null]}],null]}],false]],"m":"$undefined","G":["$13","$undefined"],"s":false,"S":true}
14:"$Sreact.suspense"
15:I[4911,[],"AsyncMetadata"]
b:["$","$14",null,{"fallback":null,"children":["$","$L15",null,{"promise":"$@16"}]}]
e:null
12:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
d:null
16:{"metadata":[["$","title","0",{"children":"Python Process Interprocess communication - Primers 编程伙伴"}],["$","meta","1",{"name":"description","content":"# Interprocess Communication (IPC)A process has its own independent memory space and resources. Trying to pass information through global variables do"}],["$","link","2",{"rel":"icon","href":"/primers/icon.svg"}]],"error":null,"digest":"$undefined"}
10:{"metadata":"$16:metadata","error":null,"digest":"$undefined"}
17:I[6684,["364","static/chunks/364-ff5ef27fa9e98017.js","882","static/chunks/882-bd2241c75c43bc33.js","198","static/chunks/198-ebc8a337d9c89efe.js","197","static/chunks/app/document/%5Blang%5D/%5Bcategory%5D/%5Bchapter%5D/%5Bdoc%5D/page-f668937397f95766.js"],"default"]
18:I[3267,["364","static/chunks/364-ff5ef27fa9e98017.js","882","static/chunks/882-bd2241c75c43bc33.js","198","static/chunks/198-ebc8a337d9c89efe.js","197","static/chunks/app/document/%5Blang%5D/%5Bcategory%5D/%5Bchapter%5D/%5Bdoc%5D/page-f668937397f95766.js"],"default"]
19:I[8534,["364","static/chunks/364-ff5ef27fa9e98017.js","882","static/chunks/882-bd2241c75c43bc33.js","198","static/chunks/198-ebc8a337d9c89efe.js","197","static/chunks/app/document/%5Blang%5D/%5Bcategory%5D/%5Bchapter%5D/%5Bdoc%5D/page-f668937397f95766.js"],"default"]
1a:I[6384,["364","static/chunks/364-ff5ef27fa9e98017.js","882","static/chunks/882-bd2241c75c43bc33.js","198","static/chunks/198-ebc8a337d9c89efe.js","197","static/chunks/app/document/%5Blang%5D/%5Bcategory%5D/%5Bchapter%5D/%5Bdoc%5D/page-f668937397f95766.js"],"default"]
1b:I[8464,["364","static/chunks/364-ff5ef27fa9e98017.js","882","static/chunks/882-bd2241c75c43bc33.js","198","static/chunks/198-ebc8a337d9c89efe.js","197","static/chunks/app/document/%5Blang%5D/%5Bcategory%5D/%5Bchapter%5D/%5Bdoc%5D/page-f668937397f95766.js"],"default"]
1c:I[4028,["364","static/chunks/364-ff5ef27fa9e98017.js","882","static/chunks/882-bd2241c75c43bc33.js","198","static/chunks/198-ebc8a337d9c89efe.js","197","static/chunks/app/document/%5Blang%5D/%5Bcategory%5D/%5Bchapter%5D/%5Bdoc%5D/page-f668937397f95766.js"],"default"]
1d:I[5712,["364","static/chunks/364-ff5ef27fa9e98017.js","882","static/chunks/882-bd2241c75c43bc33.js","198","static/chunks/198-ebc8a337d9c89efe.js","197","static/chunks/app/document/%5Blang%5D/%5Bcategory%5D/%5Bchapter%5D/%5Bdoc%5D/page-f668937397f95766.js"],"default"]
1e:I[8407,["364","static/chunks/364-ff5ef27fa9e98017.js","882","static/chunks/882-bd2241c75c43bc33.js","198","static/chunks/198-ebc8a337d9c89efe.js","197","static/chunks/app/document/%5Blang%5D/%5Bcategory%5D/%5Bchapter%5D/%5Bdoc%5D/page-f668937397f95766.js"],"default"]
1f:I[7068,["364","static/chunks/364-ff5ef27fa9e98017.js","882","static/chunks/882-bd2241c75c43bc33.js","198","static/chunks/198-ebc8a337d9c89efe.js","197","static/chunks/app/document/%5Blang%5D/%5Bcategory%5D/%5Bchapter%5D/%5Bdoc%5D/page-f668937397f95766.js"],"default"]
20:I[1759,["364","static/chunks/364-ff5ef27fa9e98017.js","882","static/chunks/882-bd2241c75c43bc33.js","198","static/chunks/198-ebc8a337d9c89efe.js","197","static/chunks/app/document/%5Blang%5D/%5Bcategory%5D/%5Bchapter%5D/%5Bdoc%5D/page-f668937397f95766.js"],"default"]
21:I[8015,["364","static/chunks/364-ff5ef27fa9e98017.js","882","static/chunks/882-bd2241c75c43bc33.js","198","static/chunks/198-ebc8a337d9c89efe.js","197","static/chunks/app/document/%5Blang%5D/%5Bcategory%5D/%5Bchapter%5D/%5Bdoc%5D/page-f668937397f95766.js"],"default"]
22:I[5129,["364","static/chunks/364-ff5ef27fa9e98017.js","882","static/chunks/882-bd2241c75c43bc33.js","198","static/chunks/198-ebc8a337d9c89efe.js","197","static/chunks/app/document/%5Blang%5D/%5Bcategory%5D/%5Bchapter%5D/%5Bdoc%5D/page-f668937397f95766.js"],"default"]
36:I[444,["364","static/chunks/364-ff5ef27fa9e98017.js","882","static/chunks/882-bd2241c75c43bc33.js","198","static/chunks/198-ebc8a337d9c89efe.js","197","static/chunks/app/document/%5Blang%5D/%5Bcategory%5D/%5Bchapter%5D/%5Bdoc%5D/page-f668937397f95766.js"],"default"]
9:["$","$L17",null,{"lang":"en","depth":3,"titleItems":[{"label":"Python","url":"/document/en/02.Python"},{"label":"HTML","url":"/document/en/03.HTML"}],"currentTitle":0,"sideGroups":[{"label":"Prepare","items":[{"label":"Introduction & installation","url":"/document/en/02.Python/01.Prepare/00.Introduction & installation.md"},{"label":"First line of code","url":"/document/en/02.Python/01.Prepare/01.First line of code.md"}]},{"label":"Basic syntax","items":[{"label":"Variables and basic types","url":"/document/en/02.Python/02.Basic syntax/00.Variables and basic types.md"},{"label":"Basic operations","url":"/document/en/02.Python/02.Basic syntax/01.Basic operations.md"},{"label":"Input & Type conversion","url":"/document/en/02.Python/02.Basic syntax/02.Input & Type conversion.md"},{"label":"Condition","url":"/document/en/02.Python/02.Basic syntax/03.Condition.md"},{"label":"Loop","url":"/document/en/02.Python/02.Basic syntax/04.Loop.md"},{"label":"Pattern Matching","url":"/document/en/02.Python/02.Basic syntax/05.Pattern Matching.md"},{"label":"Exception","url":"/document/en/02.Python/02.Basic syntax/06.Exception.md"},{"label":"Module","url":"/document/en/02.Python/02.Basic syntax/07.Module.md"}]},{"label":"Container","items":[{"label":"Tuple","url":"/document/en/02.Python/03.Container/01.Tuple.md"},{"label":"List","url":"/document/en/02.Python/03.Container/02.List.md"},{"label":"Slice","url":"/document/en/02.Python/03.Container/03.Slice.md"},{"label":"Dictionary","url":"/document/en/02.Python/03.Container/04.Dictionary.md"},{"label":"Set","url":"/document/en/02.Python/03.Container/05.Set.md"},{"label":"Iteration","url":"/document/en/02.Python/03.Container/06.Iteration.md"},{"label":"Unpack","url":"/document/en/02.Python/03.Container/07.Unpack.md"},{"label":"Pattern Matching","url":"/document/en/02.Python/03.Container/08.Pattern Matching.md"},{"label":"Comprehension","url":"/document/en/02.Python/03.Container/09.Comprehension.md"},{"label":"String","url":"/document/en/02.Python/03.Container/10.String.md"}]},{"label":"Function","items":[{"label":"Create & Invoke","url":"/document/en/02.Python/04.Function/00.Create & Invoke.md"},{"label":"Scope","url":"/document/en/02.Python/04.Function/01.Scope.md"},{"label":"Recursive","url":"/document/en/02.Python/04.Function/02.Recursive.md"},{"label":"Default arguments","url":"/document/en/02.Python/04.Function/03.Default arguments.md"},{"label":"Keyword arguments","url":"/document/en/02.Python/04.Function/04.Keyword arguments.md"},{"label":"Arbitrary arguments","url":"/document/en/02.Python/04.Function/05.Arbitrary arguments.md"},{"label":"Anonymous Functions","url":"/document/en/02.Python/04.Function/06.Anonymous Functions.md"},{"label":"Decorator","url":"/document/en/02.Python/04.Function/07.Decorator.md"}]},{"label":"OOP","items":[{"label":"Explanation","url":"/document/en/02.Python/05.OOP/00.Explanation.md"},{"label":"Create class and object","url":"/document/en/02.Python/05.OOP/01.Create class and object.md"},{"label":"Member visibility","url":"/document/en/02.Python/05.OOP/03.Member visibility.md"},{"label":"Class public members","url":"/document/en/02.Python/05.OOP/04.Class public members.md"},{"label":"Inheritance & Polymorphism","url":"/document/en/02.Python/05.OOP/05.Inheritance & Polymorphism.md"}]},{"label":"Input & Output","items":[{"label":"File","url":"/document/en/02.Python/06.Input & Output/00.File.md"},{"label":"Memory","url":"/document/en/02.Python/06.Input & Output/01.Memory.md"}]},{"label":"Process","items":[{"label":"Create processes","url":"/document/en/02.Python/07.Process/00.Create processes.md"},{"label":"Interprocess communication","url":"/document/en/02.Python/07.Process/01.Interprocess communication.md"},{"label":"Process pool","url":"/document/en/02.Python/07.Process/02.Process pool.md"}]},{"label":"Thread","items":[{"label":"Create threads","url":"/document/en/02.Python/08.Thread/00.Create threads.md"},{"label":"Synchronization","url":"/document/en/02.Python/08.Thread/01.Synchronization.md"},{"label":"Reentrant lock","url":"/document/en/02.Python/08.Thread/02.Reentrant lock.md"},{"label":"Condition variable","url":"/document/en/02.Python/08.Thread/03.Condition variable.md"},{"label":"Thread pool","url":"/document/en/02.Python/08.Thread/04.Thread pool.md"}]},{"label":"Regular Expressions","items":[{"label":"Introduction","url":"/document/en/02.Python/09.Regular Expressions/00.Introduction.md"},{"label":"Usage","url":"/document/en/02.Python/09.Regular Expressions/01.Usage.md"}]},{"label":"Network","items":[{"label":"TCP","url":"/document/en/02.Python/10.Network/01.TCP.md"},{"label":"UDP","url":"/document/en/02.Python/10.Network/02.UDP.md"}]},{"label":"Graphics UI","items":[{"label":"Introduction","url":"/document/en/02.Python/11.Graphics UI/00.Introduction.md"},{"label":"Qt","url":"/document/en/02.Python/11.Graphics UI/01.Qt.md"},{"label":"Qt Theme","url":"/document/en/02.Python/11.Graphics UI/02.Qt Theme.md"}]},{"label":"API Help Manual","items":[{"label":"Built-in functions","url":"/document/en/02.Python/99.API Help Manual/00.Built-in functions.md"},{"label":"Built-in modules","url":"/document/en/02.Python/99.API Help Manual/01.Built-in modules.md"}]}],"selectedSideGroup":6,"selectedDoc":1,"children":[["$","$L18",null,{"sx":{"display":{"xs":"none","md":"block"}},"children":["$","$L18",null,{"sx":{"display":"flex","gap":1,"flexDirection":{"xs":"column","md":"row"}},"children":[["$","$L19",null,{"variant":"contained","color":"info","disableElevation":true,"LinkComponent":"$1a","href":"/document/en/02.Python/07.Process/00.Create processes.md","sx":{"flex":1,"justifyContent":"space-between"},"startIcon":["$","$L1b",null,{}],"endIcon":["$","$L1c",null,{}],"children":["$","$L18",null,{"sx":{"flexShrink":1,"whiteSpace":"nowrap","overflow":"hidden","textOverflow":"ellipsis"},"children":["Python"," / ","Process"," / ","Create processes"]}]}],["$","$L19",null,{"variant":"contained","color":"info","disableElevation":true,"LinkComponent":"$1a","href":"/document/en/02.Python/07.Process/02.Process pool.md","sx":{"flex":1,"justifyContent":"space-between"},"startIcon":["$","$L1c",null,{}],"endIcon":["$","$L1d",null,{}],"children":["$","$L18",null,{"sx":{"flexShrink":1,"whiteSpace":"nowrap","overflow":"hidden","textOverflow":"ellipsis"},"children":["Python"," / ","Process"," / ","Process pool"]}]}]]}]}],["$","$L1e",null,{"sx":{"padding":"1rem"},"children":["$","$L18",null,{"children":[["$","$L1f",null,{"direction":"row","spacing":1,"sx":{"color":"#bbb"},"children":[["$","$L20",null,{}],["$","$L21",null,{"children":["约 ",3463," 字"]}],["$","$L22",null,{}],["$","$L21",null,{"children":["约 ",17," 分钟"]}]]}],["$L23","\n","$L24","\n","$L25","\n","$L26","\n","$L27","\n","$L28","\n","$L29","\n","$L2a","\n","$L2b","\n","$L2c","\n","$L2d","\n","$L2e","\n","$L2f","\n","$L30","\n","$L31","\n","$L32","\n","$L33","\n","$L34","\n","$L35"],["$","$L1f",null,{"direction":"row","spacing":1,"sx":{"color":"#bbb","marginTop":"1rem"},"children":[["$","$L36",null,{}],["$","$L21",null,{"children":["创建于 ","5/15/2025, 9:07:16 PM"]}],["$","$L21",null,{"children":["更新于 ","5/15/2025, 9:07:16 PM"]}]]}]]}]}],["$","$L18",null,{"sx":"$undefined","children":["$","$L18",null,{"sx":{"display":"flex","gap":1,"flexDirection":{"xs":"column","md":"row"}},"children":[["$","$L19",null,{"variant":"contained","color":"info","disableElevation":true,"LinkComponent":"$1a","href":"/document/en/02.Python/07.Process/00.Create processes.md","sx":{"flex":1,"justifyContent":"space-between"},"startIcon":["$","$L1b",null,{}],"endIcon":["$","$L1c",null,{}],"children":["$","$L18",null,{"sx":{"flexShrink":1,"whiteSpace":"nowrap","overflow":"hidden","textOverflow":"ellipsis"},"children":["Python"," / ","Process"," / ","Create processes"]}]}],["$","$L19",null,{"variant":"contained","color":"info","disableElevation":true,"LinkComponent":"$1a","href":"/document/en/02.Python/07.Process/02.Process pool.md","sx":{"flex":1,"justifyContent":"space-between"},"startIcon":["$","$L1c",null,{}],"endIcon":["$","$L1d",null,{}],"children":["$","$L18",null,{"sx":{"flexShrink":1,"whiteSpace":"nowrap","overflow":"hidden","textOverflow":"ellipsis"},"children":["Python"," / ","Process"," / ","Process pool"]}]}]]}]}]]}]
24:["$","$L21","p-0",{"variant":"body1","className":"$undefined","sx":{"fontSize":"1rem","fontWeight":"normal","marginBlock":"8px"},"children":"A process has its own independent memory space and resources. Trying to pass information through global variables doesn't work."}]
25:["$","$L21","p-1",{"variant":"body1","className":"$undefined","sx":{"fontSize":"1rem","fontWeight":"normal","marginBlock":"8px"},"children":"For example, in the code below, the child process prints an empty string instead of Ciallo～(∠・ω< )⌒★:"}]
26:["$","pre","pre-0",{"className":"$undefined","children":"$L37"}]
27:["$","$L21","p-2",{"variant":"body1","className":"$undefined","sx":{"fontSize":"1rem","fontWeight":"normal","marginBlock":"8px"},"children":"In Python, you can use a Queue or Pipe from the multiprocessing module for interprocess communication (IPC)."}]
29:["$","$L21","p-3",{"variant":"body1","className":"$undefined","sx":{"fontSize":"1rem","fontWeight":"normal","marginBlock":"8px"},"children":"Create a queue with the Queue class from the multiprocessing module. Use the put method to add data to the tail and the get method to remove data from the head."}]
2a:["$","pre","pre-1",{"className":"$undefined","children":"$L38"}]
2b:["$","$L21","p-4",{"variant":"body1","className":"$undefined","sx":{"fontSize":"1rem","fontWeight":"normal","marginBlock":"8px"},"children":"Example:"}]
2c:["$","pre","pre-2",{"className":"$undefined","children":"$L39"}]
2d:["$","$L21","p-5",{"variant":"body1","className":"$undefined","sx":{"fontSize":"1rem","fontWeight":"normal","marginBlock":"8px"},"children":"Output:"}]
2e:["$","pre","pre-3",{"className":"$undefined","children":"$L3a"}]
30:["$","$L21","p-6",{"variant":"body1","className":"$undefined","sx":{"fontSize":"1rem","fontWeight":"normal","marginBlock":"8px"},"children":"Use the Pipe function from the multiprocessing module to create a pipe. It returns two connection endpoints—data written on one end can be read from the other."}]
31:["$","pre","pre-4",{"className":"$undefined","children":"$L3b"}]
32:["$","$L21","p-7",{"variant":"body1","className":"$undefined","sx":{"fontSize":"1rem","fontWeight":"normal","marginBlock":"8px"},"children":"Example:"}]
33:["$","pre","pre-5",{"className":"$undefined","children":"$L3c"}]
34:["$","$L21","p-8",{"variant":"body1","className":"$undefined","sx":{"fontSize":"1rem","fontWeight":"normal","marginBlock":"8px"},"children":"Output:"}]
35:["$","pre","pre-6",{"className":"$undefined","children":"$L3d"}]
37:["$","$L18","code-0",{"sx":{"marginBlock":"8px"},"children":["$","code",null,{"className":"language-python hljs","dangerouslySetInnerHTML":{"__html":"<span class=\"hljs-keyword\">from</span> multiprocessing <span class=\"hljs-keyword\">import</span> Process\n\nmessage: <span class=\"hljs-built_in\">str</span> = <span class=\"hljs-string\">''</span>\n\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">worker</span>():\n    <span class=\"hljs-built_in\">print</span>(message)\n\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">'__main__'</span>:\n    message = <span class=\"hljs-string\">'Ciallo～(∠・ω&lt; )⌒★'</span>      <span class=\"hljs-comment\"># Attempting to send data</span>\n    p = Process(target=worker)         <span class=\"hljs-comment\"># Create process</span>\n    p.start()                          <span class=\"hljs-comment\"># Start process</span>\n    p.join()                           <span class=\"hljs-comment\"># Wait for process to finish</span>\n"}}]}]
3e:T696,<span class="hljs-keyword">from</span> multiprocessing <span class="hljs-keyword">import</span> Process, Queue

<span class="hljs-comment"># Producer, sends data</span>
<span class="hljs-keyword">def</span> <span class="hljs-title function_">producer</span>(<span class="hljs-params">q: Queue</span>):
    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">5</span>):
        q.put(i)                        <span class="hljs-comment"># Send data</span>
    q.put(<span class="hljs-literal">None</span>)                         <span class="hljs-comment"># Send None to signal end</span>

<span class="hljs-comment"># Consumer, receives data</span>
<span class="hljs-keyword">def</span> <span class="hljs-title function_">consumer</span>(<span class="hljs-params">q: Queue</span>):
    <span class="hljs-keyword">while</span> (item := q.get()) <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:
        <span class="hljs-built_in">print</span>(<span class="hljs-string">f'Received <span class="hljs-subst">{item}</span>'</span>)

<span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">'__main__'</span>:
    q = Queue()                         <span class="hljs-comment"># Create queue</span>
    p1 = Process(target=producer, args=(q,))
    p2 = Process(target=consumer, args=(q,))
    p1.start()                          <span class="hljs-comment"># Start processes</span>
    p2.start()
    p1.join()                           <span class="hljs-comment"># Wait for processes to finish</span>
    p2.join()
39:["$","$L18","code-0",{"sx":{"marginBlock":"8px"},"children":["$","code",null,{"className":"language-python hljs","dangerouslySetInnerHTML":{"__html":"$3e"}}]}]
3a:["$","$L18","code-0",{"sx":{"marginBlock":"8px"},"children":["$","code",null,{"className":"language-text hljs","dangerouslySetInnerHTML":{"__html":"Received 0\nReceived 1\nReceived 2\nReceived 3\nReceived 4\n"}}]}]
3f:T71c,<span class="hljs-keyword">from</span> multiprocessing <span class="hljs-keyword">import</span> Process, Pipe
<span class="hljs-keyword">from</span> multiprocessing.connection <span class="hljs-keyword">import</span> PipeConnection

<span class="hljs-comment"># Producer, sends data</span>
<span class="hljs-keyword">def</span> <span class="hljs-title function_">producer</span>(<span class="hljs-params">tx: PipeConnection</span>):
    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">5</span>):
        tx.send(i)                    <span class="hljs-comment"># Send data</span>
    tx.send(<span class="hljs-literal">None</span>)                     <span class="hljs-comment"># Send None to signal end</span>

<span class="hljs-comment"># Consumer, receives data</span>
<span class="hljs-keyword">def</span> <span class="hljs-title function_">consumer</span>(<span class="hljs-params">rx: PipeConnection</span>):
    <span class="hljs-keyword">while</span> (item := rx.recv()) <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:
        <span class="hljs-built_in">print</span>(<span class="hljs-string">f'Received <span class="hljs-subst">{item}</span>'</span>)

<span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">'__main__'</span>:
    tx, rx = Pipe()                   <span class="hljs-comment"># Create pipe</span>
    p1 = Process(target=producer, args=(tx,))
    p2 = Process(target=consumer, args=(rx,))
    p1.start()                        <span class="hljs-comment"># Start processes</span>
    p2.start()
    p1.join()                         <span class="hljs-comment"># Wait for processes to finish</span>
    p2.join()
3c:["$","$L18","code-0",{"sx":{"marginBlock":"8px"},"children":["$","code",null,{"className":"language-python hljs","dangerouslySetInnerHTML":{"__html":"$3f"}}]}]
3d:["$","$L18","code-0",{"sx":{"marginBlock":"8px"},"children":["$","code",null,{"className":"language-text hljs","dangerouslySetInnerHTML":{"__html":"Received 0\nReceived 1\nReceived 2\nReceived 3\nReceived 4\n"}}]}]
23:["$","$L21","h1-0",{"id":"1f5918","variant":"h1","className":"$undefined","sx":{"fontSize":"2.5rem","fontWeight":"bolder","marginBlock":"1rem"},"children":[["$","$L1a",null,{"sx":{"paddingRight":1},"href":"#1f5918","children":"#"}],"Interprocess Communication (IPC)"]}]
28:["$","$L21","h2-0",{"id":"3b2fe0","variant":"h2","className":"$undefined","sx":{"fontSize":"2.25rem","fontWeight":"bolder","marginBlock":"1rem"},"children":[["$","$L1a",null,{"sx":{"paddingRight":1},"href":"#3b2fe0","children":"#"}],"Queue"]}]
2f:["$","$L21","h2-1",{"id":"3725db","variant":"h2","className":"$undefined","sx":{"fontSize":"2.25rem","fontWeight":"bolder","marginBlock":"1rem"},"children":[["$","$L1a",null,{"sx":{"paddingRight":1},"href":"#3725db","children":"#"}],"Pipe"]}]
40:Ta24,<svg xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://www.w3.org/2000/svg" viewBox="0.00 0.00 208.00 191.00" height="191pt" width="208pt">
<g transform="scale(1 1) rotate(0) translate(4 187)" class="graph" id="graph0">
<title>QueueTopology</title>
<polygon points="-4,4 -4,-187 204,-187 204,4 -4,4" stroke="none" fill="white"></polygon>

<g class="node" id="node1">
<title>queue</title>
<polygon points="1.54,-73.5 1.54,-109.5 192.46,-109.5 192.46,-73.5 1.54,-73.5" stroke="black" fill="none"></polygon>
<text font-size="14.00" font-family="Arial" y="-87.3" x="26.27" text-anchor="middle">Head</text>
<polyline points="51.01,-73.5 51.01,-109.5" stroke="black" fill="none"></polyline>
<text font-size="14.00" font-family="Arial" y="-87.3" x="63.68" text-anchor="middle">A</text>
<polyline points="76.34,-73.5 76.34,-109.5" stroke="black" fill="none"></polyline>
<text font-size="14.00" font-family="Arial" y="-87.3" x="89.01" text-anchor="middle">B</text>
<polyline points="101.68,-73.5 101.68,-109.5" stroke="black" fill="none"></polyline>
<text font-size="14.00" font-family="Arial" y="-87.3" x="114.74" text-anchor="middle">C</text>
<polyline points="127.79,-73.5 127.79,-109.5" stroke="black" fill="none"></polyline>
<text font-size="14.00" font-family="Arial" y="-87.3" x="140.85" text-anchor="middle">D</text>
<polyline points="153.9,-73.5 153.9,-109.5" stroke="black" fill="none"></polyline>
<text font-size="14.00" font-family="Arial" y="-87.3" x="173.18" text-anchor="middle">Tail</text>
</g>

<g class="node" id="node2">
<title>get()</title>
<polygon points="0,-0.5 0,-36.5 54,-36.5 54,-0.5 0,-0.5" stroke="black" fill="none"></polygon>
<text font-size="14.00" font-family="Arial" y="-14.3" x="26.89" text-anchor="middle">get()</text>
</g>

<g class="edge" id="edge1">
<title>queue:f0-&gt;get()</title>
<path d="M26.27,-73C26.27,-64.98 26.36,-56.29 26.46,-48.28" stroke="black" fill="none"></path>
<polygon points="29.96,-48.41 26.62,-38.36 22.96,-48.3 29.96,-48.41" stroke="black" fill="black"></polygon>
</g>

<g class="node" id="node3">
<title>put()</title>
<polygon points="146,-146.5 146,-182.5 200,-182.5 200,-146.5 146,-146.5" stroke="black" fill="none"></polygon>
<text font-size="14.00" font-family="Arial" y="-160.3" x="172.89" text-anchor="middle">put()</text>
</g>

<g class="edge" id="edge2">
<title>put()-&gt;queue:f5</title>
<path d="M173.09,-146.15C173.12,-138.87 173.15,-130.08 173.17,-121.33" stroke="black" fill="none"></path>
<polygon points="176.67,-121.52 173.18,-111.51 169.67,-121.51 176.67,-121.52" stroke="black" fill="black"></polygon>
</g>
</g>
</svg>38:["$","$L18","code-0",{"className":"graphviz","sx":{"marginBlock":"8px","textAlign":"center","whiteSpace":"normal"},"dangerouslySetInnerHTML":{"__html":"$40"}}]
41:Tb40,<svg xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://www.w3.org/2000/svg" viewBox="0.00 0.00 369.86 59.77" height="60pt" width="370pt">
<g transform="scale(1 1) rotate(0) translate(4 55.77)" class="graph" id="graph0">
<title>PipeStructure</title>
<polygon points="-4,4 -4,-55.77 365.86,-55.77 365.86,4 -4,4" stroke="none" fill="white"></polygon>

<g class="node" id="node1">
<title>end1</title>
<polygon points="82.94,-40.97 0,-40.97 0,-4.97 82.94,-4.97 82.94,-40.97" stroke="black" fill="none"></polygon>
<text font-size="14.00" font-family="Arial" y="-18.77" x="41.47" text-anchor="middle">Endpoint 1</text>
</g>

<g class="node" id="node2">
<title>buffer</title>
<polygon points="153.93,-4.97 153.93,-40.97 207.93,-40.97 207.93,-4.97 153.93,-4.97" stroke="black" fill="none"></polygon>
<text font-size="14.00" font-family="Arial" y="-18.87" x="180.61" text-anchor="middle">Buffer</text>
</g>

<g class="edge" id="edge1">
<title>end1-&gt;buffer</title>
<path d="M83.43,-32.05C99.77,-34.56 118.74,-36.08 135.93,-33.97 138.1,-33.7 140.31,-33.36 142.54,-32.97" stroke="green" fill="none"></path>
<polygon points="143.05,-36.44 152.12,-30.97 141.62,-29.59 143.05,-36.44" stroke="green" fill="green"></polygon>
<text font-size="14.00" font-family="Times,serif" y="-39.17" x="118.44" text-anchor="middle">send()</text>
</g>


<g class="edge" id="edge6">
<title>buffer-&gt;end1</title>
<path d="M153.61,-8.24C147.94,-5.73 141.87,-3.5 135.93,-2.17 122.5,0.85 107.98,-0.27 94.48,-3.15" stroke="purple" fill="none"></path>
<polygon points="93.73,0.27 84.89,-5.57 95.44,-6.52 93.73,0.27" stroke="purple" fill="purple"></polygon>
<text font-size="14.00" font-family="Times,serif" y="-6.37" x="118.44" text-anchor="middle">recv()</text>
</g>

<g class="node" id="node3">
<title>end2</title>
<polygon points="361.86,-40.97 278.92,-40.97 278.92,-4.97 361.86,-4.97 361.86,-40.97" stroke="black" fill="none"></polygon>
<text font-size="14.00" font-family="Arial" y="-18.77" x="320.39" text-anchor="middle">Endpoint 2</text>
</g>

<g class="edge" id="edge2">
<title>buffer-&gt;end2</title>
<path d="M208.26,-30.66C214.03,-32.04 220.15,-33.26 225.93,-33.97 239.36,-35.62 253.88,-35.05 267.38,-33.53" stroke="green" fill="none"></path>
<polygon points="267.49,-37.05 276.93,-32.25 266.56,-30.11 267.49,-37.05" stroke="green" fill="green"></polygon>
<text font-size="14.00" font-family="Times,serif" y="-39.17" x="243.42" text-anchor="middle">recv()</text>
</g>


<g class="edge" id="edge5">
<title>end2-&gt;buffer</title>
<path d="M278.44,-5.94C262.1,-1.21 243.12,1.69 225.93,-2.17 223.61,-2.69 221.27,-3.35 218.94,-4.1" stroke="purple" fill="none"></path>
<polygon points="217.72,-0.82 209.66,-7.7 220.25,-7.35 217.72,-0.82" stroke="purple" fill="purple"></polygon>
<text font-size="14.00" font-family="Times,serif" y="-6.37" x="243.42" text-anchor="middle">send()</text>
</g>
</g>
</svg>3b:["$","$L18","code-0",{"className":"graphviz","sx":{"marginBlock":"8px","textAlign":"center","whiteSpace":"normal"},"dangerouslySetInnerHTML":{"__html":"$41"}}]
